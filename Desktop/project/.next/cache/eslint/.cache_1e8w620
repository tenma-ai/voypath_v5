[{"/Users/kominetenma/Desktop/project/app/add-place/page.tsx":"1","/Users/kominetenma/Desktop/project/app/join/page.tsx":"2","/Users/kominetenma/Desktop/project/app/layout.tsx":"3","/Users/kominetenma/Desktop/project/app/my-trip/chat/page.tsx":"4","/Users/kominetenma/Desktop/project/app/my-trip/layout.tsx":"5","/Users/kominetenma/Desktop/project/app/my-trip/page.tsx":"6","/Users/kominetenma/Desktop/project/app/my-trip/share/page.tsx":"7","/Users/kominetenma/Desktop/project/app/page.tsx":"8","/Users/kominetenma/Desktop/project/app/profile/page.tsx":"9","/Users/kominetenma/Desktop/project/app/trips/[id]/chat/page.tsx":"10","/Users/kominetenma/Desktop/project/app/trips/[id]/page.tsx":"11","/Users/kominetenma/Desktop/project/app/trips/[id]/places/page.tsx":"12","/Users/kominetenma/Desktop/project/app/trips/[id]/share/page.tsx":"13","/Users/kominetenma/Desktop/project/app/trips/edit/[id]/page.tsx":"14","/Users/kominetenma/Desktop/project/app/trips/new/page.tsx":"15","/Users/kominetenma/Desktop/project/components/auth/guest-profile-prompt.tsx":"16","/Users/kominetenma/Desktop/project/components/chat/group-chat.tsx":"17","/Users/kominetenma/Desktop/project/components/layouts/main-layout.tsx":"18","/Users/kominetenma/Desktop/project/components/navigation/bottom-navigation.tsx":"19","/Users/kominetenma/Desktop/project/components/navigation/top-app-bar.tsx":"20","/Users/kominetenma/Desktop/project/components/places/add-place-form.tsx":"21","/Users/kominetenma/Desktop/project/components/places/fixed-wishlist-manager.tsx":"22","/Users/kominetenma/Desktop/project/components/places/google-places-search.tsx":"23","/Users/kominetenma/Desktop/project/components/places/map-view.tsx":"24","/Users/kominetenma/Desktop/project/components/places/place-search.tsx":"25","/Users/kominetenma/Desktop/project/components/places/trip-places-manager.tsx":"26","/Users/kominetenma/Desktop/project/components/places/wishlist-manager.tsx":"27","/Users/kominetenma/Desktop/project/components/share/share-manager.tsx":"28","/Users/kominetenma/Desktop/project/components/theme-provider.tsx":"29","/Users/kominetenma/Desktop/project/components/trips/create-trip-form.tsx":"30","/Users/kominetenma/Desktop/project/components/trips/edit-trip-form.tsx":"31","/Users/kominetenma/Desktop/project/components/trips/trip-list.tsx":"32","/Users/kominetenma/Desktop/project/components/trips/trip-selector.tsx":"33","/Users/kominetenma/Desktop/project/components/ui/accordion.tsx":"34","/Users/kominetenma/Desktop/project/components/ui/alert-dialog.tsx":"35","/Users/kominetenma/Desktop/project/components/ui/alert.tsx":"36","/Users/kominetenma/Desktop/project/components/ui/aspect-ratio.tsx":"37","/Users/kominetenma/Desktop/project/components/ui/avatar.tsx":"38","/Users/kominetenma/Desktop/project/components/ui/badge.tsx":"39","/Users/kominetenma/Desktop/project/components/ui/breadcrumb.tsx":"40","/Users/kominetenma/Desktop/project/components/ui/button.tsx":"41","/Users/kominetenma/Desktop/project/components/ui/calendar.tsx":"42","/Users/kominetenma/Desktop/project/components/ui/card.tsx":"43","/Users/kominetenma/Desktop/project/components/ui/carousel.tsx":"44","/Users/kominetenma/Desktop/project/components/ui/chart.tsx":"45","/Users/kominetenma/Desktop/project/components/ui/checkbox.tsx":"46","/Users/kominetenma/Desktop/project/components/ui/collapsible.tsx":"47","/Users/kominetenma/Desktop/project/components/ui/command.tsx":"48","/Users/kominetenma/Desktop/project/components/ui/context-menu.tsx":"49","/Users/kominetenma/Desktop/project/components/ui/dialog.tsx":"50","/Users/kominetenma/Desktop/project/components/ui/drawer.tsx":"51","/Users/kominetenma/Desktop/project/components/ui/dropdown-menu.tsx":"52","/Users/kominetenma/Desktop/project/components/ui/form.tsx":"53","/Users/kominetenma/Desktop/project/components/ui/hover-card.tsx":"54","/Users/kominetenma/Desktop/project/components/ui/input-otp.tsx":"55","/Users/kominetenma/Desktop/project/components/ui/input.tsx":"56","/Users/kominetenma/Desktop/project/components/ui/label.tsx":"57","/Users/kominetenma/Desktop/project/components/ui/menubar.tsx":"58","/Users/kominetenma/Desktop/project/components/ui/navigation-menu.tsx":"59","/Users/kominetenma/Desktop/project/components/ui/no-trip-selected-backup.tsx":"60","/Users/kominetenma/Desktop/project/components/ui/no-trip-selected.tsx":"61","/Users/kominetenma/Desktop/project/components/ui/pagination.tsx":"62","/Users/kominetenma/Desktop/project/components/ui/popover.tsx":"63","/Users/kominetenma/Desktop/project/components/ui/progress.tsx":"64","/Users/kominetenma/Desktop/project/components/ui/radio-group.tsx":"65","/Users/kominetenma/Desktop/project/components/ui/resizable.tsx":"66","/Users/kominetenma/Desktop/project/components/ui/scroll-area.tsx":"67","/Users/kominetenma/Desktop/project/components/ui/select.tsx":"68","/Users/kominetenma/Desktop/project/components/ui/separator.tsx":"69","/Users/kominetenma/Desktop/project/components/ui/sheet.tsx":"70","/Users/kominetenma/Desktop/project/components/ui/skeleton.tsx":"71","/Users/kominetenma/Desktop/project/components/ui/slider.tsx":"72","/Users/kominetenma/Desktop/project/components/ui/sonner.tsx":"73","/Users/kominetenma/Desktop/project/components/ui/switch.tsx":"74","/Users/kominetenma/Desktop/project/components/ui/table.tsx":"75","/Users/kominetenma/Desktop/project/components/ui/tabs.tsx":"76","/Users/kominetenma/Desktop/project/components/ui/textarea.tsx":"77","/Users/kominetenma/Desktop/project/components/ui/toast.tsx":"78","/Users/kominetenma/Desktop/project/components/ui/toaster.tsx":"79","/Users/kominetenma/Desktop/project/components/ui/toggle-group.tsx":"80","/Users/kominetenma/Desktop/project/components/ui/toggle.tsx":"81","/Users/kominetenma/Desktop/project/components/ui/tooltip.tsx":"82","/Users/kominetenma/Desktop/project/components/ui/trip-selector-modal.tsx":"83","/Users/kominetenma/Desktop/project/components/user/user-avatar.tsx":"84","/Users/kominetenma/Desktop/project/lib/actions/guest-actions.ts":"85","/Users/kominetenma/Desktop/project/lib/actions/my-places-actions.ts":"86","/Users/kominetenma/Desktop/project/lib/actions/place-actions.ts":"87","/Users/kominetenma/Desktop/project/lib/actions/trip-actions.ts":"88","/Users/kominetenma/Desktop/project/lib/contexts/trip-context.tsx":"89","/Users/kominetenma/Desktop/project/lib/database.types.ts":"90","/Users/kominetenma/Desktop/project/lib/stores/guest-store.ts":"91","/Users/kominetenma/Desktop/project/lib/supabase/client.ts":"92","/Users/kominetenma/Desktop/project/lib/supabase/server.ts":"93","/Users/kominetenma/Desktop/project/lib/utils.ts":"94","/Users/kominetenma/Desktop/project/app/my-trip/my-places/add/page.tsx":"95","/Users/kominetenma/Desktop/project/app/my-trip/my-places/page.tsx":"96","/Users/kominetenma/Desktop/project/components/places/calendar-date-cell.tsx":"97","/Users/kominetenma/Desktop/project/components/places/places-search-modal.tsx":"98","/Users/kominetenma/Desktop/project/components/places/temporary-place-pin.tsx":"99","/Users/kominetenma/Desktop/project/lib/optimization/algorithm-types.ts":"100","/Users/kominetenma/Desktop/project/lib/optimization/cluster-internal-optimizer.ts":"101","/Users/kominetenma/Desktop/project/lib/optimization/complete-optimizer.ts":"102","/Users/kominetenma/Desktop/project/lib/optimization/data-fetcher.ts":"103","/Users/kominetenma/Desktop/project/lib/optimization/data-preprocessor.ts":"104","/Users/kominetenma/Desktop/project/lib/optimization/data-validator.ts":"105","/Users/kominetenma/Desktop/project/lib/optimization/detailed-route-generator.ts":"106","/Users/kominetenma/Desktop/project/lib/optimization/detailed-route-types.ts":"107","/Users/kominetenma/Desktop/project/lib/optimization/distance-cache.ts":"108","/Users/kominetenma/Desktop/project/lib/optimization/fairness-calculator.ts":"109","/Users/kominetenma/Desktop/project/lib/optimization/geographical-clustering.ts":"110","/Users/kominetenma/Desktop/project/lib/optimization/index.ts":"111","/Users/kominetenma/Desktop/project/lib/optimization/normalization-clustering.ts":"112","/Users/kominetenma/Desktop/project/lib/optimization/normalization-types.ts":"113","/Users/kominetenma/Desktop/project/lib/optimization/route-optimizer.ts":"114","/Users/kominetenma/Desktop/project/lib/optimization/route-visualizer.ts":"115","/Users/kominetenma/Desktop/project/lib/optimization/time-allocator.ts":"116","/Users/kominetenma/Desktop/project/lib/optimization/time-constraints.ts":"117","/Users/kominetenma/Desktop/project/lib/optimization/transport-calculator.ts":"118","/Users/kominetenma/Desktop/project/lib/optimization/transport-mode-selector.ts":"119","/Users/kominetenma/Desktop/project/lib/optimization/tsp-optimizer.ts":"120","/Users/kominetenma/Desktop/project/lib/optimization/types.ts":"121","/Users/kominetenma/Desktop/project/lib/optimization/user-association.ts":"122","/Users/kominetenma/Desktop/project/lib/optimization/z-score-normalization.ts":"123","/Users/kominetenma/Desktop/project/lib/types/places.ts":"124","/Users/kominetenma/Desktop/project/lib/utils/language-detection.ts":"125","/Users/kominetenma/Desktop/project/app/database-integration-demo/page.tsx":"126","/Users/kominetenma/Desktop/project/app/interactive-list-demo/page.tsx":"127","/Users/kominetenma/Desktop/project/app/map-test/page.tsx":"128","/Users/kominetenma/Desktop/project/app/test-normalization/page.tsx":"129","/Users/kominetenma/Desktop/project/app/test-paris-data/page.tsx":"130","/Users/kominetenma/Desktop/project/components/places/accessible-timeline.tsx":"131","/Users/kominetenma/Desktop/project/components/places/calendar-view.tsx":"132","/Users/kominetenma/Desktop/project/components/places/collaboration-tracker.tsx":"133","/Users/kominetenma/Desktop/project/components/places/detailed-timeline-view.tsx":"134","/Users/kominetenma/Desktop/project/components/places/enhanced-trip-places-manager.tsx":"135","/Users/kominetenma/Desktop/project/components/places/interactive-list-item.tsx":"136","/Users/kominetenma/Desktop/project/components/places/interactive-list-view.tsx":"137","/Users/kominetenma/Desktop/project/components/places/map-visualization/accessibility-features.tsx":"138","/Users/kominetenma/Desktop/project/components/places/map-visualization/color-strategy.ts":"139","/Users/kominetenma/Desktop/project/components/places/map-visualization/custom-markers.tsx":"140","/Users/kominetenma/Desktop/project/components/places/map-visualization/interactive-map.tsx":"141","/Users/kominetenma/Desktop/project/components/places/map-visualization/lazy-map-loader.tsx":"142","/Users/kominetenma/Desktop/project/components/places/map-visualization/map-controls.tsx":"143","/Users/kominetenma/Desktop/project/components/places/map-visualization/performance-utils.ts":"144","/Users/kominetenma/Desktop/project/components/places/map-visualization/route-visualization.tsx":"145","/Users/kominetenma/Desktop/project/components/places/mobile-timeline-controls.tsx":"146","/Users/kominetenma/Desktop/project/components/places/optimization-suggestions.tsx":"147","/Users/kominetenma/Desktop/project/components/places/timeline-settings.tsx":"148","/Users/kominetenma/Desktop/project/components/places/trip-calendar-integration.tsx":"149","/Users/kominetenma/Desktop/project/lib/__tests__/api-integration.test.ts":"150","/Users/kominetenma/Desktop/project/lib/actions/optimization-actions.ts":"151","/Users/kominetenma/Desktop/project/lib/actions/optimization-server-actions.ts":"152","/Users/kominetenma/Desktop/project/lib/optimization/accommodation-suggester.ts":"153","/Users/kominetenma/Desktop/project/lib/optimization/complete-optimizer-v2.ts":"154","/Users/kominetenma/Desktop/project/lib/optimization/daily-schedule-types.ts":"155","/Users/kominetenma/Desktop/project/lib/optimization/day-splitter.ts":"156","/Users/kominetenma/Desktop/project/lib/optimization/enhanced-time-allocator.ts":"157","/Users/kominetenma/Desktop/project/lib/optimization/meal-scheduler.ts":"158","/Users/kominetenma/Desktop/project/lib/optimization/usage-example.ts":"159","/Users/kominetenma/Desktop/project/lib/services/integrated-route-manager.ts":"160","/Users/kominetenma/Desktop/project/lib/services/real-time-sync.ts":"161","/Users/kominetenma/Desktop/project/lib/services/route-cache.ts":"162","/Users/kominetenma/Desktop/project/lib/services/route-storage.ts":"163","/Users/kominetenma/Desktop/project/lib/test-data/mock-itinerary.ts":"164","/Users/kominetenma/Desktop/project/lib/types/api-errors.ts":"165","/Users/kominetenma/Desktop/project/lib/types/calendar-visualization.ts":"166","/Users/kominetenma/Desktop/project/lib/types/interactive-list.ts":"167","/Users/kominetenma/Desktop/project/lib/types/map-visualization.ts":"168","/Users/kominetenma/Desktop/project/lib/types/route-storage.ts":"169","/Users/kominetenma/Desktop/project/lib/utils/calendar-utils.ts":"170","/Users/kominetenma/Desktop/project/lib/utils/edge-case-handling.ts":"171","/Users/kominetenma/Desktop/project/lib/utils/error-messages.ts":"172","/Users/kominetenma/Desktop/project/lib/utils/error-recovery.ts":"173","/Users/kominetenma/Desktop/project/lib/utils/input-validation.ts":"174","/Users/kominetenma/Desktop/project/lib/utils/interactive-list-utils.ts":"175","/Users/kominetenma/Desktop/project/lib/utils/performance-tracker.ts":"176","/Users/kominetenma/Desktop/project/lib/utils/progress-tracking.ts":"177","/Users/kominetenma/Desktop/project/lib/utils/timeout-management.ts":"178"},{"size":3927,"mtime":1749040483352,"results":"179","hashOfConfig":"180"},{"size":4220,"mtime":1748956661893,"results":"181","hashOfConfig":"180"},{"size":1631,"mtime":1749203030854,"results":"182","hashOfConfig":"180"},{"size":5901,"mtime":1748962612706,"results":"183","hashOfConfig":"180"},{"size":2110,"mtime":1748973182162,"results":"184","hashOfConfig":"180"},{"size":58503,"mtime":1749353756158,"results":"185","hashOfConfig":"180"},{"size":5911,"mtime":1748973182144,"results":"186","hashOfConfig":"180"},{"size":1146,"mtime":1749052832995,"results":"187","hashOfConfig":"180"},{"size":468,"mtime":1748936369786,"results":"188","hashOfConfig":"180"},{"size":581,"mtime":1748956662259,"results":"189","hashOfConfig":"180"},{"size":14954,"mtime":1749097642395,"results":"190","hashOfConfig":"180"},{"size":619,"mtime":1748956662245,"results":"191","hashOfConfig":"180"},{"size":582,"mtime":1748956662270,"results":"192","hashOfConfig":"180"},{"size":386,"mtime":1748973182139,"results":"193","hashOfConfig":"180"},{"size":280,"mtime":1748956661985,"results":"194","hashOfConfig":"180"},{"size":2309,"mtime":1748844496000,"results":"195","hashOfConfig":"180"},{"size":7398,"mtime":1749269297365,"results":"196","hashOfConfig":"180"},{"size":2435,"mtime":1748973182165,"results":"197","hashOfConfig":"180"},{"size":4202,"mtime":1749203055076,"results":"198","hashOfConfig":"180"},{"size":3811,"mtime":1749040483375,"results":"199","hashOfConfig":"180"},{"size":14662,"mtime":1749343493052,"results":"200","hashOfConfig":"180"},{"size":10287,"mtime":1748917958416,"results":"201","hashOfConfig":"180"},{"size":19300,"mtime":1749103352427,"results":"202","hashOfConfig":"180"},{"size":26430,"mtime":1749353576420,"results":"203","hashOfConfig":"180"},{"size":6541,"mtime":1749058171834,"results":"204","hashOfConfig":"180"},{"size":23820,"mtime":1749103352446,"results":"205","hashOfConfig":"180"},{"size":10287,"mtime":1748917855564,"results":"206","hashOfConfig":"180"},{"size":7062,"mtime":1748844496000,"results":"207","hashOfConfig":"180"},{"size":352,"mtime":1748936369820,"results":"208","hashOfConfig":"180"},{"size":11002,"mtime":1749103352413,"results":"209","hashOfConfig":"180"},{"size":10138,"mtime":1748973182165,"results":"210","hashOfConfig":"180"},{"size":8584,"mtime":1749203041146,"results":"211","hashOfConfig":"180"},{"size":4728,"mtime":1749203080707,"results":"212","hashOfConfig":"180"},{"size":2004,"mtime":1748844496000,"results":"213","hashOfConfig":"180"},{"size":4459,"mtime":1748844496000,"results":"214","hashOfConfig":"180"},{"size":1595,"mtime":1748844496000,"results":"215","hashOfConfig":"180"},{"size":158,"mtime":1748844496000,"results":"216","hashOfConfig":"180"},{"size":1430,"mtime":1748844496000,"results":"217","hashOfConfig":"180"},{"size":1134,"mtime":1748844496000,"results":"218","hashOfConfig":"180"},{"size":2724,"mtime":1748844496000,"results":"219","hashOfConfig":"180"},{"size":1846,"mtime":1748844496000,"results":"220","hashOfConfig":"180"},{"size":2633,"mtime":1748844496000,"results":"221","hashOfConfig":"180"},{"size":1905,"mtime":1748844496000,"results":"222","hashOfConfig":"180"},{"size":6296,"mtime":1748844496000,"results":"223","hashOfConfig":"180"},{"size":10551,"mtime":1748844496000,"results":"224","hashOfConfig":"180"},{"size":1078,"mtime":1748844496000,"results":"225","hashOfConfig":"180"},{"size":335,"mtime":1748844496000,"results":"226","hashOfConfig":"180"},{"size":4920,"mtime":1748844496000,"results":"227","hashOfConfig":"180"},{"size":7294,"mtime":1748844496000,"results":"228","hashOfConfig":"180"},{"size":3871,"mtime":1748844496000,"results":"229","hashOfConfig":"180"},{"size":3043,"mtime":1748844496000,"results":"230","hashOfConfig":"180"},{"size":7343,"mtime":1748844496000,"results":"231","hashOfConfig":"180"},{"size":4150,"mtime":1748844496000,"results":"232","hashOfConfig":"180"},{"size":1207,"mtime":1748844496000,"results":"233","hashOfConfig":"180"},{"size":2185,"mtime":1748844496000,"results":"234","hashOfConfig":"180"},{"size":851,"mtime":1748844496000,"results":"235","hashOfConfig":"180"},{"size":733,"mtime":1748844496000,"results":"236","hashOfConfig":"180"},{"size":8025,"mtime":1748844496000,"results":"237","hashOfConfig":"180"},{"size":5067,"mtime":1748844496000,"results":"238","hashOfConfig":"180"},{"size":2322,"mtime":1748960318233,"results":"239","hashOfConfig":"180"},{"size":2610,"mtime":1748973182158,"results":"240","hashOfConfig":"180"},{"size":2772,"mtime":1748844496000,"results":"241","hashOfConfig":"180"},{"size":1253,"mtime":1748844496000,"results":"242","hashOfConfig":"180"},{"size":798,"mtime":1748844496000,"results":"243","hashOfConfig":"180"},{"size":1449,"mtime":1749040483352,"results":"244","hashOfConfig":"180"},{"size":1732,"mtime":1748844496000,"results":"245","hashOfConfig":"180"},{"size":1665,"mtime":1748844496000,"results":"246","hashOfConfig":"180"},{"size":5652,"mtime":1748844496000,"results":"247","hashOfConfig":"180"},{"size":777,"mtime":1748844496000,"results":"248","hashOfConfig":"180"},{"size":4305,"mtime":1748844496000,"results":"249","hashOfConfig":"180"},{"size":264,"mtime":1748844496000,"results":"250","hashOfConfig":"180"},{"size":1226,"mtime":1748973406992,"results":"251","hashOfConfig":"180"},{"size":902,"mtime":1748844496000,"results":"252","hashOfConfig":"180"},{"size":1198,"mtime":1749040483352,"results":"253","hashOfConfig":"180"},{"size":2784,"mtime":1748844496000,"results":"254","hashOfConfig":"180"},{"size":1909,"mtime":1748844496000,"results":"255","hashOfConfig":"180"},{"size":778,"mtime":1748844496000,"results":"256","hashOfConfig":"180"},{"size":4883,"mtime":1748844496000,"results":"257","hashOfConfig":"180"},{"size":792,"mtime":1748844496000,"results":"258","hashOfConfig":"180"},{"size":1767,"mtime":1748844496000,"results":"259","hashOfConfig":"180"},{"size":1458,"mtime":1748844496000,"results":"260","hashOfConfig":"180"},{"size":1169,"mtime":1748844496000,"results":"261","hashOfConfig":"180"},{"size":5135,"mtime":1748973182158,"results":"262","hashOfConfig":"180"},{"size":631,"mtime":1748844496000,"results":"263","hashOfConfig":"180"},{"size":2151,"mtime":1748956662049,"results":"264","hashOfConfig":"180"},{"size":21568,"mtime":1749343465832,"results":"265","hashOfConfig":"180"},{"size":6377,"mtime":1749040483352,"results":"266","hashOfConfig":"180"},{"size":7226,"mtime":1749103352413,"results":"267","hashOfConfig":"180"},{"size":4975,"mtime":1749106021515,"results":"268","hashOfConfig":"180"},{"size":18827,"mtime":1749197786454,"results":"269","hashOfConfig":"180"},{"size":796,"mtime":1748844496000,"results":"270","hashOfConfig":"180"},{"size":665,"mtime":1748911933777,"results":"271","hashOfConfig":"180"},{"size":1578,"mtime":1749343405037,"results":"272","hashOfConfig":"180"},{"size":2219,"mtime":1749011151346,"results":"273","hashOfConfig":"180"},{"size":8818,"mtime":1749057391012,"results":"274","hashOfConfig":"180"},{"size":27020,"mtime":1749344384054,"results":"275","hashOfConfig":"180"},{"size":10264,"mtime":1749352283003,"results":"276","hashOfConfig":"180"},{"size":2050,"mtime":1749057391011,"results":"277","hashOfConfig":"180"},{"size":1302,"mtime":1749057391033,"results":"278","hashOfConfig":"180"},{"size":3360,"mtime":1749107554950,"results":"279","hashOfConfig":"180"},{"size":4693,"mtime":1749194036689,"results":"280","hashOfConfig":"180"},{"size":8704,"mtime":1749195321261,"results":"281","hashOfConfig":"180"},{"size":9665,"mtime":1749198992893,"results":"282","hashOfConfig":"180"},{"size":9237,"mtime":1749197992266,"results":"283","hashOfConfig":"180"},{"size":11818,"mtime":1749199128672,"results":"284","hashOfConfig":"180"},{"size":14299,"mtime":1749195178757,"results":"285","hashOfConfig":"180"},{"size":3293,"mtime":1749195210153,"results":"286","hashOfConfig":"180"},{"size":2303,"mtime":1749195374345,"results":"287","hashOfConfig":"180"},{"size":7413,"mtime":1749195874354,"results":"288","hashOfConfig":"180"},{"size":11482,"mtime":1749198053313,"results":"289","hashOfConfig":"180"},{"size":5691,"mtime":1749198164781,"results":"290","hashOfConfig":"180"},{"size":8469,"mtime":1749204759307,"results":"291","hashOfConfig":"180"},{"size":2679,"mtime":1749106967000,"results":"292","hashOfConfig":"180"},{"size":14018,"mtime":1749204782052,"results":"293","hashOfConfig":"180"},{"size":10100,"mtime":1749204971449,"results":"294","hashOfConfig":"180"},{"size":4842,"mtime":1749204992333,"results":"295","hashOfConfig":"180"},{"size":7546,"mtime":1749204591789,"results":"296","hashOfConfig":"180"},{"size":7963,"mtime":1749107674795,"results":"297","hashOfConfig":"180"},{"size":6493,"mtime":1749205013360,"results":"298","hashOfConfig":"180"},{"size":7921,"mtime":1749205083099,"results":"299","hashOfConfig":"180"},{"size":3329,"mtime":1749105304575,"results":"300","hashOfConfig":"180"},{"size":6885,"mtime":1749205590810,"results":"301","hashOfConfig":"180"},{"size":7691,"mtime":1749205033370,"results":"302","hashOfConfig":"180"},{"size":3156,"mtime":1749057391014,"results":"303","hashOfConfig":"180"},{"size":2244,"mtime":1749203017463,"results":"304","hashOfConfig":"180"},{"size":20963,"mtime":1749181524442,"results":"305","hashOfConfig":"180"},{"size":8762,"mtime":1749149550016,"results":"306","hashOfConfig":"180"},{"size":14112,"mtime":1749149746356,"results":"307","hashOfConfig":"180"},{"size":12677,"mtime":1749181600997,"results":"308","hashOfConfig":"180"},{"size":8274,"mtime":1749178323507,"results":"309","hashOfConfig":"180"},{"size":19467,"mtime":1749150530236,"results":"310","hashOfConfig":"180"},{"size":17207,"mtime":1749185245256,"results":"311","hashOfConfig":"180"},{"size":17921,"mtime":1749143182995,"results":"312","hashOfConfig":"180"},{"size":16117,"mtime":1749185377599,"results":"313","hashOfConfig":"180"},{"size":25399,"mtime":1749222445084,"results":"314","hashOfConfig":"180"},{"size":20544,"mtime":1749352239300,"results":"315","hashOfConfig":"180"},{"size":21866,"mtime":1749352188400,"results":"316","hashOfConfig":"180"},{"size":18841,"mtime":1749195247281,"results":"317","hashOfConfig":"180"},{"size":7791,"mtime":1749137977157,"results":"318","hashOfConfig":"180"},{"size":12387,"mtime":1749138062538,"results":"319","hashOfConfig":"180"},{"size":19363,"mtime":1749195274963,"results":"320","hashOfConfig":"180"},{"size":10327,"mtime":1749191860197,"results":"321","hashOfConfig":"180"},{"size":11598,"mtime":1749139730273,"results":"322","hashOfConfig":"180"},{"size":21085,"mtime":1749191929888,"results":"323","hashOfConfig":"180"},{"size":11294,"mtime":1749191961637,"results":"324","hashOfConfig":"180"},{"size":12416,"mtime":1749141186459,"results":"325","hashOfConfig":"180"},{"size":19815,"mtime":1749142684192,"results":"326","hashOfConfig":"180"},{"size":15158,"mtime":1749141986426,"results":"327","hashOfConfig":"180"},{"size":13326,"mtime":1749192459397,"results":"328","hashOfConfig":"180"},{"size":19435,"mtime":1749148600593,"results":"329","hashOfConfig":"180"},{"size":33251,"mtime":1749198515492,"results":"330","hashOfConfig":"180"},{"size":18069,"mtime":1749193563063,"results":"331","hashOfConfig":"180"},{"size":8000,"mtime":1749193956999,"results":"332","hashOfConfig":"180"},{"size":17977,"mtime":1749195768778,"results":"333","hashOfConfig":"180"},{"size":4580,"mtime":1749109462123,"results":"334","hashOfConfig":"180"},{"size":13251,"mtime":1749194828683,"results":"335","hashOfConfig":"180"},{"size":8017,"mtime":1749195846760,"results":"336","hashOfConfig":"180"},{"size":10120,"mtime":1749109645959,"results":"337","hashOfConfig":"180"},{"size":9746,"mtime":1749205272735,"results":"338","hashOfConfig":"180"},{"size":13194,"mtime":1749318500717,"results":"339","hashOfConfig":"180"},{"size":13421,"mtime":1749318533535,"results":"340","hashOfConfig":"180"},{"size":11856,"mtime":1749318577434,"results":"341","hashOfConfig":"180"},{"size":19456,"mtime":1749318672869,"results":"342","hashOfConfig":"180"},{"size":11707,"mtime":1749149687903,"results":"343","hashOfConfig":"180"},{"size":9460,"mtime":1749147160170,"results":"344","hashOfConfig":"180"},{"size":6486,"mtime":1749150359004,"results":"345","hashOfConfig":"180"},{"size":7653,"mtime":1749142328712,"results":"346","hashOfConfig":"180"},{"size":5707,"mtime":1749318719982,"results":"347","hashOfConfig":"180"},{"size":8831,"mtime":1749143581742,"results":"348","hashOfConfig":"180"},{"size":14355,"mtime":1749318860788,"results":"349","hashOfConfig":"180"},{"size":18098,"mtime":1749345029353,"results":"350","hashOfConfig":"180"},{"size":22417,"mtime":1749345170616,"results":"351","hashOfConfig":"180"},{"size":19679,"mtime":1749345430862,"results":"352","hashOfConfig":"180"},{"size":17371,"mtime":1749345457273,"results":"353","hashOfConfig":"180"},{"size":12462,"mtime":1749142390038,"results":"354","hashOfConfig":"180"},{"size":14273,"mtime":1749345579825,"results":"355","hashOfConfig":"180"},{"size":16013,"mtime":1749345704738,"results":"356","hashOfConfig":"180"},{"size":17577,"mtime":1749345992725,"results":"357","hashOfConfig":"180"},{"filePath":"358","messages":"359","suppressedMessages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361"},"14no8ap",{"filePath":"362","messages":"363","suppressedMessages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"365","messages":"366","suppressedMessages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"368","messages":"369","suppressedMessages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"371","messages":"372","suppressedMessages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"374","messages":"375","suppressedMessages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"377","messages":"378","suppressedMessages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"380","messages":"381","suppressedMessages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"383","messages":"384","suppressedMessages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"386","messages":"387","suppressedMessages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"389","messages":"390","suppressedMessages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"392","messages":"393","suppressedMessages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"395","messages":"396","suppressedMessages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"398","messages":"399","suppressedMessages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"401","messages":"402","suppressedMessages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"404","messages":"405","suppressedMessages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"407","messages":"408","suppressedMessages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"410","messages":"411","suppressedMessages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"413","messages":"414","suppressedMessages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"416","messages":"417","suppressedMessages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"419","messages":"420","suppressedMessages":"421","errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422"},{"filePath":"423","messages":"424","suppressedMessages":"425","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426"},{"filePath":"427","messages":"428","suppressedMessages":"429","errorCount":2,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430"},{"filePath":"431","messages":"432","suppressedMessages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"434","messages":"435","suppressedMessages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"437","messages":"438","suppressedMessages":"439","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"440","messages":"441","suppressedMessages":"442","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426"},{"filePath":"443","messages":"444","suppressedMessages":"445","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446"},{"filePath":"447","messages":"448","suppressedMessages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"450","messages":"451","suppressedMessages":"452","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"453"},{"filePath":"454","messages":"455","suppressedMessages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"457","messages":"458","suppressedMessages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460"},{"filePath":"461","messages":"462","suppressedMessages":"463","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"464","messages":"465","suppressedMessages":"466","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"467","messages":"468","suppressedMessages":"469","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"470","messages":"471","suppressedMessages":"472","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"473","messages":"474","suppressedMessages":"475","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"476","messages":"477","suppressedMessages":"478","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"479","messages":"480","suppressedMessages":"481","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"482","messages":"483","suppressedMessages":"484","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"485","messages":"486","suppressedMessages":"487","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"488","messages":"489","suppressedMessages":"490","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"491","messages":"492","suppressedMessages":"493","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"494","messages":"495","suppressedMessages":"496","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"497","messages":"498","suppressedMessages":"499","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"500","messages":"501","suppressedMessages":"502","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"503","messages":"504","suppressedMessages":"505","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"506","messages":"507","suppressedMessages":"508","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"509","messages":"510","suppressedMessages":"511","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"512","messages":"513","suppressedMessages":"514","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"515","messages":"516","suppressedMessages":"517","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"518","messages":"519","suppressedMessages":"520","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"521","messages":"522","suppressedMessages":"523","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"524","messages":"525","suppressedMessages":"526","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"527","messages":"528","suppressedMessages":"529","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"530","messages":"531","suppressedMessages":"532","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"533","messages":"534","suppressedMessages":"535","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"536","messages":"537","suppressedMessages":"538","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"539","messages":"540","suppressedMessages":"541","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"542","messages":"543","suppressedMessages":"544","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"545","messages":"546","suppressedMessages":"547","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"548","messages":"549","suppressedMessages":"550","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"551","messages":"552","suppressedMessages":"553","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"554","messages":"555","suppressedMessages":"556","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"557","messages":"558","suppressedMessages":"559","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"560","messages":"561","suppressedMessages":"562","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"563","messages":"564","suppressedMessages":"565","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"566","messages":"567","suppressedMessages":"568","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"569","messages":"570","suppressedMessages":"571","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"572","messages":"573","suppressedMessages":"574","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"575","messages":"576","suppressedMessages":"577","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"578","messages":"579","suppressedMessages":"580","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"581","messages":"582","suppressedMessages":"583","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"584","messages":"585","suppressedMessages":"586","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"587","messages":"588","suppressedMessages":"589","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"590","messages":"591","suppressedMessages":"592","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"593","messages":"594","suppressedMessages":"595","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"596","messages":"597","suppressedMessages":"598","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"599","messages":"600","suppressedMessages":"601","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"602","messages":"603","suppressedMessages":"604","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"605","messages":"606","suppressedMessages":"607","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"608","messages":"609","suppressedMessages":"610","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"611","messages":"612","suppressedMessages":"613","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"614"},{"filePath":"615","messages":"616","suppressedMessages":"617","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"618","messages":"619","suppressedMessages":"620","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"621","messages":"622","suppressedMessages":"623","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"624","messages":"625","suppressedMessages":"626","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"627","messages":"628","suppressedMessages":"629","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"630","messages":"631","suppressedMessages":"632","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"633"},{"filePath":"634","messages":"635","suppressedMessages":"636","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"637","messages":"638","suppressedMessages":"639","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"640","messages":"641","suppressedMessages":"642","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"643","messages":"644","suppressedMessages":"645","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"646","messages":"647","suppressedMessages":"648","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"649","messages":"650","suppressedMessages":"651","errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"652"},{"filePath":"653","messages":"654","suppressedMessages":"655","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"656"},{"filePath":"657","messages":"658","suppressedMessages":"659","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"660","messages":"661","suppressedMessages":"662","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"663","messages":"664","suppressedMessages":"665","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"666","messages":"667","suppressedMessages":"668","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"669","messages":"670","suppressedMessages":"671","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"672","messages":"673","suppressedMessages":"674","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"675","messages":"676","suppressedMessages":"677","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"678","messages":"679","suppressedMessages":"680","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"681","messages":"682","suppressedMessages":"683","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"684","messages":"685","suppressedMessages":"686","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"687","messages":"688","suppressedMessages":"689","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"690","messages":"691","suppressedMessages":"692","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"693","messages":"694","suppressedMessages":"695","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"696","messages":"697","suppressedMessages":"698","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"699","messages":"700","suppressedMessages":"701","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"702","messages":"703","suppressedMessages":"704","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"705","messages":"706","suppressedMessages":"707","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"708","messages":"709","suppressedMessages":"710","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"711","messages":"712","suppressedMessages":"713","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"714","messages":"715","suppressedMessages":"716","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"717","messages":"718","suppressedMessages":"719","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"720","messages":"721","suppressedMessages":"722","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"723","messages":"724","suppressedMessages":"725","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"726","messages":"727","suppressedMessages":"728","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"729","messages":"730","suppressedMessages":"731","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"732","messages":"733","suppressedMessages":"734","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"735","messages":"736","suppressedMessages":"737","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"738","messages":"739","suppressedMessages":"740","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"741","messages":"742","suppressedMessages":"743","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"744","messages":"745","suppressedMessages":"746","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"747","messages":"748","suppressedMessages":"749","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"750"},{"filePath":"751","messages":"752","suppressedMessages":"753","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"754"},{"filePath":"755","messages":"756","suppressedMessages":"757","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"758","messages":"759","suppressedMessages":"760","errorCount":12,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"761"},{"filePath":"762","messages":"763","suppressedMessages":"764","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"765","messages":"766","suppressedMessages":"767","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"768","messages":"769","suppressedMessages":"770","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"771"},{"filePath":"772","messages":"773","suppressedMessages":"774","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"775","messages":"776","suppressedMessages":"777","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"778","messages":"779","suppressedMessages":"780","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"781","messages":"782","suppressedMessages":"783","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"784","messages":"785","suppressedMessages":"786","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"787"},{"filePath":"788","messages":"789","suppressedMessages":"790","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"791","messages":"792","suppressedMessages":"793","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"794"},{"filePath":"795","messages":"796","suppressedMessages":"797","errorCount":1,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"798"},{"filePath":"799","messages":"800","suppressedMessages":"801","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"802","messages":"803","suppressedMessages":"804","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"805","messages":"806","suppressedMessages":"807","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"808","messages":"809","suppressedMessages":"810","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"811","messages":"812","suppressedMessages":"813","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"814","messages":"815","suppressedMessages":"816","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"817","messages":"818","suppressedMessages":"819","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"820","messages":"821","suppressedMessages":"822","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"823","messages":"824","suppressedMessages":"825","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"826","messages":"827","suppressedMessages":"828","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"829","messages":"830","suppressedMessages":"831","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"832","messages":"833","suppressedMessages":"834","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"835","messages":"836","suppressedMessages":"837","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"838","messages":"839","suppressedMessages":"840","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"841","messages":"842","suppressedMessages":"843","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"844","messages":"845","suppressedMessages":"846","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"847","messages":"848","suppressedMessages":"849","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"850","messages":"851","suppressedMessages":"852","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"853","messages":"854","suppressedMessages":"855","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"856","messages":"857","suppressedMessages":"858","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"859","messages":"860","suppressedMessages":"861","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"862"},{"filePath":"863","messages":"864","suppressedMessages":"865","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"866","messages":"867","suppressedMessages":"868","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"869","messages":"870","suppressedMessages":"871","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"872","messages":"873","suppressedMessages":"874","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"875","messages":"876","suppressedMessages":"877","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"878","messages":"879","suppressedMessages":"880","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"881","messages":"882","suppressedMessages":"883","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"884","messages":"885","suppressedMessages":"886","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"887","messages":"888","suppressedMessages":"889","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"890","messages":"891","suppressedMessages":"892","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"893"},{"filePath":"894","messages":"895","suppressedMessages":"896","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"897","messages":"898","suppressedMessages":"899","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"900","messages":"901","suppressedMessages":"902","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"903","messages":"904","suppressedMessages":"905","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"906","messages":"907","suppressedMessages":"908","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"909","messages":"910","suppressedMessages":"911","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kominetenma/Desktop/project/app/add-place/page.tsx",["912"],[],"'use client';\n\nimport { useState, useEffect, useRef, useCallback } from 'react';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport { Button } from '@/components/ui/button';\nimport { Loader2, ArrowLeft } from 'lucide-react';\nimport { useGuestStore } from '@/lib/stores/guest-store';\nimport { useTrip } from '@/lib/contexts/trip-context';\nimport { AddPlaceForm } from '../../components/places/add-place-form';\nimport { createClient } from '@/lib/supabase/client';\nimport { NoTripSelected } from '@/components/ui/no-trip-selected';\n\nexport default function AddPlacePage() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [tripData, setTripData] = useState<any>(null);\n  const hasInitialized = useRef(false);\n  const hasSetActiveTrip = useRef(false);\n  const router = useRouter();\n  const searchParams = useSearchParams();\n  const tripId = searchParams.get('trip_id');\n  const { sessionId } = useGuestStore();\n  const { activeTrip, setActiveTrip } = useTrip();\n  \n  // Memoized function to fetch trip data\n  const fetchTripData = useCallback(async (id: string) => {\n    if (!id) return null;\n    \n    try {\n      const supabase = createClient();\n      const { data, error } = await supabase\n        .from('trip_groups')\n        .select('*')\n        .eq('id', id)\n        .single();\n        \n      if (error) {\n        console.error('Error fetching trip:', error);\n        return null;\n      }\n      \n      return data;\n    } catch (error) {\n      console.error('Error:', error);\n      return null;\n    }\n  }, []);\n  \n  // Load trip data if tripId is provided\n  useEffect(() => {\n    // Prevent multiple data fetches\n    if (hasInitialized.current) return;\n    \n    const initializePage = async () => {\n      if (!tripId) {\n        setIsLoading(false);\n        hasInitialized.current = true;\n        return;\n      }\n      \n      setIsLoading(true);\n      \n      try {\n        const data = await fetchTripData(tripId);\n        \n        if (data) {\n          setTripData(data);\n          \n          // Set active trip only once\n          if (!hasSetActiveTrip.current && (!activeTrip || activeTrip.id !== data.id)) {\n            hasSetActiveTrip.current = true;\n            setActiveTrip(data);\n          }\n        }\n      } finally {\n        setIsLoading(false);\n        hasInitialized.current = true;\n      }\n    };\n    \n    initializePage();\n  }, [tripId, fetchTripData, setActiveTrip]); // Remove activeTrip dependency\n  \n  const handleBack = () => {\n    if (tripId) {\n      router.push(`/my-trip/places?id=${tripId}`);\n    } else {\n      router.push('/my-trip/places');\n    }\n  };\n  \n  const handleSuccess = useCallback(() => {\n    if (tripId) {\n      router.push(`/my-trip/places?id=${tripId}`);\n    } else {\n      router.push('/my-trip/places');\n    }\n  }, [router, tripId]);\n  \n  if (isLoading) {\n    return (\n      <div className=\"container flex items-center justify-center min-h-[60vh]\">\n        <Loader2 className=\"h-8 w-8 animate-spin text-sky-500\" />\n      </div>\n    );\n  }\n  \n  const currentTrip = tripData || activeTrip;\n  \n  if (!currentTrip) {\n    return (\n      <div className=\"container py-8\">\n        <NoTripSelected \n          title=\"No trip selected\"\n          message=\"Please select a trip before adding places\"\n        />\n      </div>\n    );\n  }\n  \n  return (\n    <div className=\"container py-8 pb-24\">\n      <div className=\"flex items-center gap-2 mb-6\">\n        <Button variant=\"ghost\" size=\"sm\" onClick={handleBack}>\n          <ArrowLeft className=\"h-4 w-4 mr-2\" />\n          Back\n        </Button>\n        <h1 className=\"text-2xl font-bold\">Add Place</h1>\n      </div>\n      \n      <div className=\"space-y-2 mb-6\">\n        <p className=\"text-muted-foreground\">\n          Trip: <span className=\"font-medium text-foreground\">{currentTrip.name}</span>\n        </p>\n      </div>\n      \n      <AddPlaceForm tripId={currentTrip.id} onSuccess={handleSuccess} />\n    </div>\n  );\n} ","/Users/kominetenma/Desktop/project/app/join/page.tsx",[],[],"/Users/kominetenma/Desktop/project/app/layout.tsx",[],[],"/Users/kominetenma/Desktop/project/app/my-trip/chat/page.tsx",[],[],"/Users/kominetenma/Desktop/project/app/my-trip/layout.tsx",[],[],"/Users/kominetenma/Desktop/project/app/my-trip/page.tsx",["913"],[],"/Users/kominetenma/Desktop/project/app/my-trip/share/page.tsx",[],[],"/Users/kominetenma/Desktop/project/app/page.tsx",[],[],"/Users/kominetenma/Desktop/project/app/profile/page.tsx",[],[],"/Users/kominetenma/Desktop/project/app/trips/[id]/chat/page.tsx",[],[],"/Users/kominetenma/Desktop/project/app/trips/[id]/page.tsx",[],[],"/Users/kominetenma/Desktop/project/app/trips/[id]/places/page.tsx",[],[],"/Users/kominetenma/Desktop/project/app/trips/[id]/share/page.tsx",[],[],"/Users/kominetenma/Desktop/project/app/trips/edit/[id]/page.tsx",[],[],"/Users/kominetenma/Desktop/project/app/trips/new/page.tsx",[],[],"/Users/kominetenma/Desktop/project/components/auth/guest-profile-prompt.tsx",[],[],"/Users/kominetenma/Desktop/project/components/chat/group-chat.tsx",[],[],"/Users/kominetenma/Desktop/project/components/layouts/main-layout.tsx",[],[],"/Users/kominetenma/Desktop/project/components/navigation/bottom-navigation.tsx",[],[],"/Users/kominetenma/Desktop/project/components/navigation/top-app-bar.tsx",[],[],"/Users/kominetenma/Desktop/project/components/places/add-place-form.tsx",["914","915","916"],[],"'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport { Button } from '@/components/ui/button';\nimport { Card } from '@/components/ui/card';\nimport { Slider } from '@/components/ui/slider';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Switch } from '@/components/ui/switch';\nimport { \n  MapPin, \n  Clock, \n  Star, \n  Heart,\n  CalendarIcon,\n  Loader2,\n  ArrowLeft,\n  Save\n} from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport { addPlaceToMyPlaces } from '@/lib/actions/my-places-actions';\nimport { useToast } from '@/hooks/use-toast';\nimport { useGuestStore } from '@/lib/stores/guest-store';\nimport { useTrip } from '@/lib/contexts/trip-context';\nimport { format } from 'date-fns';\nimport { Calendar } from '@/components/ui/calendar';\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from '@/components/ui/popover';\nimport { SearchResult, MyPlaceData } from '@/lib/types/places';\n\ninterface AddPlaceFormProps {\n  placeData?: SearchResult;\n  onSuccess?: (placeId: string) => void;\n  onError?: (message: string) => void;\n  onCancel?: () => void;\n  defaultDate?: Date;\n  returnPath?: string;\n  groupId?: string;\n  tripId?: string;\n}\n\nexport function AddPlaceForm({\n  placeData,\n  onSuccess,\n  onError,\n  onCancel,\n  defaultDate,\n  returnPath = '/my-places',\n  groupId,\n  tripId\n}: AddPlaceFormProps) {\n  const router = useRouter();\n  const searchParams = useSearchParams();\n  const { toast } = useToast();\n  const { sessionId } = useGuestStore();\n  const { activeTrip } = useTrip();\n  \n  // Get query params\n  const paramPlaceId = searchParams.get('placeId');\n  const paramGroupId = searchParams.get('groupId');\n  const paramDate = searchParams.get('date');\n  const paramSource = searchParams.get('source');\n  \n  // Form state\n  const [preferenceScore, setPreferenceScore] = useState(3);\n  const [preferredDuration, setPreferredDuration] = useState(60); // minutes\n  const [notes, setNotes] = useState('');\n  const [isPersonalFavorite, setIsPersonalFavorite] = useState(false);\n  const [preferredDate, setPreferredDate] = useState<Date | undefined>(\n    defaultDate || (paramDate ? new Date(paramDate) : undefined)\n  );\n  \n  // UI state\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [calendarOpen, setCalendarOpen] = useState(false);\n  \n  // When form is submitted\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!placeData || (!groupId && !activeTrip) || !sessionId) {\n      const errorMsg = \"Missing required data. Please try again.\";\n      console.error('Missing required data for form submission:', {\n        placeData,\n        groupId,\n        activeTrip,\n        sessionId\n      });\n      \n      if (onError) {\n        onError(errorMsg);\n      } else {\n        toast({\n          title: \"Error\",\n          description: errorMsg,\n          variant: \"destructive\",\n        });\n      }\n      return;\n    }\n    \n    setIsSubmitting(true);\n    console.log('Submitting form with data:', {\n      placeData,\n      preferenceScore,\n      preferredDuration,\n      preferredDate,\n      notes,\n      isPersonalFavorite\n    });\n    \n    try {\n      // Prepare data for API call\n      const myPlaceData: Partial<MyPlaceData> = {\n        user_id: null, // Will be filled on server if authenticated\n        session_id: sessionId,\n        group_id: groupId || activeTrip!.id,\n        place_id: placeData.place_id,\n        name: placeData.name,\n        address: placeData.address,\n        latitude: placeData.latitude,\n        longitude: placeData.longitude,\n        preference_score: preferenceScore,\n        preferred_duration: preferredDuration,\n        preferred_date: preferredDate ? format(preferredDate, 'yyyy-MM-dd') : null,\n        notes: notes || null,\n        is_personal_favorite: isPersonalFavorite,\n      };\n      \n      console.log('Sending to database:', myPlaceData);\n      \n      // Add place to my_places\n      const result = await addPlaceToMyPlaces(myPlaceData);\n      \n      console.log('Database result:', result);\n      \n      // Show success toast with auto-integration message\n      toast({\n        title: \"Place added\",\n        description: result.autoAddedToTrip \n          ? \"✅ Added to your wishlist and automatically included in trip optimization\"\n          : \"Added to your wishlist\",\n        variant: \"default\",\n      });\n      \n      // Call success callback or navigate\n      if (onSuccess && result.id) {\n        onSuccess(result.id);\n      } else {\n        // Navigate back or to specified path\n        if (paramSource) {\n          router.back();\n        } else {\n          router.push(returnPath);\n        }\n      }\n    } catch (error) {\n      console.error('Error adding place:', error);\n      const errorMsg = \"Failed to add place. Please try again.\";\n      \n      if (onError) {\n        onError(errorMsg);\n      } else {\n        toast({\n          title: \"Error\",\n          description: errorMsg,\n          variant: \"destructive\",\n        });\n      }\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  \n  // Get label for preference score\n  const getPreferenceLabel = (score: number): string => {\n    switch (score) {\n      case 1: return 'Not interested';\n      case 2: return 'Slightly interested';\n      case 3: return 'Interested';\n      case 4: return 'Very interested';\n      case 5: return 'Must visit';\n      default: return 'Interested';\n    }\n  };\n  \n  // Format duration for display\n  const formatDuration = (minutes: number): string => {\n    if (minutes < 60) return `${minutes} minutes`;\n    if (minutes < 1440) {\n      const hours = Math.floor(minutes / 60);\n      const mins = minutes % 60;\n      return mins > 0 ? `${hours}h ${mins}m` : `${hours} hours`;\n    } else {\n      const days = Math.floor(minutes / 1440);\n      const remainingHours = Math.floor((minutes % 1440) / 60);\n      if (remainingHours > 0) {\n        return `${days} ${days === 1 ? 'day' : 'days'} ${remainingHours}h`;\n      } else {\n        return `${days} ${days === 1 ? 'day' : 'days'}`;\n      }\n    }\n  };\n  \n  // Handle back button\n  const handleBack = () => {\n    if (onCancel) {\n      onCancel();\n    } else {\n      router.back();\n    }\n  };\n  \n  if (!placeData) {\n    return (\n      <div className=\"flex flex-col items-center justify-center p-8\">\n        <p className=\"text-muted-foreground\">No place data provided</p>\n        <Button className=\"mt-4\" onClick={handleBack} variant=\"outline\">\n          <ArrowLeft className=\"h-4 w-4 mr-2\" />\n          Go Back\n        </Button>\n      </div>\n    );\n  }\n  \n  return (\n    <div className=\"container max-w-2xl mx-auto py-4 px-4 sm:px-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between mb-6\">\n        <Button variant=\"ghost\" size=\"sm\" onClick={handleBack}>\n          <ArrowLeft className=\"h-4 w-4 mr-2\" />\n          Back\n        </Button>\n        <h1 className=\"text-2xl font-bold\">Add to Wishlist</h1>\n        <Button \n          onClick={handleSubmit} \n          disabled={isSubmitting}\n          className=\"bg-sky-500 hover:bg-sky-600\"\n        >\n          {isSubmitting ? (\n            <Loader2 className=\"h-4 w-4 animate-spin mr-2\" />\n          ) : (\n            <Save className=\"h-4 w-4 mr-2\" />\n          )}\n          Save\n        </Button>\n      </div>\n      \n      <form onSubmit={handleSubmit} className=\"space-y-8\">\n        {/* Place Preview Card */}\n        <Card className=\"p-4 border shadow-sm\">\n          <div className=\"space-y-3\">\n            <h2 className=\"text-lg font-semibold\">{placeData.name}</h2>\n            <div className=\"flex items-start gap-2 text-muted-foreground\">\n              <MapPin className=\"h-4 w-4 mt-0.5 shrink-0\" />\n              <span className=\"text-sm\">{placeData.address}</span>\n            </div>\n            \n            {/* Photos if available */}\n            {placeData.photos && placeData.photos.length > 0 && (\n              <div className=\"grid grid-cols-3 gap-2 mt-3\">\n                {placeData.photos.map((photo, index) => (\n                  <div key={index} className=\"aspect-square rounded-md overflow-hidden\">\n                    <img \n                      src={photo} \n                      alt={`${placeData.name} photo ${index + 1}`} \n                      className=\"w-full h-full object-cover\"\n                    />\n                  </div>\n                ))}\n              </div>\n            )}\n            \n            {/* Place types if available */}\n            {placeData.types && placeData.types.length > 0 && (\n              <div className=\"flex flex-wrap gap-2 mt-2\">\n                {placeData.types.slice(0, 3).map((type, index) => (\n                  <span \n                    key={index} \n                    className=\"px-2 py-1 bg-gray-100 dark:bg-gray-800 text-xs rounded-full\"\n                  >\n                    {type.replace(/_/g, ' ')}\n                  </span>\n                ))}\n              </div>\n            )}\n          </div>\n        </Card>\n        \n        {/* Preference Score Setting */}\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center justify-between\">\n            <label className=\"text-base font-medium flex items-center gap-2\">\n              <Star className=\"h-5 w-5 text-amber-500\" />\n              Interest Level\n            </label>\n            <span className=\"font-medium text-sm\">\n              {getPreferenceLabel(preferenceScore)}\n            </span>\n          </div>\n          \n          <div className=\"pt-2\">\n            <Slider\n              min={1}\n              max={5}\n              step={1}\n              value={[preferenceScore]}\n              onValueChange={(values) => setPreferenceScore(values[0])}\n              className=\"mt-2\"\n            />\n            <div className=\"flex justify-between text-xs text-muted-foreground mt-2\">\n              <span>Not interested</span>\n              <span>Must visit</span>\n            </div>\n          </div>\n        </div>\n        \n        {/* Stay Duration Setting */}\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center justify-between\">\n            <label className=\"text-base font-medium flex items-center gap-2\">\n              <Clock className=\"h-5 w-5 text-sky-500\" />\n              Visit Duration\n            </label>\n            <span className=\"font-medium text-sm\">\n              {formatDuration(preferredDuration)}\n            </span>\n          </div>\n          \n          <div className=\"pt-2\">\n            <Slider\n              min={15}\n              max={4320}\n              step={15}\n              value={[preferredDuration]}\n              onValueChange={(values) => setPreferredDuration(values[0])}\n              className=\"mt-2\"\n            />\n            <div className=\"flex justify-between text-xs text-muted-foreground mt-2\">\n              <span>15 minutes</span>\n              <span>3 days</span>\n            </div>\n          </div>\n        </div>\n        \n        {/* Preferred Date (optional) */}\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center justify-between\">\n            <label className=\"text-base font-medium flex items-center gap-2\">\n              <CalendarIcon className=\"h-5 w-5 text-violet-500\" />\n              Preferred Date (Optional)\n            </label>\n          </div>\n          \n          <Popover open={calendarOpen} onOpenChange={setCalendarOpen}>\n            <PopoverTrigger asChild>\n              <Button\n                variant=\"outline\"\n                className={cn(\n                  \"w-full justify-start text-left font-normal\",\n                  !preferredDate && \"text-muted-foreground\"\n                )}\n              >\n                <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                {preferredDate ? format(preferredDate, \"PPP\") : \"Select preferred date\"}\n              </Button>\n            </PopoverTrigger>\n            <PopoverContent className=\"w-auto p-0\">\n              <Calendar\n                mode=\"single\"\n                selected={preferredDate}\n                onSelect={(date) => {\n                  setPreferredDate(date);\n                  setCalendarOpen(false);\n                }}\n                initialFocus\n              />\n            </PopoverContent>\n          </Popover>\n          \n          {preferredDate && (\n            <Button \n              variant=\"ghost\" \n              size=\"sm\" \n              onClick={() => setPreferredDate(undefined)} \n              className=\"text-xs\"\n            >\n              Clear date\n            </Button>\n          )}\n        </div>\n        \n        {/* Personal Favorite Toggle */}\n        <div className=\"flex items-center justify-between p-4 border rounded-lg\">\n          <div className=\"flex items-center gap-3\">\n            <Heart className={cn(\n              \"h-5 w-5\",\n              isPersonalFavorite ? \"text-pink-500 fill-pink-500\" : \"text-muted-foreground\"\n            )} />\n            <div>\n              <p className=\"font-medium\">Mark as Favorite</p>\n              <p className=\"text-sm text-muted-foreground\">\n                Favorite places are prioritized in planning\n              </p>\n            </div>\n          </div>\n          <Switch\n            checked={isPersonalFavorite}\n            onCheckedChange={setIsPersonalFavorite}\n          />\n        </div>\n        \n        {/* Notes */}\n        <div className=\"space-y-2\">\n          <label className=\"text-base font-medium\">Notes (Optional)</label>\n          <Textarea\n            placeholder=\"Add any notes about this place...\"\n            value={notes}\n            onChange={(e) => setNotes(e.target.value)}\n            rows={4}\n            className=\"resize-none\"\n          />\n          <p className=\"text-xs text-muted-foreground\">\n            These notes will be visible only to you and won't be shared with the group\n          </p>\n        </div>\n        \n        {/* Submit Button (Bottom) */}\n        <div className=\"pt-4\">\n          <Button \n            type=\"submit\" \n            className=\"w-full bg-sky-500 hover:bg-sky-600\"\n            disabled={isSubmitting}\n          >\n            {isSubmitting ? (\n              <Loader2 className=\"h-4 w-4 animate-spin mr-2\" />\n            ) : (\n              <Save className=\"h-4 w-4 mr-2\" />\n            )}\n            Save to Wishlist\n          </Button>\n          \n          <p className=\"text-xs text-center text-muted-foreground mt-2\">\n            Adding to your wishlist does not guarantee inclusion in the final group itinerary.\n            The optimization algorithm will consider all members' preferences.\n          </p>\n        </div>\n      </form>\n    </div>\n  );\n} ","/Users/kominetenma/Desktop/project/components/places/fixed-wishlist-manager.tsx",["917"],[],"\"use client\";\n\nimport { useState, useEffect } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { MapPin, Search, Star, StarOff, Trash2, Plus, Loader2 } from 'lucide-react';\nimport { useGuestStore } from '@/lib/stores/guest-store';\nimport { createClient } from '@/lib/supabase/client';\nimport PlaceSearch from './place-search';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '@/components/ui/dialog';\n\ninterface Place {\n  id: string;\n  name: string;\n  address: string;\n  is_personal_favorite: boolean;\n  place_id?: string;\n}\n\ninterface DestinationData {\n  name: string;\n  address: string;\n  place_id: string;\n}\n\nexport function WishlistManager() {\n  const [places, setPlaces] = useState<Place[]>([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [isAddPlaceDialogOpen, setIsAddPlaceDialogOpen] = useState(false);\n  const [isAddingPlace, setIsAddingPlace] = useState(false);\n  const { sessionId } = useGuestStore();\n  \n  useEffect(() => {\n    const fetchWishlist = async () => {\n      if (!sessionId) return;\n      \n      const supabase = createClient();\n      \n      const { data, error } = await supabase\n        .from('user_preferences')\n        .select(`\n          id,\n          destination_id,\n          is_personal_favorite,\n          destinations (\n            name,\n            address,\n            place_id\n          )\n        `)\n        .eq('session_id', sessionId)\n        .order('created_at', { ascending: false });\n      \n      if (error) {\n        console.error('Error fetching wishlist:', error);\n        return;\n      }\n      \n      // Transform the data\n      const formattedPlaces = data.map(item => {\n        const destination = item.destinations as unknown as DestinationData;\n        return {\n          id: item.id,\n          name: destination.name,\n          address: destination.address || '',\n          is_personal_favorite: item.is_personal_favorite,\n          place_id: destination.place_id,\n        };\n      });\n      \n      setPlaces(formattedPlaces);\n      setIsLoading(false);\n    };\n    \n    fetchWishlist();\n  }, [sessionId]);\n  \n  const toggleFavorite = async (id: string) => {\n    const place = places.find(p => p.id === id);\n    if (!place) return;\n    \n    const supabase = createClient();\n    \n    const { error } = await supabase\n      .from('user_preferences')\n      .update({ is_personal_favorite: !place.is_personal_favorite })\n      .eq('id', id);\n    \n    if (error) {\n      console.error('Error toggling favorite:', error);\n      return;\n    }\n    \n    setPlaces(places.map(p => \n      p.id === id ? { ...p, is_personal_favorite: !p.is_personal_favorite } : p\n    ));\n  };\n  \n  const removePlace = async (id: string) => {\n    const supabase = createClient();\n    \n    const { error } = await supabase\n      .from('user_preferences')\n      .delete()\n      .eq('id', id);\n    \n    if (error) {\n      console.error('Error removing place:', error);\n      return;\n    }\n    \n    setPlaces(places.filter(p => p.id !== id));\n  };\n  \n  const addNewPlace = async (place: {\n    id: string;\n    name: string;\n    address: string;\n    location: { lat: number; lng: number };\n  }) => {\n    if (!sessionId) return;\n    \n    setIsAddingPlace(true);\n    const supabase = createClient();\n    \n    try {\n      // 1. まず目的地をdestinationsテーブルに保存\n      const { data: destination, error: destinationError } = await supabase\n        .from('destinations')\n        .insert({\n          name: place.name,\n          address: place.address,\n          place_id: place.id,\n          latitude: place.location.lat,\n          longitude: place.location.lng,\n        })\n        .select()\n        .single();\n      \n      if (destinationError) {\n        console.error('Error adding destination:', destinationError);\n        return;\n      }\n      \n      // 2. user_preferencesテーブルに関連付けを保存\n      const { data: preference, error: preferenceError } = await supabase\n        .from('user_preferences')\n        .insert({\n          session_id: sessionId,\n          destination_id: destination.id,\n          is_personal_favorite: true,\n        })\n        .select()\n        .single();\n      \n      if (preferenceError) {\n        console.error('Error adding preference:', preferenceError);\n        return;\n      }\n      \n      // 3. 新しい場所をローカルのplaces配列に追加\n      setPlaces([\n        {\n          id: preference.id,\n          name: place.name,\n          address: place.address,\n          is_personal_favorite: true,\n          place_id: place.id,\n        },\n        ...places\n      ]);\n      \n      // ダイアログを閉じる\n      setIsAddPlaceDialogOpen(false);\n    } catch (error) {\n      console.error('Error in addNewPlace:', error);\n    } finally {\n      setIsAddingPlace(false);\n    }\n  };\n  \n  const filteredPlaces = places.filter(place => \n    place.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    place.address.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  if (isLoading) {\n    return (\n      <div className=\"space-y-4\">\n        <div className=\"relative\">\n          <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground h-4 w-4\" />\n          <Input\n            className=\"pl-9\"\n            placeholder=\"Search places...\"\n            disabled\n          />\n        </div>\n        <div className=\"grid grid-cols-1 gap-4\">\n          {[1, 2, 3].map((i) => (\n            <Card key={i} className=\"animate-pulse\">\n              <CardContent className=\"p-4\">\n                <div className=\"h-5 w-3/4 bg-muted rounded mb-2\"></div>\n                <div className=\"h-4 w-1/2 bg-muted rounded\"></div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"relative\">\n        <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground h-4 w-4\" />\n        <Input\n          className=\"pl-9\"\n          placeholder=\"Search your saved places...\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n        />\n      </div>\n      \n      {places.length === 0 ? (\n        <div className=\"text-center py-8 space-y-2\">\n          <MapPin className=\"mx-auto h-12 w-12 text-muted-foreground\" />\n          <p>Your wishlist is empty</p>\n          <p className=\"text-sm text-muted-foreground\">\n            Add places you'd like to visit from the search\n          </p>\n          <Dialog open={isAddPlaceDialogOpen} onOpenChange={setIsAddPlaceDialogOpen}>\n            <DialogTrigger asChild>\n              <Button className=\"mt-4 bg-sky-500 hover:bg-sky-600\">\n                <Search className=\"mr-2 h-4 w-4\" />\n                Search Places\n              </Button>\n            </DialogTrigger>\n            <DialogContent className=\"sm:max-w-md\">\n              <DialogHeader>\n                <DialogTitle>Add a place to your wishlist</DialogTitle>\n              </DialogHeader>\n              <div className=\"py-4\">\n                <PlaceSearch \n                  placeholder=\"Search for places to add...\" \n                  onPlaceSelect={addNewPlace}\n                />\n              </div>\n            </DialogContent>\n          </Dialog>\n        </div>\n      ) : filteredPlaces.length === 0 ? (\n        <div className=\"text-center py-8\">\n          <p>No places match your search</p>\n        </div>\n      ) : (\n        <div className=\"grid grid-cols-1 gap-3\">\n          {filteredPlaces.map((place) => (\n            <Card key={place.id} className=\"overflow-hidden\">\n              <CardContent className=\"p-4\">\n                <div className=\"flex justify-between items-start\">\n                  <div>\n                    <h3 className=\"font-medium\">{place.name}</h3>\n                    <p className=\"text-sm text-muted-foreground truncate\">\n                      {place.address}\n                    </p>\n                  </div>\n                  <div className=\"flex gap-2\">\n                    <Button\n                      variant=\"ghost\"\n                      size=\"icon\"\n                      onClick={() => toggleFavorite(place.id)}\n                      className={place.is_personal_favorite ? \"text-amber-500\" : \"\"}\n                    >\n                      {place.is_personal_favorite ? (\n                        <Star className=\"h-4 w-4 fill-amber-500\" />\n                      ) : (\n                        <StarOff className=\"h-4 w-4\" />\n                      )}\n                    </Button>\n                    <Button\n                      variant=\"ghost\"\n                      size=\"icon\"\n                      className=\"text-destructive\"\n                      onClick={() => removePlace(place.id)}\n                    >\n                      <Trash2 className=\"h-4 w-4\" />\n                    </Button>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      )}\n      \n      {places.length > 0 && (\n        <Dialog open={isAddPlaceDialogOpen} onOpenChange={setIsAddPlaceDialogOpen}>\n          <DialogTrigger asChild>\n            <Button className=\"w-full mt-4 bg-sky-500 hover:bg-sky-600\">\n              <Plus className=\"mr-2 h-4 w-4\" />\n              Add New Place\n            </Button>\n          </DialogTrigger>\n          <DialogContent className=\"sm:max-w-md\">\n            <DialogHeader>\n              <DialogTitle>Add a place to your wishlist</DialogTitle>\n            </DialogHeader>\n            <div className=\"py-4\">\n              <PlaceSearch \n                placeholder=\"Search for places to add...\" \n                onPlaceSelect={addNewPlace}\n              />\n              {isAddingPlace && (\n                <div className=\"flex items-center justify-center mt-4\">\n                  <Loader2 className=\"h-5 w-5 animate-spin text-sky-500 mr-2\" />\n                  <p className=\"text-sm\">Adding place...</p>\n                </div>\n              )}\n            </div>\n          </DialogContent>\n        </Dialog>\n      )}\n    </div>\n  );\n} ","/Users/kominetenma/Desktop/project/components/places/google-places-search.tsx",["918","919","920","921"],[],"'use client';\n\nimport { useState, useEffect, useRef } from 'react';\nimport { Search, MapPin, Loader2, X, Globe } from 'lucide-react';\nimport { SearchResult } from '@/lib/types/places';\nimport { detectUserLanguage } from '@/lib/utils/language-detection';\n\ninterface GooglePlacesSearchProps {\n  placeholder?: string;\n  onPlaceSelect: (place: SearchResult) => void;\n  size?: 'small' | 'medium' | 'large';\n  className?: string;\n  autoFocus?: boolean;\n  countryRestriction?: string; // Optional country code restriction\n  noResultsText?: string;\n}\n\nexport default function GooglePlacesSearch({ \n  placeholder,\n  onPlaceSelect, \n  size = 'medium',\n  className = '',\n  autoFocus = false,\n  countryRestriction,\n  noResultsText\n}: GooglePlacesSearchProps) {\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState<SearchResult[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showResults, setShowResults] = useState(false);\n  const [selectedPlace, setSelectedPlace] = useState<SearchResult | null>(null);\n  const [language, setLanguage] = useState('en');\n  const debounceTimer = useRef<NodeJS.Timeout>();\n  const inputRef = useRef<HTMLInputElement>(null);\n  const placesService = useRef<google.maps.places.PlacesService | null>(null);\n\n  // 言語の検出\n  useEffect(() => {\n    const detectedLanguage = detectUserLanguage();\n    \n    setLanguage(detectedLanguage);\n    \n    console.log('✅ GooglePlacesSearch 初期化:', {\n      language: detectedLanguage,\n      countryRestriction\n    });\n    \n    // initPlacesServiceを呼び出す\n      initPlacesService();\n    \n    // APIが読み込まれているかのチェックを実行（バックアップメカニズム）\n      const checkGoogleMapsInterval = setInterval(() => {\n        if (typeof google !== 'undefined' && google.maps && google.maps.places) {\n        if (!placesService.current) {\n          console.log('🔄 Google Maps APIが読み込まれました。Places サービスを初期化します。');\n          initPlacesService();\n        }\n        clearInterval(checkGoogleMapsInterval);\n      }\n    }, 1000);\n      \n      // 10秒後にチェックを停止\n      setTimeout(() => clearInterval(checkGoogleMapsInterval), 10000);\n    \n    return () => {\n      clearInterval(checkGoogleMapsInterval);\n    };\n  }, [countryRestriction]);\n\n  // 改善：Google Mapsが確実に読み込まれるようにinitPlacesServiceを強化\n  // completeInit関数を外部に定義\n  const completeInit = (placesServiceRef: React.MutableRefObject<google.maps.places.PlacesService | null>) => {\n    const mapDiv = document.createElement('div');\n    mapDiv.style.display = 'none';\n    document.body.appendChild(mapDiv);\n    \n    try {\n    const map = new google.maps.Map(mapDiv, {\n      center: { lat: 0, lng: 0 },\n      zoom: 2\n    });\n    \n      placesServiceRef.current = new google.maps.places.PlacesService(map);\n    console.log('✅ Google Places サービス初期化完了');\n    } catch (error) {\n      console.error('❌ Places サービス初期化エラー:', error);\n    }\n  };\n\n  const initPlacesService = () => {\n    try {\n      console.log('✅ Google Places サービス初期化を開始します');\n      \n      // Google Maps APIが読み込まれているか確認\n      if (typeof google === 'undefined' || !google.maps || !google.maps.places) {\n        console.error('❌ Google Maps APIが読み込まれていません。initPlacesService呼び出し時点でgoogle.mapsが利用できません。');\n        // scriptタグを手動で追加\n        const script = document.createElement('script');\n        script.src = `https://maps.googleapis.com/maps/api/js?key=${process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY}&libraries=places`;\n        script.async = true;\n        script.defer = true;\n        script.onload = () => {\n          console.log('✅ Google Maps API スクリプトが読み込まれました');\n          completeInit(placesService);\n        };\n        script.onerror = () => {\n          console.error('❌ Google Maps API スクリプトの読み込みに失敗しました');\n        };\n        document.head.appendChild(script);\n        return;\n      } else {\n        completeInit(placesService);\n      }\n    } catch (error) {\n      console.error('❌ initPlacesService 実行エラー:', error);\n    }\n  };\n\n  useEffect(() => {\n    // 前回のタイマーをクリア\n    if (debounceTimer.current) {\n      clearTimeout(debounceTimer.current);\n    }\n\n    // 短すぎるクエリは検索しない\n    if (query.length < 2) {\n      setResults([]);\n      setShowResults(false);\n      return;\n    }\n\n    // 検索をデバウンス\n    debounceTimer.current = setTimeout(() => {\n      performSearch(query);\n    }, 300);\n\n    return () => {\n      if (debounceTimer.current) {\n        clearTimeout(debounceTimer.current);\n      }\n    };\n  }, [query, language]);\n\n  // autoFocusがtrueの場合、ロード時に入力にフォーカス\n  useEffect(() => {\n    if (autoFocus && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [autoFocus]);\n\n  const performSearch = async (searchQuery: string) => {\n    setIsLoading(true);\n    setShowResults(true);\n\n    try {\n      if (placesService.current) {\n        // 実際のGoogle Places APIを使用\n        await performRealSearch(searchQuery);\n      } else {\n        // Google Places APIが初期化されていない場合\n        console.error('Google Places APIが初期化されていません');\n        setResults([]);\n        // APIの初期化を試みる\n        initPlacesService();\n      }\n    } catch (error) {\n      console.error('検索エラー:', error);\n      setResults([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // 検索クエリから言語を推測する関数\n  const detectQueryLanguage = (query: string): string => {\n    // 英数字のみの場合は英語と判定\n    if (/^[a-zA-Z0-9\\s.,\\-']+$/.test(query)) {\n      return 'en';\n    }\n    \n    // 日本語文字が含まれる場合は日本語と判定\n    if (/[\\u3000-\\u303f\\u3040-\\u309f\\u30a0-\\u30ff\\uff00-\\uff9f\\u4e00-\\u9faf]/.test(query)) {\n      return 'ja';\n    }\n    \n    // それ以外の場合はブラウザの言語設定を使用\n    return language;\n  };\n\n  const performRealSearch = async (searchQuery: string): Promise<void> => {\n    return new Promise((resolve) => {\n      if (!placesService.current) {\n        console.error('Places サービスが初期化されていません');\n        setIsLoading(false);\n        resolve();\n        return;\n      }\n\n      // 検索クエリの言語を検出\n      const queryLanguage = detectQueryLanguage(searchQuery);\n      \n      console.log(`🔍 検索クエリ「${searchQuery}」の言語を ${queryLanguage === 'en' ? '英語' : queryLanguage === 'ja' ? '日本語' : '検出された言語'} と判定しました`);\n\n      // 適切な言語設定で検索リクエストを構成\n      const request: google.maps.places.TextSearchRequest = {\n        query: searchQuery,\n        language: queryLanguage\n      };\n\n      // 国の制限がある場合は追加\n      if (countryRestriction) {\n        console.log(`🌍 検索を ${countryRestriction} に制限します`);\n        // request.locationBias は動作しないため、クエリに国名を追加\n        request.query = `${searchQuery} ${countryRestriction}`;\n      }\n\n      console.log('🔍 Google Places 検索リクエスト:', request);\n\n      placesService.current.textSearch(request, (results, status) => {\n        if (status === google.maps.places.PlacesServiceStatus.OK && results) {\n          console.log('✅ 検索結果:', results.length, '件の場所が見つかりました');\n          \n          // 検索結果をSearchResult型に変換（最大5件まで）\n          const searchResults: SearchResult[] = results.slice(0, 5).map(place => {\n            const photoUrls: string[] = [];\n            if (place.photos && place.photos.length > 0) {\n              place.photos.slice(0, 2).forEach(photo => {\n                photoUrls.push(photo.getUrl({ maxWidth: 400, maxHeight: 300 }));\n              });\n            }\n            \n            return {\n              place_id: place.place_id || `place_${Date.now()}`,\n              name: place.name || searchQuery,\n              address: place.formatted_address || '',\n              latitude: place.geometry?.location?.lat() || 0,\n              longitude: place.geometry?.location?.lng() || 0,\n              photos: photoUrls,\n              types: place.types || [],\n              rating: place.rating,\n              user_ratings_total: place.user_ratings_total\n            };\n          });\n          \n          setResults(searchResults);\n        } else {\n          console.warn('❌ Places 検索失敗:', status);\n          \n          // findPlaceFromQueryをフォールバックとして試す\n          console.log('代替検索方法を試みます...');\n          performFindPlaceSearch(searchQuery).then(() => resolve());\n          return;\n        }\n        \n        setIsLoading(false);\n        resolve();\n      });\n    });\n  };\n\n  const performFindPlaceSearch = async (searchQuery: string): Promise<void> => {\n    return new Promise((resolve) => {\n      if (!placesService.current) {\n        setIsLoading(false);\n        resolve();\n        return;\n      }\n\n      // 検索クエリの言語を検出\n      const queryLanguage = detectQueryLanguage(searchQuery);\n\n      // 代替検索方法\n      const request: google.maps.places.FindPlaceFromQueryRequest = {\n        query: searchQuery,\n        fields: ['name', 'geometry', 'formatted_address', 'place_id', 'types', 'photos', 'rating', 'user_ratings_total'],\n        language: queryLanguage\n      };\n      \n      console.log('🔍 findPlaceFromQuery 検索リクエスト:', request);\n      \n      placesService.current.findPlaceFromQuery(request, (results, status) => {\n        if (status === google.maps.places.PlacesServiceStatus.OK && results) {\n          console.log('✅ findPlaceFromQuery 検索結果:', results);\n          \n          // 検索結果をSearchResult型に変換\n          const searchResults: SearchResult[] = results.map(place => {\n            const photoUrls: string[] = [];\n            if (place.photos && place.photos.length > 0) {\n              place.photos.slice(0, 2).forEach(photo => {\n                photoUrls.push(photo.getUrl({ maxWidth: 400, maxHeight: 300 }));\n              });\n            }\n            \n            return {\n              place_id: place.place_id || `place_${Date.now()}`,\n              name: place.name || searchQuery,\n              address: place.formatted_address || '',\n              latitude: place.geometry?.location?.lat() || 0,\n              longitude: place.geometry?.location?.lng() || 0,\n              photos: photoUrls,\n              types: place.types || [],\n              rating: place.rating,\n              user_ratings_total: place.user_ratings_total\n            };\n          });\n          \n          setResults(searchResults);\n        } else {\n          console.error('findPlaceFromQuery 検索エラー:', status);\n          // 検索失敗の場合は空の結果を設定\n          setResults([]);\n        }\n        \n        setIsLoading(false);\n        resolve();\n      });\n    });\n  };\n\n  const handlePlaceSelect = (place: SearchResult) => {\n    console.log('🎯 場所が選択されました:', place);\n    setQuery(place.name);\n    setShowResults(false);\n    setSelectedPlace(place);\n    onPlaceSelect(place);\n  };\n\n  const handleInputFocus = () => {\n    if (results.length > 0) {\n      setShowResults(true);\n    }\n  };\n\n  const handleInputBlur = () => {\n    // クリックを許可するために結果を非表示にするのを遅らせる\n    setTimeout(() => setShowResults(false), 200);\n  };\n\n  const clearSelection = () => {\n    setQuery('');\n    setSelectedPlace(null);\n    setResults([]);\n    setShowResults(false);\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n\n  const sizeClasses = {\n    small: 'text-sm py-1.5 px-2',\n    medium: 'text-base py-2 px-3', \n    large: 'text-lg py-3 px-4'\n  };\n\n  // ローカライズされたプレースホルダーを取得\n  const localizedPlaceholder = getLocalizedPlaceholder(language, placeholder);\n  const localizedNoResultsText = getLocalizedNoResultsMessage(language, noResultsText);\n\n  return (\n    <div className={`relative w-full ${className}`}>\n      <div className=\"relative\">\n        <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5\" />\n        <input\n          ref={inputRef}\n          type=\"text\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n          onFocus={handleInputFocus}\n          onBlur={handleInputBlur}\n          placeholder={localizedPlaceholder}\n          className={`w-full pl-10 pr-10 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-transparent ${sizeClasses[size]}`}\n        />\n        {isLoading ? (\n          <Loader2 className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5 animate-spin\" />\n        ) : query.length > 0 ? (\n          <button \n            type=\"button\"\n            onClick={clearSelection}\n            className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\"\n          >\n            <X className=\"w-5 h-5\" />\n          </button>\n        ) : (\n          <div \n            className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5\"\n            title={`Language: ${language.toUpperCase()}`}\n          >\n            <Globe className=\"w-5 h-5\" />\n          </div>\n        )}\n      </div>\n\n      {/* 選択された場所のプレビュー */}\n      {selectedPlace && (\n        <div className=\"mt-2 p-3 bg-blue-50 dark:bg-blue-900/20 rounded-md border border-blue-200 dark:border-blue-800\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex-1\">\n              <p className=\"text-sm font-medium text-blue-900 dark:text-blue-100\">\n                {selectedPlace.name}\n              </p>\n              <p className=\"text-xs text-blue-700 dark:text-blue-300\">\n                {selectedPlace.address}\n              </p>\n              \n              {/* 評価情報の表示 */}\n              {selectedPlace.rating && (\n                <div className=\"flex items-center text-xs mt-1\">\n                  <span className=\"text-amber-500 mr-1\">★</span>\n                  <span className=\"text-blue-700 dark:text-blue-300\">{selectedPlace.rating.toFixed(1)}</span>\n                  {selectedPlace.user_ratings_total && (\n                    <span className=\"text-blue-600/70 dark:text-blue-400/70 ml-1\">\n                      ({selectedPlace.user_ratings_total})\n                    </span>\n                  )}\n                </div>\n              )}\n            </div>\n            <button\n              onClick={clearSelection}\n              className=\"text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-200\"\n            >\n              <X className=\"w-4 h-4\" />\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* 検索結果ドロップダウン */}\n      {showResults && results.length > 0 && !selectedPlace && (\n        <div className=\"absolute z-50 w-full mt-1 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg max-h-60 overflow-y-auto\">\n          {results.map((place) => (\n            <button\n              key={place.place_id}\n              onClick={() => handlePlaceSelect(place)}\n              className=\"w-full px-4 py-3 text-left hover:bg-gray-50 dark:hover:bg-gray-700 border-b border-gray-100 dark:border-gray-600 last:border-b-0 focus:bg-gray-50 dark:focus:bg-gray-700 focus:outline-none\"\n            >\n              <div className=\"flex items-start space-x-3\">\n                <MapPin className=\"w-5 h-5 text-gray-400 mt-0.5 flex-shrink-0\" />\n                <div className=\"flex-1 min-w-0\">\n                  <p className=\"text-sm font-medium text-gray-900 dark:text-white truncate\">\n                    {place.name}\n                  </p>\n                  <p className=\"text-xs text-gray-500 dark:text-gray-400 truncate\">\n                    {place.address}\n                  </p>\n                  \n                  {/* 評価と場所タイプの情報 */}\n                  <div className=\"flex items-center space-x-3 mt-1\">\n                    {place.rating && (\n                      <div className=\"flex items-center text-xs\">\n                        <span className=\"text-amber-500 mr-1\">★</span>\n                        <span>{place.rating.toFixed(1)}</span>\n                        {place.user_ratings_total && (\n                          <span className=\"text-gray-400 ml-1\">({place.user_ratings_total})</span>\n                        )}\n                      </div>\n                    )}\n                    \n                    {place.types && place.types.length > 0 && (\n                      <p className=\"text-xs text-blue-500\">\n                        {place.types.slice(0, 2).map(type => type.replace(/_/g, ' ')).join(', ')}\n                      </p>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </button>\n          ))}\n        </div>\n      )}\n\n      {/* 検索結果なしメッセージ */}\n      {showResults && !isLoading && results.length === 0 && query.length >= 2 && (\n        <div className=\"absolute z-50 w-full mt-1 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg p-4\">\n          <p className=\"text-sm text-gray-500 dark:text-gray-400 text-center\">\n            {localizedNoResultsText} \"{query}\"\n          </p>\n        </div>\n      )}\n    </div>\n  );\n}\n\n// ローカライズヘルパー関数\nconst getLocalizedPlaceholder = (language: string, customPlaceholder?: string): string => {\n  if (customPlaceholder) return customPlaceholder;\n  \n  const placeholders: Record<string, string> = {\n    'en': 'Search for places...',\n    'ja': '場所を検索...',\n    'fr': 'Rechercher des lieux...',\n    'es': 'Buscar lugares...',\n    'de': 'Orte suchen...',\n    'zh': '搜索地点...',\n    'ko': '장소 검색...',\n    'pt': 'Pesquisar lugares...',\n    'it': 'Cerca luoghi...',\n    'ru': 'Поиск мест...'\n  };\n  \n  return placeholders[language] || placeholders['en'];\n};\n\nconst getLocalizedNoResultsMessage = (language: string, customMessage?: string): string => {\n  if (customMessage) return customMessage;\n  \n  const messages: Record<string, string> = {\n    'en': 'No places found for',\n    'ja': '見つかりませんでした:',\n    'fr': 'Aucun lieu trouvé pour',\n    'es': 'No se encontraron lugares para',\n    'de': 'Keine Orte gefunden für',\n    'zh': '未找到地点:',\n    'ko': '장소를 찾을 수 없습니다:',\n    'pt': 'Nenhum lugar encontrado para',\n    'it': 'Nessun luogo trovato per',\n    'ru': 'Места не найдены:'\n  };\n  \n  return messages[language] || messages['en'];\n};","/Users/kominetenma/Desktop/project/components/places/map-view.tsx",["922"],[],"/Users/kominetenma/Desktop/project/components/places/place-search.tsx",[],[],"/Users/kominetenma/Desktop/project/components/places/trip-places-manager.tsx",[],[],"/Users/kominetenma/Desktop/project/components/places/wishlist-manager.tsx",["923"],[],"/Users/kominetenma/Desktop/project/components/share/share-manager.tsx",["924"],[],"\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Copy, Check, Share2, Users } from \"lucide-react\";\nimport { createClient } from \"@/lib/supabase/client\";\nimport { useToast } from \"@/hooks/use-toast\";\n\ninterface Trip {\n  id: string;\n  name: string;\n  share_code: string;\n  share_link: string;\n}\n\nexport function ShareManager() {\n  const [trips, setTrips] = useState<Trip[]>([]);\n  const [selectedTrip, setSelectedTrip] = useState<Trip | null>(null);\n  const [copied, setCopied] = useState<{[key: string]: boolean}>({});\n  const [isLoading, setIsLoading] = useState(true);\n  const { toast } = useToast();\n\n  useEffect(() => {\n    const fetchTrips = async () => {\n      const supabase = createClient();\n      \n      const { data, error } = await supabase\n        .from('trip_groups')\n        .select('id, name, share_code, share_link')\n        .order('created_at', { ascending: false });\n      \n      if (error) {\n        console.error('Error fetching trips:', error);\n        return;\n      }\n      \n      setTrips(data || []);\n      if (data && data.length > 0) {\n        setSelectedTrip(data[0]);\n      }\n      setIsLoading(false);\n    };\n    \n    fetchTrips();\n  }, []);\n\n  const copyToClipboard = (text: string, type: string) => {\n    navigator.clipboard.writeText(text);\n    setCopied({ ...copied, [type]: true });\n    \n    toast({\n      title: \"Copied to clipboard\",\n      description: \"Share link copied successfully\",\n    });\n    \n    setTimeout(() => {\n      setCopied({ ...copied, [type]: false });\n    }, 2000);\n  };\n  \n  const shareTrip = async () => {\n    if (!selectedTrip) return;\n    \n    if (navigator.share) {\n      try {\n        await navigator.share({\n          title: `Join my trip: ${selectedTrip.name}`,\n          text: `I'm planning a trip! Join me on Voypath to help plan our journey.`,\n          url: `${window.location.origin}/join?code=${selectedTrip.share_code}`,\n        });\n      } catch (error) {\n        console.error('Error sharing:', error);\n      }\n    } else {\n      const shareUrl = `${window.location.origin}/join?code=${selectedTrip.share_code}`;\n      copyToClipboard(shareUrl, 'shareApi');\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"space-y-4\">\n        <div className=\"h-10 w-full bg-muted rounded animate-pulse\"></div>\n        <Card>\n          <CardHeader className=\"animate-pulse\">\n            <div className=\"h-6 w-1/2 bg-muted rounded mb-2\"></div>\n            <div className=\"h-4 w-3/4 bg-muted rounded\"></div>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"h-10 w-full bg-muted rounded\"></div>\n            <div className=\"h-10 w-full bg-muted rounded\"></div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  if (trips.length === 0) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>No Trips Available</CardTitle>\n          <CardDescription>\n            Create a trip first to get sharing options\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"text-center py-6\">\n          <Users className=\"h-16 w-16 mx-auto text-muted-foreground mb-4\" />\n          <p>You haven't created any trips yet</p>\n          <Button asChild className=\"mt-4 bg-sky-500 hover:bg-sky-600\">\n            <a href=\"/trips/new\">Create a Trip</a>\n          </Button>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      <div>\n        <select\n          className=\"w-full p-2 rounded-md border border-input bg-transparent\"\n          value={selectedTrip?.id || \"\"}\n          onChange={(e) => {\n            const trip = trips.find((t) => t.id === e.target.value);\n            setSelectedTrip(trip || null);\n          }}\n        >\n          {trips.map((trip) => (\n            <option key={trip.id} value={trip.id}>\n              {trip.name}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      {selectedTrip && (\n        <Card>\n          <CardHeader>\n            <CardTitle>Share {selectedTrip.name}</CardTitle>\n            <CardDescription>\n              Invite others to collaborate on your trip planning\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <Tabs defaultValue=\"link\">\n              <TabsList className=\"grid w-full grid-cols-2\">\n                <TabsTrigger value=\"link\">Share Link</TabsTrigger>\n                <TabsTrigger value=\"code\">Share Code</TabsTrigger>\n              </TabsList>\n              \n              <TabsContent value=\"link\" className=\"space-y-4\">\n                <div className=\"flex gap-2\">\n                  <Input\n                    readOnly\n                    value={`${window.location.origin}/join?code=${selectedTrip.share_code}`}\n                  />\n                  <Button\n                    size=\"icon\"\n                    variant=\"outline\"\n                    onClick={() => \n                      copyToClipboard(\n                        `${window.location.origin}/join?code=${selectedTrip.share_code}`,\n                        'link'\n                      )\n                    }\n                  >\n                    {copied['link'] ? (\n                      <Check className=\"h-4 w-4\" />\n                    ) : (\n                      <Copy className=\"h-4 w-4\" />\n                    )}\n                  </Button>\n                </div>\n                \n                <Button \n                  className=\"w-full bg-sky-500 hover:bg-sky-600\"\n                  onClick={shareTrip}\n                >\n                  <Share2 className=\"mr-2 h-4 w-4\" />\n                  Share Trip\n                </Button>\n              </TabsContent>\n              \n              <TabsContent value=\"code\" className=\"space-y-4\">\n                <div className=\"flex gap-2\">\n                  <Input\n                    readOnly\n                    value={selectedTrip.share_code}\n                    className=\"text-center text-xl font-mono tracking-widest\"\n                  />\n                  <Button\n                    size=\"icon\"\n                    variant=\"outline\"\n                    onClick={() => \n                      copyToClipboard(selectedTrip.share_code, 'code')\n                    }\n                  >\n                    {copied['code'] ? (\n                      <Check className=\"h-4 w-4\" />\n                    ) : (\n                      <Copy className=\"h-4 w-4\" />\n                    )}\n                  </Button>\n                </div>\n                <p className=\"text-sm text-muted-foreground text-center\">\n                  Share this 6-digit code with your friends\n                </p>\n              </TabsContent>\n            </Tabs>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n}","/Users/kominetenma/Desktop/project/components/theme-provider.tsx",[],[],"/Users/kominetenma/Desktop/project/components/trips/create-trip-form.tsx",["925","926"],[],"\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { CalendarIcon, Loader2 } from \"lucide-react\";\nimport { format } from \"date-fns\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Calendar } from \"@/components/ui/calendar\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport { cn } from \"@/lib/utils\";\nimport { useGuestStore } from \"@/lib/stores/guest-store\";\nimport { createTrip } from \"@/lib/actions/trip-actions\";\nimport GooglePlacesSearch from \"@/components/places/google-places-search\";\nimport { SearchResult } from \"@/lib/types/places\";\n\nconst formSchema = z.object({\n  name: z.string().optional(),\n  description: z.string().optional(),\n  departureLocation: z.string().min(2, {\n    message: \"Departure location is required.\",\n  }),\n  startDate: z.date().optional(),\n  endDate: z.date().optional(),\n});\n\n// Define the type from the schema\ntype FormValues = z.infer<typeof formSchema>;\n\nexport function CreateTripForm() {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const router = useRouter();\n  const { sessionId, guestData } = useGuestStore();\n  const [selectedPlace, setSelectedPlace] = useState<SearchResult | null>(null);\n  // Store coordinates separately from form state\n  const [coordinates, setCoordinates] = useState<{ lat: number; lng: number } | null>(null);\n\n  const form = useForm<FormValues>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      name: \"\",\n      description: \"\",\n      departureLocation: \"\",\n      startDate: undefined,\n      endDate: undefined,\n    },\n  });\n\n  // Save form data on changes\n  useEffect(() => {\n    const subscription = form.watch((value) => {\n      // Also save coordinates in session storage\n      const dataToSave = {\n        ...value,\n        coordinates: coordinates\n      };\n      sessionStorage.setItem(\"createTripFormData\", JSON.stringify(dataToSave));\n      console.log(\"Form data saved to session storage:\", dataToSave);\n    });\n    return () => subscription.unsubscribe();\n  }, [form, coordinates]);\n\n  // Restore form state if it gets lost\n  useEffect(() => {\n    const savedData = sessionStorage.getItem(\"createTripFormData\");\n    if (savedData) {\n      try {\n        const parsedData = JSON.parse(savedData);\n        if (parsedData.departureLocation) {\n          form.setValue(\"departureLocation\", parsedData.departureLocation);\n          \n          // Restore coordinates if available\n          if (parsedData.coordinates) {\n            setCoordinates(parsedData.coordinates);\n          }\n          \n          console.log(\"Restored form data from session storage:\", parsedData);\n        }\n      } catch (error) {\n        console.error(\"Error parsing saved form data:\", error);\n      }\n    }\n  }, [form]);\n\n  // Log form state changes\n  useEffect(() => {\n    const subscription = form.watch((value, { name, type }) => {\n      if (name) {\n        console.log(\"Form field changed:\", { name, type, value: value[name] });\n      }\n    });\n    return () => subscription.unsubscribe();\n  }, [form]);\n\n  // Handle place selection from GooglePlacesSearch\n  const handlePlaceSelect = (place: SearchResult) => {\n    console.log(\"Place selected:\", place);\n    \n    // Store the complete place object\n    setSelectedPlace(place);\n    \n    // Set form value for location name\n    form.setValue(\"departureLocation\", place.address || place.name);\n    \n    // Store coordinates in separate state\n    const coords = {\n      lat: place.latitude,\n      lng: place.longitude\n    };\n    setCoordinates(coords);\n    \n    // Validate form field\n    form.trigger(\"departureLocation\");\n    \n    // Debug logging\n    console.log(\"Location selected:\", {\n      location: place.address || place.name,\n      coordinates: coords\n    });\n  };\n\n  async function onSubmit(values: FormValues) {\n    console.log(\"Form submitted with values:\", values);\n    \n    // Validate coordinates exist\n    if (!coordinates) {\n      console.error(\"Missing departure location coordinates\");\n      form.setError(\"departureLocation\", {\n        type: \"manual\",\n        message: \"Please select a valid departure location from the dropdown\"\n      });\n      return;\n    }\n\n    if (!sessionId || !guestData) {\n      console.error(\"No guest session or data available\");\n      return;\n    }\n\n    setIsSubmitting(true);\n\n    try {\n      console.log(\"Submitting trip data with coordinates:\", {\n        ...values,\n        coordinates\n      });\n      \n      const { tripId } = await createTrip({\n        name: values.name,\n        description: values.description || \"\",\n        departureLocation: values.departureLocation,\n        departureLocationCoords: coordinates,\n        startDate: values.startDate,\n        endDate: values.endDate,\n        userId: guestData.id || \"\",\n        sessionId: sessionId || \"\",\n      });\n\n      // Clear session storage after successful submission\n      sessionStorage.removeItem(\"createTripFormData\");\n      \n      // 変更: /trips/[id]から/my-trip?id=[id]に変更\n      router.push(`/my-trip?id=${tripId}`);\n    } catch (error) {\n      console.error(\"Failed to create trip:\", error);\n    } finally {\n      setIsSubmitting(false);\n    }\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n        <FormField\n          control={form.control}\n          name=\"name\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Trip Name (Optional)</FormLabel>\n              <FormControl>\n                <Input placeholder=\"Leave blank for auto-generated name\" {...field} />\n              </FormControl>\n              <FormDescription>\n                If left blank, a name like \"Trip 1\" will be automatically generated\n              </FormDescription>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"description\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Description (Optional)</FormLabel>\n              <FormControl>\n                <Textarea\n                  placeholder=\"Tell us about your trip...\"\n                  {...field}\n                />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"departureLocation\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Departure Location</FormLabel>\n              <FormControl>\n                <GooglePlacesSearch\n                  placeholder=\"Enter your departure location...\"\n                  onPlaceSelect={handlePlaceSelect}\n                  size=\"medium\"\n                />\n              </FormControl>\n              <FormDescription>\n                Where will you start your journey?\n              </FormDescription>\n              <FormMessage />\n              \n              {/* Show success indicator if coordinates are selected */}\n              {coordinates && (\n                <div className=\"text-xs text-green-600 mt-1\">\n                  Location selected successfully\n                </div>\n              )}\n            </FormItem>\n          )}\n        />\n\n        <div className=\"grid grid-cols-2 gap-4\">\n          <FormField\n            control={form.control}\n            name=\"startDate\"\n            render={({ field }) => (\n              <FormItem className=\"flex flex-col\">\n                <FormLabel>Start Date (Optional)</FormLabel>\n                <Popover>\n                  <PopoverTrigger asChild>\n                    <FormControl>\n                      <Button\n                        variant={\"outline\"}\n                        className={cn(\n                          \"pl-3 text-left font-normal\",\n                          !field.value && \"text-muted-foreground\"\n                        )}\n                      >\n                        {field.value ? (\n                          format(field.value, \"PPP\")\n                        ) : (\n                          <span>Pick a date</span>\n                        )}\n                        <CalendarIcon className=\"ml-auto h-4 w-4 opacity-50\" />\n                      </Button>\n                    </FormControl>\n                  </PopoverTrigger>\n                  <PopoverContent className=\"w-auto p-0\" align=\"start\">\n                    <Calendar\n                      mode=\"single\"\n                      selected={field.value}\n                      onSelect={field.onChange}\n                      initialFocus\n                    />\n                  </PopoverContent>\n                </Popover>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          <FormField\n            control={form.control}\n            name=\"endDate\"\n            render={({ field }) => (\n              <FormItem className=\"flex flex-col\">\n                <FormLabel>End Date (Optional)</FormLabel>\n                <Popover>\n                  <PopoverTrigger asChild>\n                    <FormControl>\n                      <Button\n                        variant={\"outline\"}\n                        className={cn(\n                          \"pl-3 text-left font-normal\",\n                          !field.value && \"text-muted-foreground\"\n                        )}\n                      >\n                        {field.value ? (\n                          format(field.value, \"PPP\")\n                        ) : (\n                          <span>Pick a date</span>\n                        )}\n                        <CalendarIcon className=\"ml-auto h-4 w-4 opacity-50\" />\n                      </Button>\n                    </FormControl>\n                  </PopoverTrigger>\n                  <PopoverContent className=\"w-auto p-0\" align=\"start\">\n                    <Calendar\n                      mode=\"single\"\n                      selected={field.value}\n                      onSelect={field.onChange}\n                      initialFocus\n                    />\n                  </PopoverContent>\n                </Popover>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        </div>\n\n        <Button\n          type=\"submit\"\n          disabled={isSubmitting}\n          className=\"w-full bg-sky-500 hover:bg-sky-600\"\n        >\n          {isSubmitting ? (\n            <>\n              <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n              Creating...\n            </>\n          ) : (\n            \"Create Trip\"\n          )}\n        </Button>\n      </form>\n    </Form>\n  );\n}","/Users/kominetenma/Desktop/project/components/trips/edit-trip-form.tsx",[],[],"/Users/kominetenma/Desktop/project/components/trips/trip-list.tsx",["927"],[],"\"use client\";\n\nimport { useState, useEffect } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardFooter } from '@/components/ui/card';\nimport { MapPin, Calendar, Users, Edit, Trash2 } from 'lucide-react';\nimport { createClient } from '@/lib/supabase/client';\nimport { useGuestStore } from '@/lib/stores/guest-store';\nimport { formatDistanceToNow } from 'date-fns';\nimport { useTrip } from '@/lib/contexts/trip-context';\nimport { useRouter } from 'next/navigation';\nimport { useToast } from '@/hooks/use-toast';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from \"@/components/ui/alert-dialog\";\n\ninterface Trip {\n  id: string;\n  name: string;\n  description: string | null;\n  departure_location: string;\n  start_date: string | null;\n  end_date: string | null;\n  created_at: string;\n  member_count: number;\n}\n\nexport function TripList() {\n  const [trips, setTrips] = useState<Trip[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const { sessionId } = useGuestStore();\n  const { setActiveTrip, activeTrip } = useTrip();\n  const router = useRouter();\n  const [tripToDelete, setTripToDelete] = useState<string | null>(null);\n  const { toast } = useToast();\n  \n    const fetchTrips = async () => {\n      if (!sessionId) return;\n      \n      const supabase = createClient();\n      \n      // Fetch trips where the user is a member\n      const { data, error } = await supabase\n        .from('trip_groups')\n        .select(`\n          id,\n          name,\n          description,\n          departure_location,\n          start_date,\n          end_date,\n          created_at,\n          member_count:group_members(count)\n        `)\n        .eq('group_members.session_id', sessionId)\n        .order('created_at', { ascending: false });\n      \n      if (error) {\n        console.error('Error fetching trips:', error);\n        return;\n      }\n      \n      // Transform the data to get the member count\n      const formattedTrips = data.map(trip => ({\n        ...trip,\n        member_count: trip.member_count[0]?.count || 0\n      }));\n      \n      setTrips(formattedTrips);\n      setIsLoading(false);\n    };\n    \n  useEffect(() => {\n    fetchTrips();\n  }, [sessionId]);\n\n  // Handle trip selection\n  const handleSelectTrip = (trip: Trip) => {\n    // Set trip as active\n    setActiveTrip(trip);\n    // Navigate to my-trip page\n    router.push(`/my-trip?id=${trip.id}`);\n  };\n\n  // Edit trip\n  const handleEditTrip = (e: React.MouseEvent, tripId: string) => {\n    e.stopPropagation(); // Prevent the card click event\n    router.push(`/trips/edit/${tripId}`);\n  };\n\n  // Delete trip\n  const handleDeleteTrip = async () => {\n    if (!tripToDelete) return;\n    \n    const supabase = createClient();\n    \n    try {\n      // 1. Remove related group_members\n      await supabase\n        .from('group_members')\n        .delete()\n        .eq('group_id', tripToDelete);\n      \n      // 2. Remove the trip itself\n      const { error } = await supabase\n        .from('trip_groups')\n        .delete()\n        .eq('id', tripToDelete);\n        \n      if (error) throw error;\n      \n      // Update UI\n      setTrips(trips.filter(trip => trip.id !== tripToDelete));\n      \n      // Reset active trip if the active trip is deleted\n      if (activeTrip && activeTrip.id === tripToDelete) {\n        setActiveTrip(null);\n      }\n      \n      toast({\n        title: \"Trip deleted\",\n        description: \"Your trip has been successfully deleted.\",\n      });\n    } catch (error) {\n      console.error('Error deleting trip:', error);\n      toast({\n        title: \"Error\",\n        description: \"Failed to delete the trip. Please try again.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setTripToDelete(null);\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"grid grid-cols-1 gap-4\">\n        {[1, 2].map((i) => (\n          <Card key={i} className=\"animate-pulse\">\n            <CardContent className=\"p-6\">\n              <div className=\"h-6 w-3/4 bg-muted rounded mb-3\"></div>\n              <div className=\"h-4 w-1/2 bg-muted rounded mb-6\"></div>\n              <div className=\"flex gap-4\">\n                <div className=\"h-5 w-5 bg-muted rounded-full\"></div>\n                <div className=\"h-5 w-24 bg-muted rounded\"></div>\n              </div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n    );\n  }\n\n  if (trips.length === 0) {\n    return (\n      <div className=\"text-center py-8\">\n        <p className=\"text-muted-foreground\">No trips yet</p>\n        <p className=\"text-sm text-muted-foreground mt-2\">\n          Create a new trip or join an existing one using the buttons above.\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"grid grid-cols-1 gap-4\">\n        {trips.map((trip) => (\n          <Card \n            key={trip.id} \n            className=\"hover:border-sky-200 dark:hover:border-sky-800 transition-colors cursor-pointer relative\"\n            onClick={() => handleSelectTrip(trip)}\n          >\n            <div className=\"absolute top-4 right-4 z-10 flex gap-2\">\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                className=\"h-8 w-8 rounded-full\"\n                onClick={(e) => handleEditTrip(e, trip.id)}\n              >\n                <Edit className=\"h-4 w-4 text-gray-500 hover:text-sky-500\" />\n                <span className=\"sr-only\">Edit</span>\n              </Button>\n              \n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                className=\"h-8 w-8 rounded-full\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  setTripToDelete(trip.id);\n                }}\n              >\n                <Trash2 className=\"h-4 w-4 text-gray-500 hover:text-red-500\" />\n                <span className=\"sr-only\">Delete</span>\n              </Button>\n            </div>\n            \n              <CardContent className=\"p-4\">\n                <h3 className=\"font-medium text-lg mb-1\">{trip.name}</h3>\n                <p className=\"text-muted-foreground text-sm mb-4 line-clamp-1\">\n                  {trip.description || \"No description\"}\n                </p>\n                \n                <div className=\"flex flex-col gap-2 text-sm\">\n                  <div className=\"flex items-center gap-2\">\n                    <MapPin className=\"h-4 w-4 text-sky-500\" />\n                    <span>{trip.departure_location}</span>\n                  </div>\n                  \n                  {(trip.start_date || trip.end_date) && (\n                    <div className=\"flex items-center gap-2\">\n                      <Calendar className=\"h-4 w-4 text-sky-500\" />\n                      <span>\n                        {trip.start_date ? new Date(trip.start_date).toLocaleDateString() : 'TBD'}\n                        {trip.end_date ? ` - ${new Date(trip.end_date).toLocaleDateString()}` : ''}\n                      </span>\n                    </div>\n                  )}\n                  \n                  <div className=\"flex items-center gap-2\">\n                    <Users className=\"h-4 w-4 text-sky-500\" />\n                    <span>{trip.member_count} {trip.member_count === 1 ? 'member' : 'members'}</span>\n                  </div>\n                </div>\n              </CardContent>\n              <CardFooter className=\"p-4 pt-0 border-t text-xs text-muted-foreground\">\n                Created {formatDistanceToNow(new Date(trip.created_at))} ago\n              </CardFooter>\n            </Card>\n        ))}\n      </div>\n      \n      {/* Delete confirmation dialog */}\n      <AlertDialog open={!!tripToDelete} onOpenChange={(open) => !open && setTripToDelete(null)}>\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle>Are you sure?</AlertDialogTitle>\n            <AlertDialogDescription>\n              This will permanently delete this trip and all of its data. This action cannot be undone.\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n            <AlertDialogCancel>Cancel</AlertDialogCancel>\n            <AlertDialogAction \n              onClick={handleDeleteTrip}\n              className=\"bg-red-600 hover:bg-red-700\"\n            >\n              Delete\n            </AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n    </div>\n  );\n}","/Users/kominetenma/Desktop/project/components/trips/trip-selector.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/accordion.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/alert-dialog.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/alert.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/aspect-ratio.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/avatar.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/badge.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/breadcrumb.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/button.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/calendar.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/card.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/carousel.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/chart.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/checkbox.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/collapsible.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/command.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/context-menu.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/dialog.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/drawer.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/dropdown-menu.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/form.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/hover-card.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/input-otp.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/input.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/label.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/menubar.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/navigation-menu.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/no-trip-selected-backup.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/no-trip-selected.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/pagination.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/popover.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/progress.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/radio-group.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/resizable.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/scroll-area.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/select.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/separator.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/sheet.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/skeleton.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/slider.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/sonner.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/switch.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/table.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/tabs.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/textarea.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/toast.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/toaster.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/toggle-group.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/toggle.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/tooltip.tsx",[],[],"/Users/kominetenma/Desktop/project/components/ui/trip-selector-modal.tsx",["928"],[],"'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { createClient } from '@/lib/supabase/client';\nimport { useGuestStore } from '@/lib/stores/guest-store';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription } from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { Card } from '@/components/ui/card';\nimport { Loader2, MapPin, Calendar } from 'lucide-react';\n\ninterface Trip {\n  id: string;\n  name: string;\n  description: string | null;\n  departure_location: string;\n  start_date: string | null;\n  end_date: string | null;\n  created_at: string;\n}\n\ninterface TripSelectorModalProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n  onSelectTrip?: (trip: Trip) => void;\n}\n\nexport function TripSelectorModal({ open, onOpenChange, onSelectTrip }: TripSelectorModalProps) {\n  const [trips, setTrips] = useState<Trip[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const { sessionId } = useGuestStore();\n  const router = useRouter();\n\n  useEffect(() => {\n    const fetchTrips = async () => {\n      if (!open) return;\n      \n      setIsLoading(true);\n      const supabase = createClient();\n      \n      try {\n        // 直接trip_groupsテーブルからすべてのトリップを取得\n        const { data: tripData, error: tripError } = await supabase\n          .from('trip_groups')\n          .select('*')\n          .order('created_at', { ascending: false });\n          \n        if (tripError) {\n          console.error('Error fetching trips:', tripError);\n          setTrips([]);\n        } else {\n          setTrips(tripData || []);\n        }\n      } catch (err) {\n        console.error('Unexpected error:', err);\n        setTrips([]);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    \n    fetchTrips();\n  }, [open]);\n\n  const handleSelectTrip = (trip: Trip) => {\n    if (onSelectTrip) {\n      onSelectTrip(trip);\n    } else {\n      // トリップページに遷移し、URLパラメータを保持\n      router.push(`/my-trip?id=${trip.id}`);\n    }\n    onOpenChange(false);\n  };\n\n  // 日付フォーマット\n  const formatDate = (dateStr: string | null) => {\n    if (!dateStr) return 'Not set';\n    const date = new Date(dateStr);\n    return date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n  };\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"sm:max-w-md\">\n        <DialogHeader>\n          <DialogTitle>Select a Trip</DialogTitle>\n          <DialogDescription>\n            Choose from your existing trips\n          </DialogDescription>\n        </DialogHeader>\n        \n        <div className=\"py-4\">\n          {isLoading ? (\n            <div className=\"flex items-center justify-center py-10\">\n              <Loader2 className=\"h-8 w-8 animate-spin text-sky-500\" />\n            </div>\n          ) : trips.length === 0 ? (\n            <div className=\"text-center py-8\">\n              <p className=\"text-muted-foreground mb-4\">You don't have any trips yet</p>\n              <Button \n                onClick={() => {\n                  onOpenChange(false);\n                  router.push('/trips/new');\n                }}\n                className=\"bg-sky-500 hover:bg-sky-600\"\n              >\n                Create Your First Trip\n              </Button>\n            </div>\n          ) : (\n            <div className=\"space-y-3 max-h-[60vh] overflow-y-auto pr-1\">\n              {trips.map((trip) => (\n                <Card \n                  key={trip.id}\n                  className=\"p-3 cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-800/50\"\n                  onClick={() => handleSelectTrip(trip)}\n                >\n                  <div>\n                    <h3 className=\"font-medium\">{trip.name}</h3>\n                    {trip.description && (\n                      <p className=\"text-sm text-muted-foreground line-clamp-1\">{trip.description}</p>\n                    )}\n                    \n                    <div className=\"flex flex-wrap gap-2 mt-2\">\n                      <div className=\"flex items-center gap-1 text-xs bg-gray-100 dark:bg-gray-800 px-2 py-1 rounded-full\">\n                        <MapPin className=\"h-3 w-3 text-sky-500\" />\n                        <span className=\"truncate max-w-[150px]\">{trip.departure_location}</span>\n                      </div>\n                      \n                      {trip.start_date && (\n                        <div className=\"flex items-center gap-1 text-xs bg-gray-100 dark:bg-gray-800 px-2 py-1 rounded-full\">\n                          <Calendar className=\"h-3 w-3 text-sky-500\" />\n                          <span>\n                            {formatDate(trip.start_date)}\n                            {trip.end_date ? ` - ${formatDate(trip.end_date)}` : ''}\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </Card>\n              ))}\n            </div>\n          )}\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n} ","/Users/kominetenma/Desktop/project/components/user/user-avatar.tsx",[],[],"/Users/kominetenma/Desktop/project/lib/actions/guest-actions.ts",[],[],"/Users/kominetenma/Desktop/project/lib/actions/my-places-actions.ts",[],[],"/Users/kominetenma/Desktop/project/lib/actions/place-actions.ts",[],[],"/Users/kominetenma/Desktop/project/lib/actions/trip-actions.ts",[],[],"/Users/kominetenma/Desktop/project/lib/contexts/trip-context.tsx",["929","930"],[],"'use client';\n\nimport { createContext, useContext, useState, useEffect, ReactNode, useRef } from 'react';\nimport { useRouter, usePathname, useSearchParams } from 'next/navigation';\nimport { createClient } from '@/lib/supabase/client';\nimport { useGuestStore } from '@/lib/stores/guest-store';\n\ninterface Trip {\n  id: string;\n  name: string;\n  description: string | null;\n  departure_location: string;\n  start_date: string | null;\n  end_date: string | null;\n  created_at: string;\n}\n\ninterface TripContextType {\n  activeTrip: Trip | null;\n  setActiveTrip: (trip: Trip | null) => void;\n  activeTripId: string | null;\n  navigateWithTrip: (path: string) => void;\n  restoreLastTrip: () => Promise<string | null>;\n}\n\nconst TripContext = createContext<TripContextType | null>(null);\n\nexport function TripProvider({ children }: { children: ReactNode }) {\n  const [activeTrip, setActiveTrip] = useState<Trip | null>(null);\n  const [initialized, setInitialized] = useState(false);\n  const searchParams = useSearchParams();\n  const tripId = searchParams.get(\"id\");\n  const { sessionId } = useGuestStore();\n  const router = useRouter();\n  const pathname = usePathname();\n  const previousTripId = useRef<string | null>(null);\n  \n  // Function to save active trip ID\n  const saveActiveTripId = async (id: string) => {\n    if (!sessionId) return;\n    \n    const supabase = createClient();\n    await supabase\n      .from('session_settings')\n      .upsert({\n        session_id: sessionId,\n        setting_key: 'last_active_trip',\n        setting_value: id,\n        updated_at: new Date().toISOString()\n      }, { onConflict: 'session_id,setting_key' });\n  };\n  \n  // Navigate with trip ID appended\n  const navigateWithTrip = (path: string) => {\n    if (activeTrip) {\n      router.push(`${path}?id=${activeTrip.id}`);\n    } else {\n      router.push(path);\n    }\n  };\n  \n  // Restore last selected trip\n  const restoreLastTrip = async (): Promise<string | null> => {\n    if (!sessionId) return null;\n    \n    const supabase = createClient();\n    const { data } = await supabase\n      .from('session_settings')\n      .select('setting_value')\n      .eq('session_id', sessionId)\n      .eq('setting_key', 'last_active_trip')\n      .single();\n    \n    if (data?.setting_value) {\n      return data.setting_value;\n    }\n    \n    return null;\n  };\n\n  // Initialize trip on app startup\n  useEffect(() => {\n    const initializeTrip = async () => {\n      if (!sessionId || initialized) return;\n      \n      // If no trip ID in URL, restore last trip\n      if (!tripId) {\n        const lastTripId = await restoreLastTrip();\n        if (lastTripId) {\n          // Load trip data\n          const supabase = createClient();\n          const { data } = await supabase\n            .from('trip_groups')\n            .select('*')\n            .eq('id', lastTripId)\n            .single();\n          \n          if (data) {\n            setActiveTrip(data);\n            // Add trip ID to current page if needed\n            if (pathname.startsWith('/my-trip')) {\n              router.replace(`${pathname}?id=${lastTripId}`);\n            }\n          }\n        }\n      }\n      setInitialized(true);\n    };\n    \n    initializeTrip();\n  }, [sessionId, tripId, pathname, router, initialized]);\n  \n  // Handle trip ID changes from URL\n  useEffect(() => {\n    if (!tripId || !sessionId || !initialized) {\n      // Don't clear activeTrip just because tripId is not in URL\n      // This allows trip selection to persist across navigation\n      return;\n    }\n    \n    // Skip if the trip ID hasn't changed\n    if (tripId === previousTripId.current) {\n      return;\n    }\n    \n    // If URL has trip ID and it's different from current active trip\n    if (tripId !== activeTrip?.id) {\n      const fetchTrip = async () => {\n        const supabase = createClient();\n        const { data } = await supabase\n          .from('trip_groups')\n          .select('*')\n          .eq('id', tripId)\n          .single();\n        \n        if (data) {\n          previousTripId.current = tripId;\n          setActiveTrip(data);\n          saveActiveTripId(data.id);\n        }\n      };\n      \n      fetchTrip();\n    }\n  }, [tripId, sessionId, activeTrip, initialized]);\n  \n  // Custom setActiveTrip function that also updates previousTripId\n  const handleSetActiveTrip = (trip: Trip | null) => {\n    if (trip) {\n      previousTripId.current = trip.id;\n      if (trip.id) {\n        saveActiveTripId(trip.id);\n      }\n    } else {\n      previousTripId.current = null;\n    }\n    setActiveTrip(trip);\n  };\n  \n  return (\n    <TripContext.Provider value={{\n      activeTrip,\n      setActiveTrip: handleSetActiveTrip,\n      activeTripId: activeTrip?.id || null,\n      navigateWithTrip,\n      restoreLastTrip\n    }}>\n      {children}\n    </TripContext.Provider>\n  );\n}\n\nexport const useTrip = () => {\n  const context = useContext(TripContext);\n  if (context === null) {\n    throw new Error('useTrip must be used within a TripProvider');\n  }\n  return context;\n}; ","/Users/kominetenma/Desktop/project/lib/database.types.ts",[],[],"/Users/kominetenma/Desktop/project/lib/stores/guest-store.ts",[],[],"/Users/kominetenma/Desktop/project/lib/supabase/client.ts",[],[],"/Users/kominetenma/Desktop/project/lib/supabase/server.ts",[],[],"/Users/kominetenma/Desktop/project/lib/utils.ts",[],[],"/Users/kominetenma/Desktop/project/app/my-trip/my-places/add/page.tsx",["931","932","933"],[],"'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport { AddPlaceForm } from '@/components/places/add-place-form';\nimport GooglePlacesSearch from '@/components/places/google-places-search';\nimport { Loader2, CheckCircle, XCircle } from 'lucide-react';\nimport { useTrip } from '@/lib/contexts/trip-context';\nimport { SearchResult } from '@/lib/types/places';\n\nexport default function AddPlacePage() {\n  const router = useRouter();\n  const searchParams = useSearchParams();\n  const { activeTrip } = useTrip();\n  \n  // Get query params\n  const placeId = searchParams.get('placeId');\n  const date = searchParams.get('date');\n  const source = searchParams.get('source');\n  const groupId = searchParams.get('groupId');\n  \n  // Get place data directly from URL params if available\n  const name = searchParams.get('name');\n  const address = searchParams.get('address');\n  const latitude = searchParams.get('latitude');\n  const longitude = searchParams.get('longitude');\n  \n  const [selectedPlace, setSelectedPlace] = useState<SearchResult | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showSearchFirst, setShowSearchFirst] = useState(!placeId);\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState(false);\n  \n  console.log('Add Place page loaded with params:', {\n    placeId, groupId, date, source, name, address, latitude, longitude\n  });\n  \n  // Directly use URL params if all necessary data is available\n  useEffect(() => {\n    if (placeId && name && address && latitude && longitude) {\n      console.log('Creating place from URL params');\n      const place: SearchResult = {\n        place_id: placeId,\n        name: name,\n        address: address,\n        latitude: parseFloat(latitude),\n        longitude: parseFloat(longitude)\n      };\n      setSelectedPlace(place);\n      setIsLoading(false);\n      setShowSearchFirst(false);\n      setError(null);\n    } else if (placeId) {\n      // Fallback to Google Places API lookup if we only have placeId\n      loadPlaceDetails();\n    }\n  }, [placeId, name, address, latitude, longitude]);\n  \n  // For pre-populated place, load place details if placeId is provided but other details missing\n  const loadPlaceDetails = async () => {\n    if (!placeId) return;\n    \n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      console.log('Loading place details from Google Places API for ID:', placeId);\n      // This would typically be server-side, but for now we'll do it client-side\n      const map = new google.maps.Map(document.createElement('div'));\n      const service = new google.maps.places.PlacesService(map);\n      \n      service.getDetails(\n        {\n          placeId,\n          fields: ['name', 'formatted_address', 'geometry', 'photos', 'types']\n        },\n        (place, status) => {\n          if (status === google.maps.places.PlacesServiceStatus.OK && place) {\n            console.log('Google Places API returned place details:', place);\n            \n            // Extract photo URLs if available\n            const photoUrls: string[] = [];\n            if (place.photos && place.photos.length > 0) {\n              place.photos.slice(0, 3).forEach(photo => {\n                photoUrls.push(photo.getUrl({ maxWidth: 400, maxHeight: 300 }));\n              });\n            }\n            \n            // Format place data\n            const placeData: SearchResult = {\n              place_id: placeId,\n              name: place.name || '',\n              address: place.formatted_address || '',\n              latitude: place.geometry?.location?.lat() || 0,\n              longitude: place.geometry?.location?.lng() || 0,\n              photos: photoUrls,\n              types: place.types || []\n            };\n            \n            console.log('Converted to SearchResult:', placeData);\n            setSelectedPlace(placeData);\n            setShowSearchFirst(false);\n          } else {\n            console.error('Error fetching place details:', status);\n            setError(`Could not fetch place details: ${status}`);\n            setShowSearchFirst(true);\n          }\n          \n          setIsLoading(false);\n        }\n      );\n    } catch (error) {\n      console.error('Error loading place details:', error);\n      setError('An error occurred while loading place details. Please try again.');\n      setShowSearchFirst(true);\n      setIsLoading(false);\n    }\n  };\n  \n  // Handle place selection from search\n  const handlePlaceSelect = (place: SearchResult) => {\n    console.log('Place selected from search:', place);\n    setSelectedPlace(place);\n    setShowSearchFirst(false);\n    setError(null);\n  };\n  \n  // Handle form success\n  const handleSuccess = (placeId: string) => {\n    console.log('Place added successfully, redirecting with ID:', placeId);\n    setSuccess(true);\n    \n    // Redirect after a short delay to show success state\n    setTimeout(() => {\n      // Redirect back to the source page or to My Places by default\n      if (source) {\n        router.push(`${decodeURIComponent(source)}?added=${placeId}`);\n      } else {\n        // Updated redirect path to the new location\n        router.push(`/my-trip/my-places?added=${placeId}`);\n      }\n    }, 1000);\n  };\n  \n  // Handle form error\n  const handleError = (errorMessage: string) => {\n    console.error('Form error:', errorMessage);\n    setError(errorMessage);\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n  \n  // Parse date string into Date object if provided\n  const parsedDate = date ? new Date(date) : undefined;\n  \n  // Get the effective groupId from either URL param or active trip\n  const effectiveGroupId = groupId || activeTrip?.id;\n  \n  console.log('Selected place:', selectedPlace);\n  console.log('Effective group ID:', effectiveGroupId);\n  \n  // Loading state\n  if (isLoading) {\n    return (\n      <div className=\"flex justify-center items-center min-h-[60vh]\">\n        <Loader2 className=\"h-8 w-8 animate-spin text-sky-500\" />\n      </div>\n    );\n  }\n  \n  // Search first view (when no place is selected)\n  if (showSearchFirst) {\n    return (\n      <div className=\"container max-w-2xl mx-auto py-8 px-4\">\n        <h1 className=\"text-2xl font-bold mb-6\">Add Place to Wishlist</h1>\n        \n        {/* Error message */}\n        {error && (\n          <div className=\"mb-6 p-4 bg-red-50 border border-red-200 rounded-lg flex items-start gap-3\">\n            <XCircle className=\"h-5 w-5 text-red-500 flex-shrink-0 mt-0.5\" />\n            <p className=\"text-sm text-red-700\">{error}</p>\n          </div>\n        )}\n        \n        <div className=\"bg-gray-50 dark:bg-gray-800/50 p-6 rounded-lg\">\n          <p className=\"mb-4 text-muted-foreground\">\n            Search for a place you'd like to add to your wishlist\n          </p>\n          \n          <GooglePlacesSearch\n            placeholder=\"Search for a place to add to your wishlist...\"\n            onPlaceSelect={handlePlaceSelect}\n            size=\"medium\"\n            className=\"w-full\"\n            autoFocus={true}\n            noResultsText=\"No places found\"\n          />\n          \n          <p className=\"mt-4 text-xs text-gray-500\">\n            Note: Adding to your wishlist does not guarantee inclusion in the final group itinerary.\n            The optimization algorithm will consider all members' preferences when creating the group plan.\n          </p>\n        </div>\n      </div>\n    );\n  }\n  \n  // Success state\n  if (success) {\n    return (\n      <div className=\"container max-w-2xl mx-auto py-8 px-4\">\n        <div className=\"p-8 bg-green-50 border border-green-200 rounded-lg flex flex-col items-center\">\n          <CheckCircle className=\"h-16 w-16 text-green-500 mb-4\" />\n          <h2 className=\"text-xl font-semibold text-green-800 mb-2\">Place Added Successfully!</h2>\n          <p className=\"text-center text-green-700 mb-6\">\n            Your place has been added to your wishlist. Redirecting...\n          </p>\n          <div className=\"animate-pulse\">\n            <Loader2 className=\"h-6 w-6 text-green-500\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  // Form view (when place is selected)\n  return (\n    <div className=\"container max-w-2xl mx-auto py-8 px-4\">\n      {/* Error message */}\n      {error && (\n        <div className=\"mb-6 p-4 bg-red-50 border border-red-200 rounded-lg flex items-start gap-3\">\n          <XCircle className=\"h-5 w-5 text-red-500 flex-shrink-0 mt-0.5\" />\n          <p className=\"text-sm text-red-700\">{error}</p>\n        </div>\n      )}\n      \n      <AddPlaceForm\n        placeData={selectedPlace!}\n        onSuccess={handleSuccess}\n        onError={handleError}\n        defaultDate={parsedDate}\n        returnPath=\"/my-trip/my-places\"\n        groupId={effectiveGroupId}\n      />\n    </div>\n  );\n} ","/Users/kominetenma/Desktop/project/app/my-trip/my-places/page.tsx",["934","935"],[],"'use client';\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport { Button } from '@/components/ui/button';\nimport { \n  Card, \n  CardContent, \n  CardHeader, \n  CardTitle, \n  CardFooter \n} from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { \n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogFooter\n} from '@/components/ui/dialog';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Switch } from '@/components/ui/switch';\nimport { \n  MapPin, \n  Clock, \n  Star, \n  Heart, \n  ArrowLeft, \n  Loader2, \n  ThumbsUp, \n  ThumbsDown, \n  Edit, \n  Trash2,\n  CalendarIcon,\n  Plus\n} from 'lucide-react';\nimport { useTrip } from '@/lib/contexts/trip-context';\nimport { useGuestStore } from '@/lib/stores/guest-store';\nimport { useToast } from '@/hooks/use-toast';\nimport { getMyPlacesForTrip, updateMyPlace, deleteMyPlace } from '@/lib/actions/my-places-actions';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from \"@/components/ui/alert-dialog\";\nimport { NoTripSelected } from '@/components/ui/no-trip-selected';\nimport GooglePlacesSearch from '@/components/places/google-places-search';\nimport { SearchResult, MyPlaceData } from '@/lib/types/places';\nimport { Slider } from '@/components/ui/slider';\n\n// Place type definition\ninterface Place {\n  id: string;\n  name: string;\n  address: string;\n  placeId: string;\n  latitude: number;\n  longitude: number;\n  preferenceScore: number;\n  preferredDuration: number;\n  notes: string;\n  isPersonalFavorite: boolean;\n  preferredDate?: string;\n  destinationId?: string; // Made optional since it's not used in the new flow\n  // 🎯 Adoption status\n  isAdopted?: boolean;\n  adoptedDetails?: {\n    visitOrder: number;\n    scheduledDate: string | null;\n    allocatedDuration: number;\n  } | null;\n}\n\nexport default function MyPlacesPage() {\n  const router = useRouter();\n  const searchParams = useSearchParams();\n  const addedPlaceId = searchParams.get('added'); // For highlighting newly added places\n  const { activeTrip, navigateWithTrip } = useTrip();\n  const { sessionId } = useGuestStore();\n  const { toast } = useToast();\n\n  // State\n  const [places, setPlaces] = useState<Place[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [placeToDelete, setPlaceToDelete] = useState<string | null>(null);\n  const [editingPlace, setEditingPlace] = useState<Place | null>(null);\n  const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);\n  const [selectedPlace, setSelectedPlace] = useState<any>(null);\n  const [adoptionFilter, setAdoptionFilter] = useState<'all' | 'adopted' | 'not-adopted'>('all');\n\n  // Predefined duration values in minutes\n  const durationOptions = [\n    15,    // 15 minutes\n    30,    // 30 minutes\n    60,    // 1 hour\n    120,   // 2 hours\n    360,   // 6 hours\n    720,   // 12 hours\n    1440,  // 1 day\n    2880,  // 2 days\n    4320,  // 3 days\n    5760,  // 4 days\n    7200,  // 5 days\n    8640,  // 6 days\n    10080  // 7 days\n  ];\n\n  // Fetch user's places\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      if (!activeTrip || !sessionId) return;\n      \n      setIsLoading(true);\n      \n      try {\n        console.log('🔍 Fetching places for:', { \n          tripId: activeTrip.id, \n          sessionId,\n          hasActiveTrip: !!activeTrip,\n          hasSessionId: !!sessionId\n        });\n        \n        if (!activeTrip.id) {\n          throw new Error('No active trip ID');\n        }\n        \n        if (!sessionId) {\n          throw new Error('No session ID available');\n        }\n        \n        const result = await getMyPlacesForTrip(activeTrip.id, sessionId);\n        console.log('🔍 Fetch result:', result);\n        \n        if (result.success) {\n          setPlaces(result.places);\n        } else {\n          throw new Error('Failed to fetch places from server');\n        }\n      } catch (error) {\n        console.error('Error fetching places:', error);\n        if (error instanceof Error) {\n          console.error('Error details:', error.message, error.stack);\n        }\n        \n        // より具体的なエラーメッセージ\n        let errorMessage = 'Unknown error occurred';\n        if (error instanceof Error) {\n          errorMessage = error.message;\n        }\n        \n        toast({\n          title: \"Error\",\n          description: `Failed to fetch your places: ${errorMessage}`,\n          variant: \"destructive\",\n        });\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    \n    fetchPlaces();\n  }, [activeTrip, sessionId, toast]);\n\n  // Handle place selection from search\n  const handlePlaceSelect = (place: SearchResult) => {\n    console.log('Selected place from search:', place);\n    setSelectedPlace(place);\n  };\n  \n  // Handle Add button click\n  const handleAddButtonClick = () => {\n    if (!selectedPlace || !activeTrip) {\n      console.log('Missing required data:', { selectedPlace, activeTrip });\n      return;\n    }\n    \n    console.log('Adding place from my-places:', selectedPlace);\n    \n    // Build URL parameters\n    const params = new URLSearchParams();\n    params.append('placeId', selectedPlace.place_id);\n    params.append('groupId', activeTrip.id);\n    params.append('name', selectedPlace.name);\n    params.append('address', selectedPlace.address);\n    params.append('latitude', selectedPlace.latitude.toString());\n    params.append('longitude', selectedPlace.longitude.toString());\n    params.append('source', '/my-trip/my-places');\n    \n    console.log('Navigation params:', params.toString());\n    router.push(`/my-trip/my-places/add?${params.toString()}`);\n  };\n  \n  // Update place preferences\n  const handleUpdatePlace = async () => {\n    if (!editingPlace) return;\n    \n    try {\n      await updateMyPlace({\n        id: editingPlace.id,\n        preferredDuration: editingPlace.preferredDuration,\n        preferenceScore: editingPlace.preferenceScore,\n        isPersonalFavorite: editingPlace.isPersonalFavorite,\n        notes: editingPlace.notes,\n        preferredDate: editingPlace.preferredDate\n      });\n      \n      // Update local state\n      setPlaces(places.map(p => \n        p.id === editingPlace.id ? editingPlace : p\n      ));\n      \n      toast({\n        title: \"Updated\",\n        description: \"Place preferences updated successfully\",\n      });\n      \n      // Close dialog\n      setIsEditDialogOpen(false);\n      setEditingPlace(null);\n    } catch (error) {\n      console.error('Error updating place:', error);\n      toast({\n        title: \"Error\",\n        description: \"Failed to update place preferences\",\n        variant: \"destructive\",\n      });\n    }\n  };\n  \n  // Delete a place\n  const handleDeletePlace = async () => {\n    if (!placeToDelete) return;\n    \n    try {\n      await deleteMyPlace(placeToDelete);\n      \n      // Remove from local state\n      setPlaces(places.filter(p => p.id !== placeToDelete));\n      \n      toast({\n        title: \"Deleted\",\n        description: \"Place removed from your wishlist\",\n      });\n    } catch (error) {\n      console.error('Error deleting place:', error);\n      toast({\n        title: \"Error\",\n        description: \"Failed to delete place\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setPlaceToDelete(null);\n    }\n  };\n  \n  \n  // Format duration for display\n  const formatDuration = (minutes: number): string => {\n    if (minutes < 60) return `${minutes} minutes`;\n    if (minutes < 1440) {\n      const hours = Math.floor(minutes / 60);\n      const mins = minutes % 60;\n      return mins > 0 ? `${hours}h ${mins}m` : `${hours} hours`;\n    } else {\n      const days = Math.floor(minutes / 1440);\n      const remainingHours = Math.floor((minutes % 1440) / 60);\n      if (remainingHours > 0) {\n        return `${days} ${days === 1 ? 'day' : 'days'} ${remainingHours}h`;\n      } else {\n        return `${days} ${days === 1 ? 'day' : 'days'}`;\n      }\n    }\n  };\n  \n  // Map slider value to duration\n  const handleDurationChange = (values: number[]) => {\n    const sliderValue = values[0];\n    const selectedDuration = durationOptions[sliderValue];\n    setEditingPlace({...editingPlace!, preferredDuration: selectedDuration});\n  };\n\n  // Find closest duration option index for the current value\n  const getCurrentSliderValue = (duration: number) => {\n    // Find the index of the current duration or the closest one\n    const index = durationOptions.findIndex(d => d >= duration);\n    if (index === -1) return durationOptions.length - 1; // If larger than max, return the last option\n    if (durationOptions[index] === duration) return index;\n    \n    // If between two values, choose the closest one\n    if (index > 0) {\n      const prevDiff = duration - durationOptions[index - 1];\n      const nextDiff = durationOptions[index] - duration;\n      return prevDiff < nextDiff ? index - 1 : index;\n    }\n    \n    return index;\n  };\n  \n  // Get preference label\n  const getPreferenceLabel = (score: number): string => {\n    switch (score) {\n      case 1: return 'Not interested';\n      case 2: return 'Slightly interested';\n      case 3: return 'Interested';\n      case 4: return 'Very interested';\n      case 5: return 'Must visit';\n      default: return 'Interested';\n    }\n  };\n  \n  // Get preference icon\n  const getPreferenceIcon = (score: number) => {\n    return score >= 4 \n      ? <ThumbsUp className=\"h-4 w-4 text-green-500\" /> \n      : score <= 2 \n        ? <ThumbsDown className=\"h-4 w-4 text-red-500\" /> \n        : <Star className=\"h-4 w-4 text-amber-500\" />;\n  };\n  \n  // Handle back to trip page\n  const handleBackToTrip = () => {\n    navigateWithTrip('/my-trip');\n  };\n  \n  // Handle add new place click\n  const handleAddNewPlace = () => {\n    router.push('/my-trip/my-places/add');\n  };\n  \n  return (\n    <div className=\"container pb-20 pt-4\">\n      <div className=\"flex items-center gap-2 mb-6\">\n        <Button variant=\"ghost\" size=\"sm\" onClick={handleBackToTrip}>\n          <ArrowLeft className=\"h-4 w-4 mr-2\" />\n          Back\n        </Button>\n        <div className=\"flex-1\">\n          <h1 className=\"text-2xl font-bold\">My Wishlist</h1>\n          {activeTrip && (\n            <div className=\"flex items-center gap-4 mt-1\">\n              <p className=\"text-sm text-muted-foreground\">Trip: {activeTrip.name}</p>\n              {/* 🎯 Adoption Summary */}\n              {places.length > 0 && (\n                <div className=\"flex items-center gap-2 text-sm\">\n                  <Badge variant=\"outline\" className=\"bg-green-50 border-green-200\">\n                    ✓ {places.filter(p => p.isAdopted).length} Adopted\n                  </Badge>\n                  <Badge variant=\"outline\" className=\"bg-gray-50 border-gray-200\">\n                    ○ {places.filter(p => !p.isAdopted).length} Not adopted\n                  </Badge>\n                  <span className=\"text-muted-foreground\">\n                    (Total {places.length} places)\n                  </span>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n      \n      {!activeTrip ? (\n        <NoTripSelected \n          title=\"No trip selected\" \n          message=\"Please select, create, or join a trip to manage your places wishlist\"\n        />\n      ) : (\n        <div>\n          {/* Search and Add Section */}\n          <Card className=\"mb-6 bg-gray-50 dark:bg-gray-800/50\">\n            <CardHeader className=\"pb-3\">\n              <CardTitle className=\"text-lg\">Add Place to Wishlist</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                <GooglePlacesSearch \n                  placeholder=\"Search for places to add to your wishlist...\"\n                  onPlaceSelect={handlePlaceSelect}\n                  size=\"medium\"\n                  className=\"w-full\"\n                  noResultsText=\"No places found\"\n                />\n                \n                <Button \n                  onClick={handleAddButtonClick} \n                  disabled={!selectedPlace}\n                  className=\"w-full\"\n                >\n                  <Plus className=\"h-4 w-4 mr-2\" />\n                  Add to Wishlist\n                </Button>\n                \n                {!selectedPlace && (\n                  <p className=\"text-sm text-center text-muted-foreground\">\n                    Search for places you'd like to visit during your trip\n                  </p>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n          \n          {/* Places List */}\n          <div className=\"space-y-4\">\n            <div className=\"flex justify-between items-center\">\n              <h2 className=\"text-xl font-semibold\">My Places</h2>\n              \n              <Button \n                variant=\"outline\" \n                size=\"sm\"\n                onClick={handleAddNewPlace}\n              >\n                <Plus className=\"h-4 w-4 mr-2\" />\n                Add New\n              </Button>\n            </div>\n            \n            {/* 🎯 Filter Controls */}\n            {places.length > 0 && (\n              <div className=\"flex items-center gap-2 mb-4\">\n                <span className=\"text-sm font-medium\">Filter:</span>\n                <Button\n                  variant={adoptionFilter === 'all' ? 'default' : 'outline'}\n                  size=\"sm\"\n                  onClick={() => setAdoptionFilter('all')}\n                >\n                  All ({places.length})\n                </Button>\n                <Button\n                  variant={adoptionFilter === 'adopted' ? 'default' : 'outline'}\n                  size=\"sm\"\n                  onClick={() => setAdoptionFilter('adopted')}\n                  className=\"bg-green-50 hover:bg-green-100 border-green-200\"\n                >\n                  Adopted ({places.filter(p => p.isAdopted).length})\n                </Button>\n                <Button\n                  variant={adoptionFilter === 'not-adopted' ? 'default' : 'outline'}\n                  size=\"sm\"\n                  onClick={() => setAdoptionFilter('not-adopted')}\n                  className=\"bg-gray-50 hover:bg-gray-100 border-gray-200\"\n                >\n                  Not adopted ({places.filter(p => !p.isAdopted).length})\n                </Button>\n              </div>\n            )}\n\n            {isLoading ? (\n              <div className=\"flex justify-center py-12\">\n                <Loader2 className=\"h-8 w-8 animate-spin text-sky-500\" />\n              </div>\n            ) : places.length === 0 ? (\n              <div className=\"bg-gray-50 dark:bg-gray-800/50 rounded-lg p-8 text-center\">\n                <p className=\"text-muted-foreground mb-4\">\n                  You haven't added any places to your wishlist yet\n                </p>\n                <Button onClick={handleAddNewPlace}>\n                  <Plus className=\"h-4 w-4 mr-2\" />\n                  Add Your First Place\n                </Button>\n              </div>\n            ) : (\n              (() => {\n                // Filter places based on adoption status\n                const filteredPlaces = places.filter(place => {\n                  if (adoptionFilter === 'adopted') return place.isAdopted;\n                  if (adoptionFilter === 'not-adopted') return !place.isAdopted;\n                  return true; // 'all'\n                });\n\n                if (filteredPlaces.length === 0) {\n                  const filterLabel = adoptionFilter === 'adopted' ? 'Adopted' : \n                                    adoptionFilter === 'not-adopted' ? 'Not adopted' : '';\n                  return (\n                    <div className=\"bg-gray-50 dark:bg-gray-800/50 rounded-lg p-8 text-center\">\n                      <p className=\"text-muted-foreground\">\n                        No {filterLabel.toLowerCase()} places found\n                      </p>\n                    </div>\n                  );\n                }\n\n                return (\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    {filteredPlaces.map((place) => (\n                  <Card \n                    key={place.id} \n                    className={`border overflow-hidden transition-colors ${\n                      addedPlaceId === place.id \n                        ? \"bg-green-50 dark:bg-green-900/10 border-green-200 dark:border-green-900/50\" \n                        : place.isAdopted\n                        ? \"bg-blue-50 dark:bg-blue-900/10 border-blue-200 dark:border-blue-900/50\"\n                        : \"\"\n                    }`}\n                  >\n                    <CardContent className=\"p-4\">\n                      <div className=\"flex flex-col space-y-3\">\n                        <div className=\"flex justify-between items-start\">\n                          <div className=\"flex-1\">\n                            <div className=\"flex items-center gap-2 mb-1\">\n                              <h3 className=\"font-medium text-lg\">{place.name}</h3>\n                              {/* 🎯 Adoption Status Badge */}\n                              {place.isAdopted ? (\n                                <Badge className=\"bg-green-500 hover:bg-green-600 text-white\">\n                                  ✓ Adopted\n                                  {place.adoptedDetails?.visitOrder && ` (#${place.adoptedDetails.visitOrder})`}\n                                </Badge>\n                              ) : (\n                                <Badge variant=\"outline\" className=\"text-gray-500\">\n                                  Not adopted\n                                </Badge>\n                              )}\n                            </div>\n                            <div className=\"flex items-center text-sm text-muted-foreground mb-1\">\n                              <MapPin className=\"h-3 w-3 mr-1 shrink-0\" />\n                              <span className=\"truncate\">{place.address}</span>\n                            </div>\n                            \n                            {/* 🎯 Adopted Details */}\n                            {place.isAdopted && place.adoptedDetails && (\n                              <div className=\"bg-blue-50 dark:bg-blue-900/20 p-2 rounded-md mt-2 text-xs\">\n                                <div className=\"font-medium text-blue-800 dark:text-blue-200 mb-1\">\n                                  Adopted in plan:\n                                </div>\n                                <div className=\"space-y-1 text-blue-700 dark:text-blue-300\">\n                                  <div>Visit order: #{place.adoptedDetails.visitOrder}</div>\n                                  {place.adoptedDetails.scheduledDate && (\n                                    <div>Scheduled date: {new Date(place.adoptedDetails.scheduledDate).toLocaleDateString()}</div>\n                                  )}\n                                  <div>Allocated time: {formatDuration(place.adoptedDetails.allocatedDuration)}</div>\n                                  {place.adoptedDetails.allocatedDuration !== place.preferredDuration && (\n                                    <div className=\"text-amber-600 dark:text-amber-400\">\n                                      (Requested: {formatDuration(place.preferredDuration)} → Adjusted)\n                                    </div>\n                                  )}\n                                </div>\n                              </div>\n                            )}\n                          </div>\n                          \n                          {place.isPersonalFavorite && (\n                            <Heart className=\"h-5 w-5 text-pink-500 fill-pink-500 ml-2\" />\n                          )}\n                        </div>\n                        \n                        <div className=\"flex flex-wrap gap-2\">\n                          <Badge variant=\"outline\" className=\"flex items-center gap-1\">\n                            {getPreferenceIcon(place.preferenceScore)}\n                            {getPreferenceLabel(place.preferenceScore)}\n                          </Badge>\n                          \n                          <Badge variant=\"outline\" className=\"flex items-center gap-1\">\n                            <Clock className=\"h-3 w-3\" />\n                            {formatDuration(place.preferredDuration)}\n                          </Badge>\n                          \n                          {place.preferredDate && (\n                            <Badge variant=\"outline\" className=\"flex items-center gap-1\">\n                              <CalendarIcon className=\"h-3 w-3\" />\n                              {new Date(place.preferredDate).toLocaleDateString()}\n                            </Badge>\n                          )}\n                        </div>\n                        \n                        {place.notes && (\n                          <p className=\"text-sm text-muted-foreground bg-gray-50 dark:bg-gray-800/50 p-2 rounded\">\n                            {place.notes}\n                          </p>\n                        )}\n                        \n                        <div className=\"flex justify-end gap-2 pt-2\">\n                          <Button \n                            variant=\"outline\" \n                            size=\"sm\" \n                            onClick={() => {\n                              setEditingPlace(place);\n                              setIsEditDialogOpen(true);\n                            }}\n                          >\n                            <Edit className=\"h-4 w-4 mr-2\" />\n                            Edit\n                          </Button>\n                          \n                          <Button \n                            variant=\"destructive\" \n                            size=\"sm\"\n                            onClick={() => setPlaceToDelete(place.id)}\n                          >\n                            <Trash2 className=\"h-4 w-4 mr-2\" />\n                            Remove\n                          </Button>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                    ))}\n                  </div>\n                );\n              })()\n            )}\n          </div>\n        </div>\n      )}\n      \n      {/* Edit Place Dialog */}\n      <Dialog open={isEditDialogOpen} onOpenChange={setIsEditDialogOpen}>\n        <DialogContent className=\"sm:max-w-[425px]\">\n          <DialogHeader>\n            <DialogTitle>Edit Place Preferences</DialogTitle>\n          </DialogHeader>\n          \n          {editingPlace && (\n            <div className=\"space-y-4 py-4\">\n              <div>\n                <h3 className=\"font-medium\">{editingPlace.name}</h3>\n                <p className=\"text-sm text-muted-foreground\">{editingPlace.address}</p>\n              </div>\n              \n              <div className=\"space-y-2\">\n                <label className=\"text-sm font-medium\">Interest Level</label>\n                <div className=\"flex items-center gap-2\">\n                  <input \n                    type=\"range\" \n                    min=\"1\" \n                    max=\"5\" \n                    value={editingPlace.preferenceScore} \n                    onChange={(e) => setEditingPlace({\n                      ...editingPlace, \n                      preferenceScore: parseInt(e.target.value)\n                    })}\n                    className=\"flex-1\"\n                  />\n                  <span className=\"w-28 text-sm\">\n                    {getPreferenceLabel(editingPlace.preferenceScore)}\n                  </span>\n                </div>\n              </div>\n              \n              <div className=\"space-y-2\">\n                <label className=\"text-sm font-medium\">Visit Duration (minutes)</label>\n                <div className=\"flex items-center gap-2 mb-2\">\n                  <span className=\"text-sm\">{formatDuration(editingPlace.preferredDuration)}</span>\n                </div>\n                \n                <Slider\n                  min={0}\n                  max={durationOptions.length - 1}\n                  step={1}\n                  value={[getCurrentSliderValue(editingPlace.preferredDuration)]}\n                  onValueChange={handleDurationChange}\n                />\n                \n                <div className=\"flex justify-between text-xs text-muted-foreground mt-1\">\n                  <span>15 minutes</span>\n                  <span>7 days</span>\n                </div>\n              </div>\n              \n              <div className=\"space-y-2\">\n                <label className=\"text-sm font-medium\">Notes</label>\n                <Textarea \n                  value={editingPlace.notes || ''}\n                  onChange={(e) => setEditingPlace({\n                    ...editingPlace, \n                    notes: e.target.value\n                  })}\n                  placeholder=\"Optional notes about this place...\"\n                  className=\"resize-none\"\n                />\n              </div>\n              \n              <div className=\"flex items-center justify-between\">\n                <label className=\"text-sm font-medium flex items-center gap-2\">\n                  <Heart className={`h-5 w-5 ${editingPlace.isPersonalFavorite ? 'text-pink-500 fill-pink-500' : 'text-muted-foreground'}`} />\n                  Mark as Favorite\n                </label>\n                <Switch \n                  checked={editingPlace.isPersonalFavorite}\n                  onCheckedChange={(checked) => setEditingPlace({\n                    ...editingPlace, \n                    isPersonalFavorite: checked\n                  })}\n                />\n              </div>\n            </div>\n          )}\n          \n          <DialogFooter>\n            <Button \n              variant=\"outline\" \n              onClick={() => setIsEditDialogOpen(false)}\n            >\n              Cancel\n            </Button>\n            <Button \n              onClick={handleUpdatePlace}\n            >\n              Save Changes\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n      \n      {/* Delete Confirmation Dialog */}\n      <AlertDialog open={!!placeToDelete} onOpenChange={(open) => !open && setPlaceToDelete(null)}>\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle>Confirm Removal</AlertDialogTitle>\n            <AlertDialogDescription>\n              Are you sure you want to remove this place from your wishlist?\n              This action cannot be undone.\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n            <AlertDialogCancel>Cancel</AlertDialogCancel>\n            <AlertDialogAction onClick={handleDeletePlace}>\n              Remove\n            </AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n    </div>\n  );\n} ","/Users/kominetenma/Desktop/project/components/places/calendar-date-cell.tsx",[],[],"/Users/kominetenma/Desktop/project/components/places/places-search-modal.tsx",[],[],"/Users/kominetenma/Desktop/project/components/places/temporary-place-pin.tsx",[],[],"/Users/kominetenma/Desktop/project/lib/optimization/algorithm-types.ts",[],[],"/Users/kominetenma/Desktop/project/lib/optimization/cluster-internal-optimizer.ts",[],[],"/Users/kominetenma/Desktop/project/lib/optimization/complete-optimizer.ts",[],[],"/Users/kominetenma/Desktop/project/lib/optimization/data-fetcher.ts",[],[],"/Users/kominetenma/Desktop/project/lib/optimization/data-preprocessor.ts",[],[],"/Users/kominetenma/Desktop/project/lib/optimization/data-validator.ts",[],[],"/Users/kominetenma/Desktop/project/lib/optimization/detailed-route-generator.ts",[],[],"/Users/kominetenma/Desktop/project/lib/optimization/detailed-route-types.ts",[],[],"/Users/kominetenma/Desktop/project/lib/optimization/distance-cache.ts",[],[],"/Users/kominetenma/Desktop/project/lib/optimization/fairness-calculator.ts",[],[],"/Users/kominetenma/Desktop/project/lib/optimization/geographical-clustering.ts",[],[],"/Users/kominetenma/Desktop/project/lib/optimization/index.ts",[],[],"/Users/kominetenma/Desktop/project/lib/optimization/normalization-clustering.ts",[],[],"/Users/kominetenma/Desktop/project/lib/optimization/normalization-types.ts",[],[],"/Users/kominetenma/Desktop/project/lib/optimization/route-optimizer.ts",[],[],"/Users/kominetenma/Desktop/project/lib/optimization/route-visualizer.ts",[],[],"/Users/kominetenma/Desktop/project/lib/optimization/time-allocator.ts",[],[],"/Users/kominetenma/Desktop/project/lib/optimization/time-constraints.ts",[],[],"/Users/kominetenma/Desktop/project/lib/optimization/transport-calculator.ts",[],[],"/Users/kominetenma/Desktop/project/lib/optimization/transport-mode-selector.ts",[],[],"/Users/kominetenma/Desktop/project/lib/optimization/tsp-optimizer.ts",[],[],"/Users/kominetenma/Desktop/project/lib/optimization/types.ts",[],[],"/Users/kominetenma/Desktop/project/lib/optimization/user-association.ts",[],[],"/Users/kominetenma/Desktop/project/lib/optimization/z-score-normalization.ts",[],[],"/Users/kominetenma/Desktop/project/lib/types/places.ts",[],[],"/Users/kominetenma/Desktop/project/lib/utils/language-detection.ts",[],[],"/Users/kominetenma/Desktop/project/app/database-integration-demo/page.tsx",[],[],"/Users/kominetenma/Desktop/project/app/interactive-list-demo/page.tsx",["936","937"],[],"'use client'\n\nimport { EnhancedTripPlacesManager } from '@/components/places/enhanced-trip-places-manager'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { \n  List,\n  Users,\n  Lightbulb,\n  Clock,\n  MapPin,\n  Settings,\n  CheckCircle2,\n  Move\n} from 'lucide-react'\n\nexport default function InteractiveListDemoPage() {\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 py-8\">\n      <div className=\"container mx-auto px-4 space-y-8\">\n        {/* Header */}\n        <div className=\"text-center space-y-4\">\n          <h1 className=\"text-4xl font-bold tracking-tight text-gray-900 dark:text-gray-100\">\n            Interactive List Visualization Demo\n          </h1>\n          <p className=\"text-lg text-gray-600 dark:text-gray-400 max-w-3xl mx-auto\">\n            Experience the power of drag-and-drop trip planning with real-time collaboration, \n            intelligent optimization suggestions, and comprehensive permission management.\n          </p>\n          <div className=\"flex flex-wrap justify-center gap-2\">\n            <Badge variant=\"secondary\" className=\"gap-1\">\n              <Move className=\"h-4 w-4\" />\n              Drag & Drop\n            </Badge>\n            <Badge variant=\"secondary\" className=\"gap-1\">\n              <Users className=\"h-4 w-4\" />\n              Real-time Collaboration\n            </Badge>\n            <Badge variant=\"secondary\" className=\"gap-1\">\n              <Lightbulb className=\"h-4 w-4\" />\n              Smart Suggestions\n            </Badge>\n            <Badge variant=\"secondary\" className=\"gap-1\">\n              <Settings className=\"h-4 w-4\" />\n              Permission Control\n            </Badge>\n          </div>\n        </div>\n\n        {/* Feature Highlights */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          <Card>\n            <CardHeader className=\"pb-3\">\n              <CardTitle className=\"text-base flex items-center gap-2\">\n                <List className=\"h-5 w-5 text-blue-500\" />\n                Interactive List\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                Drag and drop destinations to reorder, adjust time allocations with inline controls\n              </p>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader className=\"pb-3\">\n              <CardTitle className=\"text-base flex items-center gap-2\">\n                <Users className=\"h-5 w-5 text-green-500\" />\n                Collaboration\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                See who's editing what in real-time, track changes, resolve conflicts\n              </p>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader className=\"pb-3\">\n              <CardTitle className=\"text-base flex items-center gap-2\">\n                <Lightbulb className=\"h-5 w-5 text-amber-500\" />\n                Optimization\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                AI-powered suggestions for better routes, time allocation, and trip efficiency\n              </p>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader className=\"pb-3\">\n              <CardTitle className=\"text-base flex items-center gap-2\">\n                <CheckCircle2 className=\"h-5 w-5 text-purple-500\" />\n                Permissions\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                Granular control over who can edit what, with role-based permissions\n              </p>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Demo Instructions */}\n        <Card className=\"border-blue-200 bg-blue-50 dark:bg-blue-900/20 dark:border-blue-800\">\n          <CardHeader>\n            <CardTitle className=\"text-blue-900 dark:text-blue-100\">Demo Instructions</CardTitle>\n            <CardDescription className=\"text-blue-700 dark:text-blue-200\">\n              Try these features in the interactive demo below:\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-3\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n              <div className=\"space-y-2\">\n                <h4 className=\"font-medium text-blue-900 dark:text-blue-100\">Interactive List Tab:</h4>\n                <ul className=\"space-y-1 text-blue-700 dark:text-blue-200\">\n                  <li>• Drag destinations to reorder the itinerary</li>\n                  <li>• Click time badges to adjust visit duration</li>\n                  <li>• Use exclude/include buttons to manage destinations</li>\n                  <li>• Select multiple items for bulk operations</li>\n                  <li>• Toggle preferences and transport information</li>\n                </ul>\n              </div>\n              <div className=\"space-y-2\">\n                <h4 className=\"font-medium text-blue-900 dark:text-blue-100\">Collaboration Tab:</h4>\n                <ul className=\"space-y-1 text-blue-700 dark:text-blue-200\">\n                  <li>• View real-time changes from other users</li>\n                  <li>• See who's currently editing what</li>\n                  <li>• Review optimization suggestions</li>\n                  <li>• Track change history and conflicts</li>\n                  <li>• Approve or revert collaborative changes</li>\n                </ul>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Main Demo */}\n        <Card className=\"overflow-hidden\">\n          <CardHeader>\n            <CardTitle className=\"text-xl\">Tokyo Trip Planning Demo</CardTitle>\n            <CardDescription>\n              A sample trip to Tokyo with multiple destinations and collaborative features enabled\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"p-0\">\n            <EnhancedTripPlacesManager />\n          </CardContent>\n        </Card>\n\n        {/* Technical Implementation */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Technical Implementation</CardTitle>\n            <CardDescription>\n              This Interactive List Visualization implements Prompt 8 specifications with the following features:\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div className=\"space-y-3\">\n                <h4 className=\"font-semibold\">Core Features Implemented:</h4>\n                <ul className=\"space-y-1 text-sm text-gray-600 dark:text-gray-400\">\n                  <li>✅ Touch-optimized drag and drop (@dnd-kit)</li>\n                  <li>✅ Role-based editing permissions</li>\n                  <li>✅ Inline time adjustment controls</li>\n                  <li>✅ Real-time collaboration tracking</li>\n                  <li>✅ Optimization suggestions engine</li>\n                  <li>✅ Destination exclude/include functionality</li>\n                  <li>✅ Change history and conflict resolution</li>\n                  <li>✅ Progressive enhancement UI</li>\n                </ul>\n              </div>\n              <div className=\"space-y-3\">\n                <h4 className=\"font-semibold\">Mobile Optimizations:</h4>\n                <ul className=\"space-y-1 text-sm text-gray-600 dark:text-gray-400\">\n                  <li>✅ Touch-friendly drag activation (250ms delay)</li>\n                  <li>✅ 44px minimum touch targets</li>\n                  <li>✅ Responsive layout adaptation</li>\n                  <li>✅ Gesture conflict prevention</li>\n                  <li>✅ Visual feedback during interactions</li>\n                  <li>✅ Accessible screen reader support</li>\n                  <li>✅ Dark mode compatibility</li>\n                  <li>✅ Performance optimization for large lists</li>\n                </ul>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Footer */}\n        <div className=\"text-center text-sm text-gray-500 dark:text-gray-400\">\n          <p>\n            This demo showcases the Interactive List Visualization component built according to \n            Prompt 8 specifications for the Voypath trip planning application.\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}","/Users/kominetenma/Desktop/project/app/map-test/page.tsx",["938"],[],"'use client'\n\nimport { useState, useEffect } from 'react'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'\nimport { \n  Map, \n  Eye, \n  Zap, \n  Settings, \n  RefreshCw,\n  CheckCircle,\n  AlertCircle\n} from 'lucide-react'\nimport { LazyMapLoader } from '@/components/places/map-visualization/lazy-map-loader'\nimport { InteractiveMap } from '@/components/places/map-visualization/interactive-map'\nimport { mockItinerary, mockMultiDayItinerary } from '@/lib/test-data/mock-itinerary'\nimport type { MapVisualizationProps } from '@/lib/types/map-visualization'\n\nexport default function MapTestPage() {\n  const [testMode, setTestMode] = useState<'lazy' | 'direct'>('lazy')\n  const [testResults, setTestResults] = useState<{\n    loading: boolean\n    mapLoaded: boolean\n    markersVisible: boolean\n    routesVisible: boolean\n    controlsResponsive: boolean\n    accessibilityActive: boolean\n    performanceTier: string\n    errors: string[]\n  }>({\n    loading: false,\n    mapLoaded: false,\n    markersVisible: false,\n    routesVisible: false,\n    controlsResponsive: false,\n    accessibilityActive: false,\n    performanceTier: 'unknown',\n    errors: []\n  })\n\n  const [selectedDestination, setSelectedDestination] = useState<string | null>(null)\n  const [mapState, setMapState] = useState<any>(null)\n\n  // Test handlers\n  const handleMarkerClick = (destinationId: string) => {\n    console.log('🎯 Marker clicked:', destinationId)\n    setSelectedDestination(destinationId)\n    setTestResults(prev => ({ \n      ...prev, \n      markersVisible: true,\n      controlsResponsive: true \n    }))\n  }\n\n  const handleRouteClick = (segmentId: string) => {\n    console.log('🛣️ Route clicked:', segmentId)\n    setTestResults(prev => ({ \n      ...prev, \n      routesVisible: true \n    }))\n  }\n\n  const handleMapStateChange = (newState: any) => {\n    console.log('🗺️ Map state changed:', newState)\n    setMapState(newState)\n  }\n\n  // Run automated tests\n  const runTests = () => {\n    setTestResults(prev => ({ ...prev, loading: true, errors: [] }))\n    \n    setTimeout(() => {\n      // Simulate test results\n      setTestResults({\n        loading: false,\n        mapLoaded: true,\n        markersVisible: mockItinerary.destinationVisits.length > 0,\n        routesVisible: mockItinerary.transportSegments.length > 0,\n        controlsResponsive: true,\n        accessibilityActive: true,\n        performanceTier: 'high',\n        errors: []\n      })\n    }, 2000)\n  }\n\n  useEffect(() => {\n    // Auto-run tests on mount\n    runTests()\n  }, [])\n\n  const TestStatus = ({ \n    label, \n    status, \n    loading = false \n  }: { \n    label: string\n    status: boolean\n    loading?: boolean \n  }) => (\n    <div className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-800 rounded-lg\">\n      <span className=\"text-sm font-medium\">{label}</span>\n      <div className=\"flex items-center gap-2\">\n        {loading ? (\n          <RefreshCw className=\"w-4 h-4 animate-spin text-blue-500\" />\n        ) : status ? (\n          <CheckCircle className=\"w-4 h-4 text-green-500\" />\n        ) : (\n          <AlertCircle className=\"w-4 h-4 text-red-500\" />\n        )}\n        <Badge variant={status ? 'default' : 'destructive'}>\n          {loading ? 'Testing...' : status ? 'Pass' : 'Fail'}\n        </Badge>\n      </div>\n    </div>\n  )\n\n  return (\n    <div className=\"container py-6 space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold flex items-center gap-2\">\n            <Map className=\"w-8 h-8 text-blue-500\" />\n            Interactive Map Test\n          </h1>\n          <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\n            Testing the complete map visualization system\n          </p>\n        </div>\n        <Button onClick={runTests} disabled={testResults.loading}>\n          <RefreshCw className={`w-4 h-4 mr-2 ${testResults.loading ? 'animate-spin' : ''}`} />\n          Run Tests\n        </Button>\n      </div>\n\n      {/* Test Configuration */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Settings className=\"w-5 h-5\" />\n            Test Configuration\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"text-sm font-medium\">Test Mode</label>\n              <div className=\"flex gap-2 mt-1\">\n                <Button\n                  variant={testMode === 'lazy' ? 'default' : 'outline'}\n                  size=\"sm\"\n                  onClick={() => setTestMode('lazy')}\n                >\n                  Lazy Loading\n                </Button>\n                <Button\n                  variant={testMode === 'direct' ? 'default' : 'outline'}\n                  size=\"sm\"\n                  onClick={() => setTestMode('direct')}\n                >\n                  Direct Loading\n                </Button>\n              </div>\n            </div>\n            \n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\n              <div>\n                <strong>Destinations:</strong> {mockItinerary.destinationVisits.length}\n              </div>\n              <div>\n                <strong>Routes:</strong> {mockItinerary.transportSegments.length}\n              </div>\n              <div>\n                <strong>Total Days:</strong> {mockMultiDayItinerary.totalDays}\n              </div>\n              <div>\n                <strong>Fairness Score:</strong> {(mockItinerary.fairnessScore * 100).toFixed(0)}%\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Test Results */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Eye className=\"w-5 h-5\" />\n            Test Results\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-3\">\n            <TestStatus \n              label=\"Map Initialization\" \n              status={testResults.mapLoaded}\n              loading={testResults.loading}\n            />\n            <TestStatus \n              label=\"Marker Rendering\" \n              status={testResults.markersVisible}\n              loading={testResults.loading}\n            />\n            <TestStatus \n              label=\"Route Visualization\" \n              status={testResults.routesVisible}\n              loading={testResults.loading}\n            />\n            <TestStatus \n              label=\"Control Responsiveness\" \n              status={testResults.controlsResponsive}\n              loading={testResults.loading}\n            />\n            <TestStatus \n              label=\"Accessibility Features\" \n              status={testResults.accessibilityActive}\n              loading={testResults.loading}\n            />\n            \n            <div className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-800 rounded-lg\">\n              <span className=\"text-sm font-medium\">Performance Tier</span>\n              <Badge variant=\"outline\">\n                {testResults.performanceTier}\n              </Badge>\n            </div>\n\n            {testResults.errors.length > 0 && (\n              <div className=\"p-3 bg-red-50 dark:bg-red-900/20 rounded-lg\">\n                <h4 className=\"text-sm font-medium text-red-800 dark:text-red-400 mb-2\">\n                  Errors Detected:\n                </h4>\n                <ul className=\"text-sm text-red-700 dark:text-red-300 space-y-1\">\n                  {testResults.errors.map((error, index) => (\n                    <li key={index}>• {error}</li>\n                  ))}\n                </ul>\n              </div>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Interactive Test Area */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Zap className=\"w-5 h-5\" />\n            Interactive Test\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <Tabs defaultValue=\"map\" className=\"w-full\">\n            <TabsList className=\"grid w-full grid-cols-2\">\n              <TabsTrigger value=\"map\">Map Visualization</TabsTrigger>\n              <TabsTrigger value=\"debug\">Debug Information</TabsTrigger>\n            </TabsList>\n            \n            <TabsContent value=\"map\" className=\"space-y-4\">\n              <div className=\"h-96 w-full border rounded-lg overflow-hidden\">\n                {testMode === 'lazy' ? (\n                  <LazyMapLoader\n                    itinerary={mockItinerary as any}\n                    multiDayItinerary={mockMultiDayItinerary as any}\n                    onMarkerClick={handleMarkerClick}\n                    onRouteClick={handleRouteClick}\n                    onMapStateChange={handleMapStateChange}\n                    height=\"100%\"\n                    className=\"w-full\"\n                    loadThreshold={0.1}\n                    enablePreload={true}\n                  />\n                ) : (\n                  <InteractiveMap\n                    itinerary={mockItinerary as any}\n                    multiDayItinerary={mockMultiDayItinerary as any}\n                    onMarkerClick={handleMarkerClick}\n                    onRouteClick={handleRouteClick}\n                    onMapStateChange={handleMapStateChange}\n                    height=\"100%\"\n                    className=\"w-full\"\n                  />\n                )}\n              </div>\n              \n              {/* Interaction Feedback */}\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                <Card>\n                  <CardContent className=\"p-4\">\n                    <h4 className=\"font-medium mb-2\">Selected Destination</h4>\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                      {selectedDestination ? (\n                        mockItinerary.destinationVisits.find(d => d.destinationId === selectedDestination)?.location.name || 'Unknown'\n                      ) : (\n                        'Click a marker to select'\n                      )}\n                    </p>\n                  </CardContent>\n                </Card>\n                \n                <Card>\n                  <CardContent className=\"p-4\">\n                    <h4 className=\"font-medium mb-2\">Map State</h4>\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                      {mapState ? (\n                        `Center: ${mapState.center?.lat?.toFixed(3)}, ${mapState.center?.lng?.toFixed(3)}`\n                      ) : (\n                        'No state changes yet'\n                      )}\n                    </p>\n                  </CardContent>\n                </Card>\n                \n                <Card>\n                  <CardContent className=\"p-4\">\n                    <h4 className=\"font-medium mb-2\">Performance</h4>\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                      Tier: {testResults.performanceTier}\n                    </p>\n                  </CardContent>\n                </Card>\n              </div>\n            </TabsContent>\n            \n            <TabsContent value=\"debug\" className=\"space-y-4\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"text-sm\">Mock Itinerary</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <pre className=\"text-xs bg-gray-100 dark:bg-gray-800 p-3 rounded overflow-auto max-h-40\">\n                      {JSON.stringify(mockItinerary, null, 2)}\n                    </pre>\n                  </CardContent>\n                </Card>\n                \n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"text-sm\">Test Results</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <pre className=\"text-xs bg-gray-100 dark:bg-gray-800 p-3 rounded overflow-auto max-h-40\">\n                      {JSON.stringify(testResults, null, 2)}\n                    </pre>\n                  </CardContent>\n                </Card>\n              </div>\n            </TabsContent>\n          </Tabs>\n        </CardContent>\n      </Card>\n\n      {/* Testing Instructions */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Testing Instructions</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-3 text-sm\">\n            <div>\n              <h4 className=\"font-medium\">📱 Mobile Testing</h4>\n              <p className=\"text-gray-600 dark:text-gray-400\">\n                Open this page on mobile devices to test touch interactions, performance tiers, and responsive design.\n              </p>\n            </div>\n            \n            <div>\n              <h4 className=\"font-medium\">♿ Accessibility Testing</h4>\n              <p className=\"text-gray-600 dark:text-gray-400\">\n                Click on the map area to activate accessibility features. Use keyboard navigation (arrow keys, Enter, Space).\n              </p>\n            </div>\n            \n            <div>\n              <h4 className=\"font-medium\">🚀 Performance Testing</h4>\n              <p className=\"text-gray-600 dark:text-gray-400\">\n                Monitor the browser's Network tab for API calls and Developer Tools for performance metrics.\n              </p>\n            </div>\n            \n            <div>\n              <h4 className=\"font-medium\">🎨 Visual Testing</h4>\n              <p className=\"text-gray-600 dark:text-gray-400\">\n                Test both light and dark modes. Verify color coding for different user group sizes (1, 2-4, 5+ users).\n              </p>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}","/Users/kominetenma/Desktop/project/app/test-normalization/page.tsx",[],[],"/Users/kominetenma/Desktop/project/app/test-paris-data/page.tsx",["939","940","941","942","943","944","945","946","947","948","949","950"],[],"'use client';\n\nimport { useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { createClient } from '@/lib/supabase/client';\nimport { useGuestStore } from '@/lib/stores/guest-store';\nimport { useTrip } from '@/lib/contexts/trip-context';\nimport { MapPin, Plus, Trash2 } from 'lucide-react';\n\nconst parisPlaces = [\n  {\n    name: 'Eiffel Tower',\n    address: 'Champ de Mars, 5 Avenue Anatole France, 75007 Paris, France',\n    place_id: 'ChIJLU7jZClu5kcR4PcOOO6p3I0',\n    latitude: 48.8584,\n    longitude: 2.2945\n  },\n  {\n    name: 'Louvre Museum',\n    address: 'Rue de Rivoli, 75001 Paris, France',\n    place_id: 'ChIJD3uTd9hx5kcR1IQvGfr8dbk',\n    latitude: 48.8606,\n    longitude: 2.3376\n  },\n  {\n    name: 'Notre-Dame Cathedral',\n    address: '6 Parvis Notre-Dame - Pl. Jean-Paul II, 75004 Paris, France',\n    place_id: 'ChIJATr1n-Fx5kcRjQb6q6cdQDY',\n    latitude: 48.8530,\n    longitude: 2.3499\n  },\n  {\n    name: 'Arc de Triomphe',\n    address: 'Pl. Charles de Gaulle, 75008 Paris, France',\n    place_id: 'ChIJjx37cOxv5kcRPh1HI9Q2CdY',\n    latitude: 48.8738,\n    longitude: 2.2950\n  },\n  {\n    name: 'Champs-Élysées',\n    address: 'Av. des Champs-Élysées, 75008 Paris, France',\n    place_id: 'ChIJjx37cOxv5kcRPh1HI9Q2CdY',\n    latitude: 48.8698,\n    longitude: 2.3076\n  }\n];\n\nexport default function TestParisDataPage() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [status, setStatus] = useState<string>('');\n  const { sessionId } = useGuestStore();\n  const { activeTrip } = useTrip();\n\n  const addParisPlaces = async () => {\n    if (!sessionId || !activeTrip) {\n      setStatus('❌ No active trip or session found');\n      return;\n    }\n\n    setIsLoading(true);\n    setStatus('Adding Paris places...');\n    const supabase = createClient();\n\n    try {\n      let successCount = 0;\n      \n      for (const place of parisPlaces) {\n        try {\n          // 1. Add to destinations table\n          const { data: destinationData, error: destError } = await supabase\n            .from('destinations')\n            .insert({\n              group_id: activeTrip.id,\n              name: place.name,\n              address: place.address,\n              place_id: place.place_id,\n              latitude: place.latitude,\n              longitude: place.longitude,\n              created_by: null\n            })\n            .select()\n            .single();\n\n          if (destError) {\n            console.warn(`Could not add ${place.name} to destinations:`, destError);\n            continue;\n          }\n\n          // 2. Add to user_preferences table\n          const { error: prefError } = await supabase\n            .from('user_preferences')\n            .insert({\n              group_id: activeTrip.id,\n              user_id: null,\n              session_id: sessionId,\n              destination_id: destinationData.id,\n              preference_score: 4 + Math.random(), // Random score 4-5\n              preferred_duration: 60 + Math.floor(Math.random() * 120), // 60-180 minutes\n              notes: `Beautiful ${place.name} in Paris`,\n              is_personal_favorite: Math.random() > 0.5\n            });\n\n          if (!prefError) {\n            successCount++;\n            console.log(`✅ Added ${place.name}`);\n          }\n\n        } catch (error) {\n          console.error(`Error adding ${place.name}:`, error);\n        }\n      }\n\n      setStatus(`✅ Added ${successCount}/${parisPlaces.length} Paris places to destinations`);\n      \n    } catch (error) {\n      console.error('Error adding Paris places:', error);\n      setStatus('❌ Failed to add Paris places');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const clearDestinations = async () => {\n    if (!activeTrip) {\n      setStatus('❌ No active trip found');\n      return;\n    }\n\n    setIsLoading(true);\n    setStatus('Clearing destinations...');\n    const supabase = createClient();\n\n    try {\n      // Delete user preferences first (foreign key constraint)\n      await supabase\n        .from('user_preferences')\n        .delete()\n        .eq('group_id', activeTrip.id);\n\n      // Delete destinations\n      const { error } = await supabase\n        .from('destinations')\n        .delete()\n        .eq('group_id', activeTrip.id);\n\n      if (error) {\n        setStatus('❌ Failed to clear destinations');\n      } else {\n        setStatus('✅ Cleared all destinations for this trip');\n      }\n    } catch (error) {\n      console.error('Error clearing destinations:', error);\n      setStatus('❌ Error clearing destinations');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto p-6 space-y-6\">\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <MapPin className=\"w-5 h-5\" />\n            Paris Test Data Manager\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"text-sm space-y-2\">\n            <p><strong>Active Trip:</strong> {activeTrip?.name || 'None'}</p>\n            <p><strong>Session ID:</strong> {sessionId || 'None'}</p>\n            <p><strong>Status:</strong> {status}</p>\n          </div>\n\n          <div className=\"flex gap-2\">\n            <Button \n              onClick={addParisPlaces}\n              disabled={isLoading || !activeTrip}\n              className=\"flex items-center gap-2\"\n            >\n              <Plus className=\"w-4 h-4\" />\n              Add Paris Places to Destinations\n            </Button>\n\n            <Button \n              variant=\"destructive\"\n              onClick={clearDestinations}\n              disabled={isLoading || !activeTrip}\n              className=\"flex items-center gap-2\"\n            >\n              <Trash2 className=\"w-4 h-4\" />\n              Clear All Destinations\n            </Button>\n          </div>\n\n          <div>\n            <h3 className=\"font-medium mb-2\">Test Places to be Added:</h3>\n            <ul className=\"text-sm space-y-1\">\n              {parisPlaces.map((place, index) => (\n                <li key={index} className=\"flex items-center gap-2\">\n                  <MapPin className=\"w-3 h-3 text-blue-500\" />\n                  <span>{place.name}</span>\n                  <span className=\"text-gray-500\">- {place.address}</span>\n                </li>\n              ))}\n            </ul>\n          </div>\n\n          <div className=\"bg-yellow-50 p-3 rounded-lg text-sm\">\n            <h4 className=\"font-medium mb-1\">How to Test My Places Adoption Status:</h4>\n            <ol className=\"list-decimal list-inside space-y-1\">\n              <li>Make sure you have an active trip selected</li>\n              <li>Click \"Add Paris Places to Destinations\" to add test data</li>\n              <li>Navigate to My Trip → My Places</li>\n              <li>Verify all places show \"未採用\" (Not Adopted) status</li>\n              <li>Navigate to My Trip → Plan section</li>\n              <li>Click \"Generate Optimized Plan\" button (when 2+ places present)</li>\n              <li>Return to My Places and verify adopted places show \"✓ 採用済み\" with details</li>\n              <li>Test the filter buttons: すべて/採用済み/未採用</li>\n              <li>Check adoption summary in header</li>\n            </ol>\n          </div>\n          \n          <div className=\"bg-blue-50 p-3 rounded-lg text-sm\">\n            <h4 className=\"font-medium mb-1\">Expected Results:</h4>\n            <ul className=\"list-disc list-inside space-y-1\">\n              <li><strong>Before Optimization:</strong> All places show \"未採用\" badge</li>\n              <li><strong>After Optimization:</strong> Adopted places show \"✓ 採用済み (#N)\" with visit order</li>\n              <li><strong>Adoption Details:</strong> Visit order, scheduled date, allocated duration</li>\n              <li><strong>Time Adjustments:</strong> Shows if allocated time differs from preferred time</li>\n              <li><strong>Header Summary:</strong> Shows count of adopted vs not-adopted places</li>\n              <li><strong>Filtering:</strong> Can filter by adoption status</li>\n            </ul>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}","/Users/kominetenma/Desktop/project/components/places/accessible-timeline.tsx",[],[],"/Users/kominetenma/Desktop/project/components/places/calendar-view.tsx",[],[],"/Users/kominetenma/Desktop/project/components/places/collaboration-tracker.tsx",["951","952"],[],"'use client'\n\nimport React, { useState, useEffect } from 'react'\nimport { cn } from '@/lib/utils'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { ScrollArea } from '@/components/ui/scroll-area'\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui/tooltip'\nimport { Alert, AlertDescription } from '@/components/ui/alert'\nimport {\n  User,\n  Clock,\n  Edit3,\n  Eye,\n  Undo2,\n  CheckCircle2,\n  AlertTriangle,\n  RefreshCw,\n  Users,\n  MessageCircle,\n  Activity,\n  History,\n  GitCommit,\n  Merge,\n  X\n} from 'lucide-react'\nimport type { \n  CollaborativeChange,\n  UserContext,\n  InteractiveListItem\n} from '@/lib/types/interactive-list'\n\ninterface CollaborationTrackerProps {\n  changes: CollaborativeChange[]\n  currentUser: UserContext\n  activeEditors: ActiveEditor[]\n  onRevertChange?: (changeId: string) => void\n  onApproveChange?: (changeId: string) => void\n  onRejectChange?: (changeId: string) => void\n  onMergeConflict?: (changes: CollaborativeChange[]) => void\n  className?: string\n}\n\ninterface ActiveEditor {\n  userId: string\n  userName: string\n  userColor: string\n  editingItem?: string\n  editingField?: string\n  lastActivity: Date\n  isOnline: boolean\n}\n\ninterface ChangeGroup {\n  destinationId: string\n  destinationName: string\n  changes: CollaborativeChange[]\n  latestChange: Date\n  hasConflicts: boolean\n  conflictCount: number\n}\n\nconst CHANGE_TYPE_ICONS = {\n  reorder: <GitCommit className=\"h-4 w-4\" />,\n  time_adjust: <Clock className=\"h-4 w-4\" />,\n  exclude: <Eye className=\"h-4 w-4\" />,\n  include: <CheckCircle2 className=\"h-4 w-4\" />,\n  add: <User className=\"h-4 w-4\" />,\n  remove: <X className=\"h-4 w-4\" />\n} as const\n\nconst CHANGE_TYPE_COLORS = {\n  reorder: 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200',\n  time_adjust: 'bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-200',\n  exclude: 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200',\n  include: 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200',\n  add: 'bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200',\n  remove: 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200'\n} as const\n\nconst CHANGE_STATUS_COLORS = {\n  pending: 'border-l-yellow-500 bg-yellow-50 dark:bg-yellow-900/20',\n  applied: 'border-l-green-500 bg-green-50 dark:bg-green-900/20',\n  reverted: 'border-l-gray-500 bg-gray-50 dark:bg-gray-900/20',\n  conflicted: 'border-l-red-500 bg-red-50 dark:bg-red-900/20'\n} as const\n\nexport function CollaborationTracker({\n  changes,\n  currentUser,\n  activeEditors,\n  onRevertChange,\n  onApproveChange,\n  onRejectChange,\n  onMergeConflict,\n  className\n}: CollaborationTrackerProps) {\n  const [selectedChange, setSelectedChange] = useState<string | null>(null)\n  const [viewMode, setViewMode] = useState<'timeline' | 'grouped' | 'conflicts'>('timeline')\n  const [autoRefresh, setAutoRefresh] = useState(true)\n\n  // Group changes by destination for better organization\n  const groupedChanges = React.useMemo(() => {\n    const groups: { [key: string]: ChangeGroup } = {}\n    \n    changes.forEach(change => {\n      if (!groups[change.destinationId]) {\n        groups[change.destinationId] = {\n          destinationId: change.destinationId,\n          destinationName: `Destination ${change.destinationId.slice(0, 8)}`, // Would be actual name in real implementation\n          changes: [],\n          latestChange: change.timestamp,\n          hasConflicts: false,\n          conflictCount: 0\n        }\n      }\n      \n      groups[change.destinationId].changes.push(change)\n      \n      if (change.timestamp > groups[change.destinationId].latestChange) {\n        groups[change.destinationId].latestChange = change.timestamp\n      }\n      \n      if (change.status === 'conflicted') {\n        groups[change.destinationId].hasConflicts = true\n        groups[change.destinationId].conflictCount++\n      }\n    })\n    \n    // Sort groups by latest activity\n    return Object.values(groups).sort((a, b) => b.latestChange.getTime() - a.latestChange.getTime())\n  }, [changes])\n\n  // Filter changes based on view mode\n  const filteredChanges = React.useMemo(() => {\n    switch (viewMode) {\n      case 'conflicts':\n        return changes.filter(change => change.status === 'conflicted')\n      case 'grouped':\n        return groupedChanges.flatMap(group => group.changes)\n      default:\n        return [...changes].sort((a, b) => b.timestamp.getTime() - a.timestamp.getTime())\n    }\n  }, [changes, viewMode, groupedChanges])\n\n  // Format time difference\n  const formatTimeAgo = (date: Date) => {\n    const now = new Date()\n    const diff = now.getTime() - date.getTime()\n    const minutes = Math.floor(diff / 60000)\n    \n    if (minutes < 1) return 'Just now'\n    if (minutes < 60) return `${minutes}m ago`\n    if (minutes < 1440) return `${Math.floor(minutes / 60)}h ago`\n    return `${Math.floor(minutes / 1440)}d ago`\n  }\n\n  // Get user initials\n  const getUserInitials = (userName: string) => {\n    return userName.split(' ').map(n => n[0]).join('').toUpperCase()\n  }\n\n  // Format change description\n  const formatChangeDescription = (change: CollaborativeChange) => {\n    switch (change.changeType) {\n      case 'reorder':\n        return `Moved from position ${change.oldValue} to ${change.newValue}`\n      case 'time_adjust':\n        const oldTime = Math.round(change.oldValue / 60)\n        const newTime = Math.round(change.newValue / 60)\n        return `Changed time from ${oldTime}h to ${newTime}h`\n      case 'exclude':\n        return 'Excluded from itinerary'\n      case 'include':\n        return 'Included in itinerary'\n      case 'add':\n        return 'Added to itinerary'\n      case 'remove':\n        return 'Removed from itinerary'\n      default:\n        return 'Made changes'\n    }\n  }\n\n  // Render active editors\n  const renderActiveEditors = () => (\n    <Card className=\"mb-4\">\n      <CardHeader className=\"pb-3\">\n        <CardTitle className=\"text-sm font-medium flex items-center gap-2\">\n          <Activity className=\"h-4 w-4\" />\n          Currently Editing ({activeEditors.filter(e => e.isOnline).length})\n        </CardTitle>\n      </CardHeader>\n      <CardContent className=\"pt-0\">\n        {activeEditors.filter(e => e.isOnline).length === 0 ? (\n          <p className=\"text-sm text-gray-500\">No one is currently editing</p>\n        ) : (\n          <div className=\"flex flex-wrap gap-2\">\n            {activeEditors.filter(e => e.isOnline).map(editor => (\n              <TooltipProvider key={editor.userId}>\n                <Tooltip>\n                  <TooltipTrigger>\n                    <div className=\"flex items-center gap-2 px-3 py-2 bg-gray-100 dark:bg-gray-800 rounded-lg\">\n                      <Avatar className=\"h-6 w-6\">\n                        <AvatarFallback \n                          className=\"text-xs\" \n                          style={{ backgroundColor: editor.userColor + '20', color: editor.userColor }}\n                        >\n                          {getUserInitials(editor.userName)}\n                        </AvatarFallback>\n                      </Avatar>\n                      <span className=\"text-sm font-medium\">{editor.userName}</span>\n                      {editor.editingItem && (\n                        <Edit3 className=\"h-3 w-3 text-gray-400\" />\n                      )}\n                    </div>\n                  </TooltipTrigger>\n                  <TooltipContent>\n                    <div className=\"text-xs\">\n                      {editor.editingItem ? \n                        `Editing ${editor.editingField || 'destination'}` : \n                        'Online'\n                      }\n                      <br />\n                      Last active: {formatTimeAgo(editor.lastActivity)}\n                    </div>\n                  </TooltipContent>\n                </Tooltip>\n              </TooltipProvider>\n            ))}\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  )\n\n  // Render change item\n  const renderChangeItem = (change: CollaborativeChange) => (\n    <Card \n      key={change.id}\n      className={cn(\n        \"border-l-4 transition-all duration-200\",\n        CHANGE_STATUS_COLORS[change.status],\n        selectedChange === change.id && \"ring-2 ring-blue-500\",\n        \"cursor-pointer hover:shadow-md\"\n      )}\n      onClick={() => setSelectedChange(selectedChange === change.id ? null : change.id)}\n    >\n      <CardContent className=\"p-4\">\n        <div className=\"flex items-start justify-between\">\n          <div className=\"flex items-start gap-3 flex-1\">\n            <Avatar className=\"h-8 w-8\">\n              <AvatarFallback \n                className=\"text-xs\"\n                style={{ \n                  backgroundColor: change.userId === currentUser.id ? currentUser.assignedColor + '20' : '#6B7280' + '20',\n                  color: change.userId === currentUser.id ? currentUser.assignedColor : '#6B7280'\n                }}\n              >\n                {getUserInitials(change.userName)}\n              </AvatarFallback>\n            </Avatar>\n            \n            <div className=\"flex-1 min-w-0\">\n              <div className=\"flex items-center gap-2 mb-1\">\n                <span className=\"font-medium text-sm\">{change.userName}</span>\n                <Badge \n                  variant=\"secondary\" \n                  className={cn(\"text-xs\", CHANGE_TYPE_COLORS[change.changeType])}\n                >\n                  {CHANGE_TYPE_ICONS[change.changeType]}\n                  <span className=\"ml-1 capitalize\">{change.changeType.replace('_', ' ')}</span>\n                </Badge>\n                <span className=\"text-xs text-gray-500\">{formatTimeAgo(change.timestamp)}</span>\n              </div>\n              \n              <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                {formatChangeDescription(change)}\n              </p>\n              \n              {change.reasoning && (\n                <p className=\"text-xs text-gray-500 mt-1 italic\">\n                  \"{change.reasoning}\"\n                </p>\n              )}\n              \n              {change.impact.usersAffected.length > 0 && (\n                <div className=\"flex items-center gap-1 mt-2 text-xs text-gray-500\">\n                  <Users className=\"h-3 w-3\" />\n                  <span>Affects {change.impact.usersAffected.length} users</span>\n                  {change.impact.satisfactionChange !== 0 && (\n                    <span className={cn(\n                      \"ml-2\",\n                      change.impact.satisfactionChange > 0 ? \"text-green-600\" : \"text-red-600\"\n                    )}>\n                      {change.impact.satisfactionChange > 0 ? '+' : ''}{Math.round(change.impact.satisfactionChange * 100)}% satisfaction\n                    </span>\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n          \n          <div className=\"flex items-center gap-1 ml-2\">\n            {change.status === 'pending' && change.userId !== currentUser.id && (\n              <>\n                <Button \n                  size=\"sm\" \n                  variant=\"ghost\" \n                  className=\"h-8 w-8 p-0\"\n                  onClick={(e) => {\n                    e.stopPropagation()\n                    onApproveChange?.(change.id)\n                  }}\n                >\n                  <CheckCircle2 className=\"h-4 w-4 text-green-600\" />\n                </Button>\n                <Button \n                  size=\"sm\" \n                  variant=\"ghost\" \n                  className=\"h-8 w-8 p-0\"\n                  onClick={(e) => {\n                    e.stopPropagation()\n                    onRejectChange?.(change.id)\n                  }}\n                >\n                  <X className=\"h-4 w-4 text-red-600\" />\n                </Button>\n              </>\n            )}\n            \n            {change.status === 'applied' && (\n              <Button \n                size=\"sm\" \n                variant=\"ghost\" \n                className=\"h-8 w-8 p-0\"\n                onClick={(e) => {\n                  e.stopPropagation()\n                  onRevertChange?.(change.id)\n                }}\n              >\n                <Undo2 className=\"h-4 w-4 text-gray-500\" />\n              </Button>\n            )}\n            \n            {change.status === 'conflicted' && (\n              <AlertTriangle className=\"h-4 w-4 text-orange-500\" />\n            )}\n          </div>\n        </div>\n        \n        {/* Expanded details */}\n        {selectedChange === change.id && (\n          <div className=\"mt-4 pt-4 border-t border-gray-200 dark:border-gray-700\">\n            <div className=\"grid grid-cols-2 gap-4 text-xs\">\n              <div>\n                <strong>Change ID:</strong> {change.id.slice(0, 8)}...\n              </div>\n              <div>\n                <strong>Status:</strong> {change.status}\n              </div>\n              <div>\n                <strong>Time change:</strong> {change.impact.scheduleChange > 0 ? '+' : ''}{change.impact.scheduleChange}min\n              </div>\n              <div>\n                <strong>Users affected:</strong> {change.impact.usersAffected.join(', ')}\n              </div>\n            </div>\n            \n            {change.status === 'conflicted' && (\n              <Alert className=\"mt-3\">\n                <AlertTriangle className=\"h-4 w-4\" />\n                <AlertDescription className=\"text-xs\">\n                  This change conflicts with other recent changes. Manual resolution may be required.\n                </AlertDescription>\n              </Alert>\n            )}\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  )\n\n  return (\n    <div className={cn(\"space-y-4\", className)}>\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center gap-3\">\n          <History className=\"h-5 w-5\" />\n          <h3 className=\"text-lg font-semibold\">Collaboration</h3>\n          <Badge variant=\"outline\">\n            {changes.length} changes\n          </Badge>\n          {changes.filter(c => c.status === 'conflicted').length > 0 && (\n            <Badge variant=\"destructive\">\n              {changes.filter(c => c.status === 'conflicted').length} conflicts\n            </Badge>\n          )}\n        </div>\n        \n        <div className=\"flex items-center gap-2\">\n          <Button\n            size=\"sm\"\n            variant={viewMode === 'timeline' ? 'default' : 'outline'}\n            onClick={() => setViewMode('timeline')}\n          >\n            Timeline\n          </Button>\n          <Button\n            size=\"sm\"\n            variant={viewMode === 'grouped' ? 'default' : 'outline'}\n            onClick={() => setViewMode('grouped')}\n          >\n            Grouped\n          </Button>\n          <Button\n            size=\"sm\"\n            variant={viewMode === 'conflicts' ? 'default' : 'outline'}\n            onClick={() => setViewMode('conflicts')}\n          >\n            Conflicts\n          </Button>\n          \n          {autoRefresh && (\n            <RefreshCw className=\"h-4 w-4 text-green-500 animate-spin\" />\n          )}\n        </div>\n      </div>\n      \n      {/* Active Editors */}\n      {renderActiveEditors()}\n      \n      {/* Changes List */}\n      <ScrollArea className=\"h-[400px]\">\n        <div className=\"space-y-3\">\n          {filteredChanges.length === 0 ? (\n            <Card>\n              <CardContent className=\"flex flex-col items-center justify-center py-12\">\n                <History className=\"h-12 w-12 text-gray-400 mb-4\" />\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\">\n                  No changes yet\n                </h3>\n                <p className=\"text-gray-500 dark:text-gray-400 text-center\">\n                  {viewMode === 'conflicts' ? \n                    'No conflicts to resolve' : \n                    'Changes will appear here as users edit the itinerary'\n                  }\n                </p>\n              </CardContent>\n            </Card>\n          ) : (\n            viewMode === 'grouped' ? (\n              groupedChanges.map(group => (\n                <div key={group.destinationId} className=\"space-y-2\">\n                  <div className=\"flex items-center gap-2 text-sm font-medium text-gray-700 dark:text-gray-300\">\n                    <span>{group.destinationName}</span>\n                    <Badge variant=\"outline\" className=\"text-xs\">\n                      {group.changes.length} changes\n                    </Badge>\n                    {group.hasConflicts && (\n                      <Badge variant=\"destructive\" className=\"text-xs\">\n                        {group.conflictCount} conflicts\n                      </Badge>\n                    )}\n                  </div>\n                  {group.changes.map(renderChangeItem)}\n                </div>\n              ))\n            ) : (\n              filteredChanges.map(renderChangeItem)\n            )\n          )}\n        </div>\n      </ScrollArea>\n      \n      {/* Conflict Resolution */}\n      {changes.filter(c => c.status === 'conflicted').length > 0 && (\n        <Alert>\n          <AlertTriangle className=\"h-4 w-4\" />\n          <AlertDescription>\n            There are {changes.filter(c => c.status === 'conflicted').length} conflicting changes that need resolution.\n            <Button \n              size=\"sm\" \n              className=\"ml-2\"\n              onClick={() => onMergeConflict?.(changes.filter(c => c.status === 'conflicted'))}\n            >\n              <Merge className=\"h-4 w-4 mr-2\" />\n              Resolve Conflicts\n            </Button>\n          </AlertDescription>\n        </Alert>\n      )}\n    </div>\n  )\n}\n\nexport default CollaborationTracker","/Users/kominetenma/Desktop/project/components/places/detailed-timeline-view.tsx",[],[],"/Users/kominetenma/Desktop/project/components/places/enhanced-trip-places-manager.tsx",[],[],"/Users/kominetenma/Desktop/project/components/places/interactive-list-item.tsx",[],[],"/Users/kominetenma/Desktop/project/components/places/interactive-list-view.tsx",[],[],"/Users/kominetenma/Desktop/project/components/places/map-visualization/accessibility-features.tsx",["953"],[],"// Comprehensive accessibility features for map visualization\n'use client'\n\nimport { useState, useEffect, useRef } from 'react'\nimport { Button } from '@/components/ui/button'\nimport { \n  Sheet, \n  SheetContent, \n  SheetHeader, \n  SheetTitle, \n  SheetTrigger,\n  SheetDescription \n} from '@/components/ui/sheet'\nimport { \n  Eye, \n  Volume2, \n  Keyboard, \n  Play, \n  Pause, \n  SkipForward, \n  SkipBack,\n  Settings,\n  Type,\n  Contrast\n} from 'lucide-react'\nimport type { \n  MapVisualizationProps, \n  DestinationVisit, \n  RouteSegmentConfig,\n  AccessibilityOptions,\n  VoiceNavigationState\n} from '@/lib/types/map-visualization'\n\ninterface AccessibilityFeaturesProps {\n  itinerary?: any\n  onDestinationFocus?: (destinationId: string) => void\n  onRouteAnnounce?: (segment: RouteSegmentConfig) => void\n  isActive?: boolean\n}\n\nexport function AccessibilityFeatures({\n  itinerary,\n  onDestinationFocus,\n  onRouteAnnounce,\n  isActive = false\n}: AccessibilityFeaturesProps) {\n  const [options, setOptions] = useState<AccessibilityOptions>({\n    screenReader: false,\n    voiceNavigation: false,\n    highContrast: false,\n    largeText: false,\n    reducedMotion: false,\n    keyboardNavigation: true\n  })\n  \n  const [voiceState, setVoiceState] = useState<VoiceNavigationState>({\n    isPlaying: false,\n    currentIndex: 0,\n    autoPlay: false\n  })\n  \n  const [isSettingsOpen, setIsSettingsOpen] = useState(false)\n  const speechSynthesisRef = useRef<SpeechSynthesis | null>(null)\n  const currentUtteranceRef = useRef<SpeechSynthesisUtterance | null>(null)\n  \n  // Initialize accessibility features\n  useEffect(() => {\n    // Detect screen reader\n    const hasScreenReader = \n      window.speechSynthesis !== undefined ||\n      navigator.userAgent.includes('NVDA') ||\n      navigator.userAgent.includes('JAWS') ||\n      navigator.userAgent.includes('VoiceOver')\n    \n    // Detect user preferences\n    const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches\n    const prefersHighContrast = window.matchMedia('(prefers-contrast: high)').matches\n    \n    setOptions(prev => ({\n      ...prev,\n      screenReader: hasScreenReader,\n      reducedMotion: prefersReducedMotion,\n      highContrast: prefersHighContrast\n    }))\n    \n    speechSynthesisRef.current = window.speechSynthesis\n    \n    // Load saved preferences\n    const savedOptions = localStorage.getItem('map-accessibility-options')\n    if (savedOptions) {\n      try {\n        const parsed = JSON.parse(savedOptions)\n        setOptions(prev => ({ ...prev, ...parsed }))\n      } catch (error) {\n        console.error('Failed to load accessibility options:', error)\n      }\n    }\n  }, [])\n  \n  // Save preferences when changed\n  useEffect(() => {\n    localStorage.setItem('map-accessibility-options', JSON.stringify(options))\n    \n    // Apply global styles\n    document.documentElement.classList.toggle('high-contrast', options.highContrast)\n    document.documentElement.classList.toggle('large-text', options.largeText)\n    document.documentElement.classList.toggle('reduced-motion', options.reducedMotion)\n  }, [options])\n  \n  // Keyboard navigation\n  useEffect(() => {\n    if (!options.keyboardNavigation || !isActive) return\n    \n    const handleKeyDown = (event: KeyboardEvent) => {\n      // Skip if user is typing in input\n      if (event.target instanceof HTMLInputElement || event.target instanceof HTMLTextAreaElement) {\n        return\n      }\n      \n      switch (event.key) {\n        case 'ArrowRight':\n        case 'ArrowDown':\n          event.preventDefault()\n          navigateToNext()\n          break\n          \n        case 'ArrowLeft':\n        case 'ArrowUp':\n          event.preventDefault()\n          navigateToPrevious()\n          break\n          \n        case 'Enter':\n        case ' ':\n          event.preventDefault()\n          toggleVoiceNavigation()\n          break\n          \n        case 'Escape':\n          event.preventDefault()\n          stopVoiceNavigation()\n          break\n          \n        case 'h':\n          if (event.altKey) {\n            event.preventDefault()\n            announceHelp()\n          }\n          break\n      }\n    }\n    \n    document.addEventListener('keydown', handleKeyDown)\n    return () => document.removeEventListener('keydown', handleKeyDown)\n  }, [options.keyboardNavigation, isActive, voiceState])\n  \n  const navigateToNext = () => {\n    if (!itinerary?.destinationVisits) return\n    \n    const nextIndex = Math.min(\n      voiceState.currentIndex + 1,\n      itinerary.destinationVisits.length - 1\n    )\n    \n    setVoiceState(prev => ({ ...prev, currentIndex: nextIndex }))\n    \n    const destination = itinerary.destinationVisits[nextIndex]\n    if (destination) {\n      onDestinationFocus?.(destination.destinationId)\n      announceDestination(destination, nextIndex + 1)\n    }\n  }\n  \n  const navigateToPrevious = () => {\n    if (!itinerary?.destinationVisits) return\n    \n    const prevIndex = Math.max(voiceState.currentIndex - 1, 0)\n    \n    setVoiceState(prev => ({ ...prev, currentIndex: prevIndex }))\n    \n    const destination = itinerary.destinationVisits[prevIndex]\n    if (destination) {\n      onDestinationFocus?.(destination.destinationId)\n      announceDestination(destination, prevIndex + 1)\n    }\n  }\n  \n  const toggleVoiceNavigation = () => {\n    if (voiceState.isPlaying) {\n      pauseVoiceNavigation()\n    } else {\n      startVoiceNavigation()\n    }\n  }\n  \n  const startVoiceNavigation = () => {\n    if (!options.voiceNavigation || !itinerary?.destinationVisits) return\n    \n    setVoiceState(prev => ({ ...prev, isPlaying: true }))\n    \n    const destination = itinerary.destinationVisits[voiceState.currentIndex]\n    if (destination) {\n      announceDestination(destination, voiceState.currentIndex + 1)\n    }\n  }\n  \n  const pauseVoiceNavigation = () => {\n    setVoiceState(prev => ({ ...prev, isPlaying: false }))\n    \n    if (speechSynthesisRef.current) {\n      speechSynthesisRef.current.pause()\n    }\n  }\n  \n  const stopVoiceNavigation = () => {\n    setVoiceState(prev => ({ \n      ...prev, \n      isPlaying: false, \n      currentIndex: 0 \n    }))\n    \n    if (speechSynthesisRef.current) {\n      speechSynthesisRef.current.cancel()\n    }\n  }\n  \n  const announceDestination = (destination: DestinationVisit, order: number) => {\n    if (!options.voiceNavigation || !speechSynthesisRef.current) return\n    \n    const text = createDestinationAnnouncement(destination, order)\n    speak(text)\n  }\n  \n  const announceRoute = (segment: RouteSegmentConfig) => {\n    if (!options.voiceNavigation || !speechSynthesisRef.current) return\n    \n    const text = createRouteAnnouncement(segment)\n    speak(text)\n  }\n  \n  const announceHelp = () => {\n    const helpText = `\n      Map navigation help. \n      Use arrow keys to move between destinations.\n      Press Enter or Space to start voice guidance.\n      Press Escape to stop voice guidance.\n      Press Alt + H to repeat this help.\n      There are ${itinerary?.destinationVisits?.length || 0} destinations in your trip.\n    `\n    speak(helpText)\n  }\n  \n  const speak = (text: string) => {\n    if (!speechSynthesisRef.current) return\n    \n    // Cancel any ongoing speech\n    speechSynthesisRef.current.cancel()\n    \n    const utterance = new SpeechSynthesisUtterance(text)\n    utterance.rate = 0.9\n    utterance.pitch = 1\n    utterance.volume = 0.8\n    \n    // Handle completion\n    utterance.onend = () => {\n      if (voiceState.autoPlay && voiceState.isPlaying) {\n        setTimeout(() => {\n          navigateToNext()\n        }, 1000)\n      }\n    }\n    \n    currentUtteranceRef.current = utterance\n    speechSynthesisRef.current.speak(utterance)\n  }\n  \n  const createDestinationAnnouncement = (destination: DestinationVisit, order: number): string => {\n    const parts = [\n      `Destination ${order}`,\n      destination.location.name || 'Unknown location',\n      `Allocated time: ${destination.allocatedHours} hours`\n    ]\n    \n    if (destination.wishfulUsers.length > 0) {\n      const userNames = destination.wishfulUsers.map(u => u.member.display_name).join(', ')\n      parts.push(`Requested by: ${userNames}`)\n    }\n    \n    return parts.join('. ') + '.'\n  }\n  \n  const createRouteAnnouncement = (segment: RouteSegmentConfig): string => {\n    const mode = segment.transportMode === 'flying' ? 'flight' : \n                 segment.transportMode === 'driving' ? 'drive' : 'walk'\n    \n    return `Next: ${mode} for ${formatDuration(segment.duration)} to ${segment.toName}.`\n  }\n  \n  const formatDuration = (hours: number): string => {\n    if (hours < 1) {\n      return `${Math.round(hours * 60)} minutes`\n    }\n    const wholeHours = Math.floor(hours)\n    const minutes = Math.round((hours - wholeHours) * 60)\n    \n    if (minutes === 0) {\n      return `${wholeHours} hour${wholeHours > 1 ? 's' : ''}`\n    }\n    return `${wholeHours} hour${wholeHours > 1 ? 's' : ''} and ${minutes} minutes`\n  }\n  \n  const updateOption = <K extends keyof AccessibilityOptions>(\n    key: K, \n    value: AccessibilityOptions[K]\n  ) => {\n    setOptions(prev => ({ ...prev, [key]: value }))\n  }\n  \n  if (!isActive) return null\n  \n  return (\n    <div className=\"accessibility-features\">\n      {/* Voice Navigation Controls */}\n      {options.voiceNavigation && (\n        <div className=\"fixed bottom-20 left-4 right-4 z-50\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg border p-4\">\n            <div className=\"flex items-center justify-between mb-3\">\n              <h3 className=\"text-sm font-medium\">Voice Navigation</h3>\n              <div className=\"text-xs text-gray-500\">\n                {voiceState.currentIndex + 1} of {itinerary?.destinationVisits?.length || 0}\n              </div>\n            </div>\n            \n            <div className=\"flex items-center gap-2\">\n              <Button\n                size=\"sm\"\n                variant=\"ghost\"\n                onClick={navigateToPrevious}\n                disabled={voiceState.currentIndex === 0}\n                aria-label=\"Previous destination\"\n              >\n                <SkipBack className=\"w-4 h-4\" />\n              </Button>\n              \n              <Button\n                size=\"sm\"\n                onClick={toggleVoiceNavigation}\n                aria-label={voiceState.isPlaying ? 'Pause voice navigation' : 'Start voice navigation'}\n              >\n                {voiceState.isPlaying ? (\n                  <Pause className=\"w-4 h-4\" />\n                ) : (\n                  <Play className=\"w-4 h-4\" />\n                )}\n              </Button>\n              \n              <Button\n                size=\"sm\"\n                variant=\"ghost\"\n                onClick={navigateToNext}\n                disabled={voiceState.currentIndex === (itinerary?.destinationVisits?.length || 1) - 1}\n                aria-label=\"Next destination\"\n              >\n                <SkipForward className=\"w-4 h-4\" />\n              </Button>\n              \n              <div className=\"flex-1\" />\n              \n              <Button\n                size=\"sm\"\n                variant=\"ghost\"\n                onClick={() => setVoiceState(prev => ({ ...prev, autoPlay: !prev.autoPlay }))}\n                aria-label={voiceState.autoPlay ? 'Disable auto-play' : 'Enable auto-play'}\n                className={voiceState.autoPlay ? 'bg-blue-100 dark:bg-blue-900' : ''}\n              >\n                Auto\n              </Button>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Accessibility Settings */}\n      <div className=\"fixed top-4 left-4 z-40\">\n        <Sheet open={isSettingsOpen} onOpenChange={setIsSettingsOpen}>\n          <SheetTrigger asChild>\n            <Button\n              size=\"icon\"\n              variant=\"secondary\"\n              className=\"shadow-md\"\n              aria-label=\"Accessibility settings\"\n            >\n              <Eye className=\"w-4 h-4\" />\n            </Button>\n          </SheetTrigger>\n          <SheetContent side=\"left\" className=\"w-80\">\n            <SheetHeader>\n              <SheetTitle>Accessibility Settings</SheetTitle>\n              <SheetDescription>\n                Customize the map experience for your needs\n              </SheetDescription>\n            </SheetHeader>\n            \n            <div className=\"mt-6 space-y-6\">\n              {/* Voice Navigation */}\n              <div>\n                <h3 className=\"font-medium mb-3 flex items-center gap-2\">\n                  <Volume2 className=\"w-4 h-4\" />\n                  Voice Navigation\n                </h3>\n                <div className=\"space-y-3\">\n                  <label className=\"flex items-center gap-3\">\n                    <input\n                      type=\"checkbox\"\n                      checked={options.voiceNavigation}\n                      onChange={(e) => updateOption('voiceNavigation', e.target.checked)}\n                      className=\"rounded\"\n                    />\n                    <span className=\"text-sm\">Enable voice announcements</span>\n                  </label>\n                  <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                    Provides audio descriptions of destinations and routes\n                  </p>\n                </div>\n              </div>\n              \n              {/* Visual Enhancements */}\n              <div>\n                <h3 className=\"font-medium mb-3 flex items-center gap-2\">\n                  <Contrast className=\"w-4 h-4\" />\n                  Visual\n                </h3>\n                <div className=\"space-y-3\">\n                  <label className=\"flex items-center gap-3\">\n                    <input\n                      type=\"checkbox\"\n                      checked={options.highContrast}\n                      onChange={(e) => updateOption('highContrast', e.target.checked)}\n                      className=\"rounded\"\n                    />\n                    <span className=\"text-sm\">High contrast mode</span>\n                  </label>\n                  \n                  <label className=\"flex items-center gap-3\">\n                    <input\n                      type=\"checkbox\"\n                      checked={options.largeText}\n                      onChange={(e) => updateOption('largeText', e.target.checked)}\n                      className=\"rounded\"\n                    />\n                    <span className=\"text-sm\">Large text</span>\n                  </label>\n                  \n                  <label className=\"flex items-center gap-3\">\n                    <input\n                      type=\"checkbox\"\n                      checked={options.reducedMotion}\n                      onChange={(e) => updateOption('reducedMotion', e.target.checked)}\n                      className=\"rounded\"\n                    />\n                    <span className=\"text-sm\">Reduce animations</span>\n                  </label>\n                </div>\n              </div>\n              \n              {/* Keyboard Navigation */}\n              <div>\n                <h3 className=\"font-medium mb-3 flex items-center gap-2\">\n                  <Keyboard className=\"w-4 h-4\" />\n                  Keyboard\n                </h3>\n                <div className=\"space-y-3\">\n                  <label className=\"flex items-center gap-3\">\n                    <input\n                      type=\"checkbox\"\n                      checked={options.keyboardNavigation}\n                      onChange={(e) => updateOption('keyboardNavigation', e.target.checked)}\n                      className=\"rounded\"\n                    />\n                    <span className=\"text-sm\">Keyboard navigation</span>\n                  </label>\n                  \n                  <div className=\"bg-gray-50 dark:bg-gray-800 rounded p-3\">\n                    <h4 className=\"text-xs font-medium mb-2\">Keyboard Shortcuts</h4>\n                    <div className=\"text-xs space-y-1 text-gray-600 dark:text-gray-400\">\n                      <div>→ / ↓ : Next destination</div>\n                      <div>← / ↑ : Previous destination</div>\n                      <div>Enter / Space : Toggle voice</div>\n                      <div>Escape : Stop voice</div>\n                      <div>Alt + H : Help</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              {/* Test Voice */}\n              {options.voiceNavigation && (\n                <div>\n                  <Button\n                    onClick={() => speak('Voice navigation is working correctly.')}\n                    variant=\"outline\"\n                    className=\"w-full\"\n                  >\n                    Test Voice\n                  </Button>\n                </div>\n              )}\n            </div>\n          </SheetContent>\n        </Sheet>\n      </div>\n      \n      {/* Screen Reader Announcements */}\n      <div \n        className=\"sr-only\" \n        aria-live=\"polite\" \n        aria-atomic=\"true\"\n        id=\"accessibility-announcements\"\n      />\n      \n      {/* Invisible skip links for screen readers */}\n      <div className=\"sr-only\">\n        <a href=\"#map-content\" className=\"skip-link\">\n          Skip to map content\n        </a>\n        <a href=\"#map-controls\" className=\"skip-link\">\n          Skip to map controls\n        </a>\n        <a href=\"#map-legend\" className=\"skip-link\">\n          Skip to map legend\n        </a>\n      </div>\n    </div>\n  )\n}\n\n// Screen reader utilities\nexport function announceToScreenReader(message: string) {\n  const announcement = document.getElementById('accessibility-announcements')\n  if (announcement) {\n    announcement.textContent = message\n    setTimeout(() => {\n      announcement.textContent = ''\n    }, 1000)\n  }\n}\n\n// Focus management\nexport function manageFocus(elementId: string) {\n  const element = document.getElementById(elementId)\n  if (element) {\n    element.focus()\n    element.scrollIntoView({ behavior: 'smooth', block: 'center' })\n  }\n}\n\n// High contrast styles\nexport const highContrastStyles = `\n  .high-contrast {\n    --background: #000000;\n    --foreground: #ffffff;\n    --primary: #ffffff;\n    --primary-foreground: #000000;\n    --border: #ffffff;\n  }\n  \n  .high-contrast .custom-map-marker {\n    border-width: 3px !important;\n    box-shadow: 0 0 0 2px #ffffff !important;\n  }\n  \n  .high-contrast .map-route {\n    stroke-width: 6px !important;\n    stroke: #ffffff !important;\n  }\n`\n\n// Large text styles\nexport const largeTextStyles = `\n  .large-text {\n    font-size: 1.125rem;\n  }\n  \n  .large-text .custom-map-marker {\n    font-size: 1rem !important;\n  }\n  \n  .large-text button {\n    min-height: 48px;\n    font-size: 1rem;\n  }\n`\n\n// Reduced motion styles\nexport const reducedMotionStyles = `\n  .reduced-motion * {\n    animation-duration: 0.01ms !important;\n    animation-iteration-count: 1 !important;\n    transition-duration: 0.01ms !important;\n  }\n`","/Users/kominetenma/Desktop/project/components/places/map-visualization/color-strategy.ts",[],[],"/Users/kominetenma/Desktop/project/components/places/map-visualization/custom-markers.tsx",["954"],[],"// Custom marker implementation using Google Maps Advanced Markers\n\nimport { useEffect, useRef } from 'react'\nimport type { MarkerConfig, MarkerAnimation, WishfulUserDisplay } from '@/lib/types/map-visualization'\nimport { determineColorTier, calculateMarkerSize, generateMarkerStyle, getContrastingTextColor } from './color-strategy'\n\ninterface CustomMarkerProps {\n  map: google.maps.Map | null\n  config: MarkerConfig\n  onClick?: (destinationId: string) => void\n  onLongPress?: (destinationId: string) => void\n  animation?: MarkerAnimation\n  isSelected?: boolean\n  isDarkMode?: boolean\n}\n\nexport function CustomMarker({\n  map,\n  config,\n  onClick,\n  onLongPress,\n  animation,\n  isSelected,\n  isDarkMode = false\n}: CustomMarkerProps) {\n  const markerRef = useRef<google.maps.marker.AdvancedMarkerElement | null>(null)\n  const longPressTimerRef = useRef<NodeJS.Timeout | null>(null)\n  \n  useEffect(() => {\n    if (!map || !window.google?.maps?.marker?.AdvancedMarkerElement) return\n    \n    // Create marker content\n    const content = createMarkerContent(config, isSelected, isDarkMode)\n    \n    // Create advanced marker\n    const marker = new google.maps.marker.AdvancedMarkerElement({\n      map,\n      position: config.position,\n      content,\n      title: `Destination ${config.orderNumber}`,\n      collisionBehavior: google.maps.CollisionBehavior.OPTIONAL_AND_HIDES_LOWER_PRIORITY\n    })\n    \n    markerRef.current = marker\n    \n    // Add click listener\n    if (onClick) {\n      marker.addListener('click', () => onClick(config.destinationId))\n    }\n    \n    // Add touch event listeners for long press\n    if (onLongPress && content instanceof HTMLElement) {\n      // Touch events for mobile\n      content.addEventListener('touchstart', handleTouchStart)\n      content.addEventListener('touchend', handleTouchEnd)\n      content.addEventListener('touchcancel', handleTouchEnd)\n      \n      // Mouse events for desktop\n      content.addEventListener('mousedown', handleMouseDown)\n      content.addEventListener('mouseup', handleMouseUp)\n      content.addEventListener('mouseleave', handleMouseUp)\n    }\n    \n    // Apply animation if specified\n    if (animation) {\n      applyMarkerAnimation(content, animation)\n    }\n    \n    // Cleanup\n    return () => {\n      if (markerRef.current) {\n        markerRef.current.map = null\n        markerRef.current = null\n      }\n      clearLongPressTimer()\n    }\n  }, [map, config, onClick, onLongPress, animation, isSelected, isDarkMode])\n  \n  // Update marker appearance when selected state changes\n  useEffect(() => {\n    if (markerRef.current && markerRef.current.content) {\n      updateMarkerSelection(markerRef.current.content as HTMLElement, isSelected)\n    }\n  }, [isSelected])\n  \n  const handleTouchStart = (e: TouchEvent) => {\n    e.preventDefault()\n    startLongPressTimer()\n  }\n  \n  const handleTouchEnd = (e: TouchEvent) => {\n    e.preventDefault()\n    clearLongPressTimer()\n  }\n  \n  const handleMouseDown = () => {\n    startLongPressTimer()\n  }\n  \n  const handleMouseUp = () => {\n    clearLongPressTimer()\n  }\n  \n  const startLongPressTimer = () => {\n    clearLongPressTimer()\n    longPressTimerRef.current = setTimeout(() => {\n      if (onLongPress) {\n        onLongPress(config.destinationId)\n      }\n    }, 500) // 500ms for long press\n  }\n  \n  const clearLongPressTimer = () => {\n    if (longPressTimerRef.current) {\n      clearTimeout(longPressTimerRef.current)\n      longPressTimerRef.current = null\n    }\n  }\n  \n  return null\n}\n\n/**\n * Create marker HTML content\n */\nfunction createMarkerContent(\n  config: MarkerConfig,\n  isSelected?: boolean,\n  isDarkMode?: boolean\n): HTMLElement {\n  const container = document.createElement('div')\n  container.className = 'custom-map-marker'\n  \n  // Determine color and size\n  const colorTier = determineColorTier(config.wishfulUsers)\n  const size = calculateMarkerSize(config.wishfulUsers)\n  const style = generateMarkerStyle(colorTier, size)\n  \n  // Apply styles\n  Object.assign(container.style, {\n    ...style,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: '50%',\n    cursor: 'pointer',\n    position: 'relative',\n    transition: 'transform 0.2s ease, box-shadow 0.2s ease',\n    userSelect: 'none',\n    WebkitUserSelect: 'none',\n    touchAction: 'none'\n  })\n  \n  // Add number label\n  const label = document.createElement('div')\n  label.textContent = config.orderNumber.toString()\n  label.style.cssText = `\n    color: ${getContrastingTextColor(colorTier.color)};\n    font-size: ${Math.max(14, size * 0.4)}px;\n    font-weight: 600;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    line-height: 1;\n    pointer-events: none;\n  `\n  container.appendChild(label)\n  \n  // Add special indicators\n  if (config.isStart) {\n    addStartIndicator(container, size)\n  }\n  \n  if (config.isEnd) {\n    addEndIndicator(container, size)\n  }\n  \n  // Add selection state\n  if (isSelected) {\n    updateMarkerSelection(container, true)\n  }\n  \n  // Add accessibility attributes\n  container.setAttribute('role', 'button')\n  container.setAttribute('aria-label', `Destination ${config.orderNumber}, ${config.wishfulUsers.length} interested members`)\n  container.setAttribute('tabindex', '0')\n  \n  return container\n}\n\n/**\n * Add start point indicator\n */\nfunction addStartIndicator(container: HTMLElement, size: number) {\n  const indicator = document.createElement('div')\n  indicator.style.cssText = `\n    position: absolute;\n    top: -8px;\n    right: -8px;\n    width: 16px;\n    height: 16px;\n    background: #059669;\n    border: 2px solid white;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 10px;\n    color: white;\n    font-weight: bold;\n    box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n  `\n  indicator.textContent = 'S'\n  container.appendChild(indicator)\n}\n\n/**\n * Add end point indicator\n */\nfunction addEndIndicator(container: HTMLElement, size: number) {\n  const indicator = document.createElement('div')\n  indicator.style.cssText = `\n    position: absolute;\n    bottom: -8px;\n    right: -8px;\n    width: 16px;\n    height: 16px;\n    background: #DC2626;\n    border: 2px solid white;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 10px;\n    color: white;\n    font-weight: bold;\n    box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n  `\n  indicator.textContent = 'E'\n  container.appendChild(indicator)\n}\n\n/**\n * Update marker selection state\n */\nfunction updateMarkerSelection(container: HTMLElement, isSelected?: boolean) {\n  if (isSelected) {\n    container.style.transform = 'scale(1.2)'\n    container.style.zIndex = '1000'\n    // Add pulsing animation\n    container.animate([\n      { transform: 'scale(1.2)' },\n      { transform: 'scale(1.3)' },\n      { transform: 'scale(1.2)' }\n    ], {\n      duration: 1000,\n      iterations: Infinity\n    })\n  } else {\n    container.style.transform = 'scale(1)'\n    container.style.zIndex = 'auto'\n    // Remove animations\n    container.getAnimations().forEach(animation => animation.cancel())\n  }\n}\n\n/**\n * Apply marker animation\n */\nfunction applyMarkerAnimation(content: HTMLElement, animation: MarkerAnimation) {\n  switch (animation.type) {\n    case 'drop':\n      content.animate([\n        { transform: 'translateY(-100px)', opacity: '0' },\n        { transform: 'translateY(0)', opacity: '1' }\n      ], {\n        duration: animation.duration,\n        delay: animation.delay || 0,\n        easing: 'ease-out',\n        fill: 'both'\n      })\n      break\n      \n    case 'bounce':\n      content.animate([\n        { transform: 'translateY(0)' },\n        { transform: 'translateY(-20px)' },\n        { transform: 'translateY(0)' },\n        { transform: 'translateY(-10px)' },\n        { transform: 'translateY(0)' }\n      ], {\n        duration: animation.duration,\n        delay: animation.delay || 0,\n        easing: 'ease-out'\n      })\n      break\n      \n    case 'pulse':\n      content.animate([\n        { transform: 'scale(1)', opacity: '1' },\n        { transform: 'scale(1.2)', opacity: '0.8' },\n        { transform: 'scale(1)', opacity: '1' }\n      ], {\n        duration: animation.duration,\n        delay: animation.delay || 0,\n        iterations: Infinity\n      })\n      break\n  }\n}\n\n/**\n * Create marker info window content\n */\nexport function createInfoWindowContent(\n  config: MarkerConfig,\n  visitTime: string,\n  nextTransport?: { mode: string; duration: string; destination: string }\n): HTMLElement {\n  const container = document.createElement('div')\n  container.className = 'marker-info-window'\n  container.style.cssText = `\n    padding: 12px;\n    min-width: 200px;\n    max-width: 300px;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n  `\n  \n  // Title\n  const title = document.createElement('h3')\n  title.style.cssText = `\n    margin: 0 0 8px 0;\n    font-size: 16px;\n    font-weight: 600;\n    color: #1F2937;\n  `\n  title.textContent = `Stop ${config.orderNumber}`\n  container.appendChild(title)\n  \n  // Visit time\n  const timeDiv = document.createElement('div')\n  timeDiv.style.cssText = `\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    margin-bottom: 12px;\n    color: #6B7280;\n    font-size: 14px;\n  `\n  timeDiv.innerHTML = `⏱️ ${visitTime}`\n  container.appendChild(timeDiv)\n  \n  // Wishful users\n  if (config.wishfulUsers.length > 0) {\n    const usersTitle = document.createElement('div')\n    usersTitle.style.cssText = `\n      font-size: 14px;\n      font-weight: 500;\n      color: #374151;\n      margin-bottom: 4px;\n    `\n    usersTitle.textContent = 'Interested members:'\n    container.appendChild(usersTitle)\n    \n    const usersList = document.createElement('div')\n    usersList.style.cssText = `\n      display: flex;\n      flex-direction: column;\n      gap: 4px;\n      margin-bottom: 12px;\n    `\n    \n    config.wishfulUsers.forEach(user => {\n      const userItem = document.createElement('div')\n      userItem.style.cssText = `\n        display: flex;\n        align-items: center;\n        gap: 8px;\n        font-size: 13px;\n      `\n      \n      const colorDot = document.createElement('span')\n      colorDot.style.cssText = `\n        width: 12px;\n        height: 12px;\n        border-radius: 50%;\n        background-color: ${user.color};\n        flex-shrink: 0;\n      `\n      \n      const userName = document.createElement('span')\n      userName.textContent = user.displayName\n      userName.style.color = '#4B5563'\n      \n      const rating = document.createElement('span')\n      rating.textContent = '⭐'.repeat(user.rating)\n      rating.style.fontSize = '11px'\n      \n      userItem.appendChild(colorDot)\n      userItem.appendChild(userName)\n      userItem.appendChild(rating)\n      usersList.appendChild(userItem)\n    })\n    \n    container.appendChild(usersList)\n  }\n  \n  // Next transport\n  if (nextTransport) {\n    const transportDiv = document.createElement('div')\n    transportDiv.style.cssText = `\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      padding-top: 8px;\n      border-top: 1px solid #E5E7EB;\n      font-size: 13px;\n      color: #6B7280;\n    `\n    \n    const modeIcons: Record<string, string> = {\n      walking: '🚶',\n      driving: '🚗',\n      flying: '✈️'\n    }\n    \n    transportDiv.innerHTML = `\n      ${modeIcons[nextTransport.mode] || '🚗'} \n      ${nextTransport.duration} to ${nextTransport.destination}\n    `\n    container.appendChild(transportDiv)\n  }\n  \n  return container\n}\n\n/**\n * Batch create markers for performance\n */\nexport function createMarkerBatch(\n  map: google.maps.Map,\n  configs: MarkerConfig[],\n  onClick?: (destinationId: string) => void\n): google.maps.marker.AdvancedMarkerElement[] {\n  return configs.map((config, index) => {\n    const content = createMarkerContent(config)\n    \n    // Add staggered animation\n    content.style.opacity = '0'\n    setTimeout(() => {\n      content.style.transition = 'opacity 0.3s ease'\n      content.style.opacity = '1'\n    }, index * 50) // 50ms delay between markers\n    \n    const marker = new google.maps.marker.AdvancedMarkerElement({\n      map,\n      position: config.position,\n      content,\n      title: `Destination ${config.orderNumber}`\n    })\n    \n    if (onClick) {\n      marker.addListener('click', () => onClick(config.destinationId))\n    }\n    \n    return marker\n  })\n}","/Users/kominetenma/Desktop/project/components/places/map-visualization/interactive-map.tsx",["955","956","957"],[],"// Main interactive map component with mobile-first design\n\n'use client'\n\nimport { useEffect, useRef, useState, useCallback } from 'react'\nimport { useGoogleMaps } from '@/hooks/use-google-maps'\nimport { CustomMarker, createInfoWindowContent } from './custom-markers'\nimport { RouteVisualization } from './route-visualization'\nimport { MapControls } from './map-controls'\nimport { AccessibilityFeatures, announceToScreenReader } from './accessibility-features'\nimport { determineColorTier } from './color-strategy'\nimport { \n  MobilePerformanceManager, \n  MapMemoryManager,\n  ViewportMarkerManager,\n  TouchOptimizer\n} from './performance-utils'\nimport type { \n  MapVisualizationProps, \n  MapState, \n  MapInstance, \n  MarkerConfig, \n  RouteSegmentConfig,\n  MapDisplayMode,\n  WishfulUserDisplay\n} from '@/lib/types/map-visualization'\nimport type { DetailedItinerary, DestinationVisit } from '@/lib/optimization/detailed-route-types'\n\nconst DEFAULT_MAP_OPTIONS: google.maps.MapOptions = {\n  zoom: 10,\n  center: { lat: 35.6762, lng: 139.6503 }, // Tokyo default\n  mapTypeId: google.maps.MapTypeId.ROADMAP,\n  gestureHandling: 'greedy', // Mobile-friendly\n  zoomControl: false,\n  mapTypeControl: false,\n  streetViewControl: false,\n  fullscreenControl: false,\n  styles: [\n    {\n      featureType: 'poi.business',\n      stylers: [{ visibility: 'off' }]\n    },\n    {\n      featureType: 'transit',\n      elementType: 'labels.icon',\n      stylers: [{ visibility: 'off' }]\n    }\n  ]\n}\n\n// Get adaptive map options based on device performance\nfunction getAdaptiveMapOptions(): google.maps.MapOptions {\n  const perfManager = MobilePerformanceManager.getInstance()\n  const adaptiveOptions = perfManager.getAdaptiveMapOptions()\n  \n  return {\n    ...DEFAULT_MAP_OPTIONS,\n    ...adaptiveOptions\n  }\n}\n\nexport function InteractiveMap({\n  itinerary,\n  multiDayItinerary,\n  config,\n  onMarkerClick,\n  onRouteClick,\n  onMapStateChange,\n  className = '',\n  height = '400px'\n}: MapVisualizationProps) {\n  const mapRef = useRef<HTMLDivElement>(null)\n  const mapInstanceRef = useRef<MapInstance | null>(null)\n  const [mapState, setMapState] = useState<MapState>({\n    center: { lat: 35.6762, lng: 139.6503 }, // Tokyo default\n    zoom: DEFAULT_MAP_OPTIONS.zoom!,\n    displayMode: 'full-trip',\n    currentDay: 1\n  })\n  const [selectedDestination, setSelectedDestination] = useState<string | null>(null)\n  const [isLoading, setIsLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n  const [isDarkMode, setIsDarkMode] = useState(false)\n  const [accessibilityActive, setAccessibilityActive] = useState(false)\n  \n  // Performance and memory management\n  const memoryManagerRef = useRef<MapMemoryManager>()\n  const viewportManagerRef = useRef<ViewportMarkerManager>()\n  const perfManagerRef = useRef<MobilePerformanceManager>()\n  \n  const { isLoaded, loadError } = useGoogleMaps()\n  \n  // Initialize performance managers\n  useEffect(() => {\n    perfManagerRef.current = MobilePerformanceManager.getInstance()\n    memoryManagerRef.current = MapMemoryManager.getInstance()\n  }, [])\n  \n  // Detect dark mode\n  useEffect(() => {\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)')\n    setIsDarkMode(mediaQuery.matches)\n    \n    const handleChange = (e: MediaQueryListEvent) => setIsDarkMode(e.matches)\n    mediaQuery.addEventListener('change', handleChange)\n    \n    return () => mediaQuery.removeEventListener('change', handleChange)\n  }, [])\n  \n  // Calculate total days\n  const totalDays = multiDayItinerary?.daySchedules.length || 1\n  \n  // Initialize map\n  useEffect(() => {\n    if (!isLoaded || !mapRef.current || !itinerary) return\n    \n    try {\n      // Use adaptive map options for performance\n      const adaptiveOptions = getAdaptiveMapOptions()\n      const map = new google.maps.Map(mapRef.current, {\n        ...adaptiveOptions,\n        ...config?.mapOptions\n      })\n      \n      mapInstanceRef.current = {\n        map,\n        markers: new Map(),\n        routes: new Map(),\n        infoWindows: new Map(),\n        controls: new Map(),\n        state: mapState\n      }\n      \n      // Initialize viewport manager for performance\n      if (viewportManagerRef.current) {\n        viewportManagerRef.current = new ViewportMarkerManager(\n          map, \n          perfManagerRef.current?.getMaxMarkers()\n        )\n      }\n      \n      // Setup memory management\n      if (memoryManagerRef.current && mapRef.current) {\n        memoryManagerRef.current.observeMapContainer(\n          mapRef.current,\n          () => {\n            // Map is visible - resume updates\n            map.setOptions({ restriction: null })\n          },\n          () => {\n            // Map is hidden - pause updates for performance\n            if (perfManagerRef.current?.getPerformanceTier() === 'low') {\n              clearMapElements()\n            }\n          }\n        )\n      }\n      \n      // Add touch optimization\n      mapRef.current.addEventListener('touchstart', TouchOptimizer.recordTouch, { passive: true })\n      mapRef.current.addEventListener('touchmove', TouchOptimizer.recordTouch, { passive: true })\n      mapRef.current.addEventListener('touchend', TouchOptimizer.recordTouch, { passive: true })\n      \n      // Calculate optimal bounds\n      const bounds = calculateMapBounds(itinerary)\n      if (bounds) {\n        map.fitBounds(bounds)\n        setMapState(prev => ({ ...prev, bounds }))\n      }\n      \n      // Announce map load for accessibility\n      announceToScreenReader(`Interactive map loaded with ${itinerary.destinationVisits.length} destinations`)\n      \n      setIsLoading(false)\n    } catch (err) {\n      console.error('Map initialization error:', err)\n      setError('Failed to initialize map')\n      setIsLoading(false)\n    }\n  }, [isLoaded, itinerary, config?.mapOptions])\n  \n  // Update map display based on mode and current day\n  useEffect(() => {\n    if (!mapInstanceRef.current || !itinerary) return\n    \n    const { map } = mapInstanceRef.current\n    \n    // Clear existing markers and routes\n    clearMapElements()\n    \n    // Get destinations for current display mode\n    const displayData = getDisplayData(\n      itinerary,\n      multiDayItinerary,\n      mapState.displayMode,\n      mapState.currentDay || 1\n    )\n    \n    if (displayData) {\n      // Add markers\n      displayData.destinations.forEach((dest: any, index: number) => {\n        const markerConfig = createMarkerConfig(dest, index + 1)\n        addMarkerToMap(markerConfig)\n      })\n      \n      // Add routes\n      displayData.routes.forEach(route => {\n        addRouteToMap(route)\n      })\n      \n      // Fit bounds to displayed content\n      if (displayData.bounds) {\n        map.fitBounds(displayData.bounds)\n      }\n    }\n  }, [mapState.displayMode, mapState.currentDay, itinerary, multiDayItinerary])\n  \n  // Handle marker click\n  const handleMarkerClick = useCallback((destinationId: string) => {\n    setSelectedDestination(destinationId)\n    \n    // Show info window\n    const destination = itinerary?.destinationVisits.find(d => d.destinationId === destinationId)\n    if (destination && mapInstanceRef.current) {\n      showDestinationInfo(destination)\n      \n      // Announce for accessibility\n      const visitOrder = destination.visitOrder\n      announceToScreenReader(`Selected destination ${visitOrder}: ${destination.location.name}`)\n    }\n    \n    onMarkerClick?.(destinationId)\n  }, [itinerary, onMarkerClick])\n  \n  // Handle accessibility destination focus\n  const handleDestinationFocus = useCallback((destinationId: string) => {\n    const destination = itinerary?.destinationVisits.find(d => d.destinationId === destinationId)\n    if (destination && mapInstanceRef.current) {\n      const { map } = mapInstanceRef.current\n      \n      // Center map on destination\n      map.setCenter({\n        lat: destination.location.latitude,\n        lng: destination.location.longitude\n      })\n      map.setZoom(15)\n      \n      // Highlight marker\n      setSelectedDestination(destinationId)\n      showDestinationInfo(destination)\n    }\n  }, [itinerary])\n  \n  // Handle map state changes\n  const handleMapStateChange = useCallback((updates: Partial<MapState>) => {\n    setMapState(prev => {\n      const newState = { ...prev, ...updates }\n      mapInstanceRef.current!.state = newState\n      onMapStateChange?.(newState)\n      return newState\n    })\n  }, [onMapStateChange])\n  \n  // Handle display mode change\n  const handleDisplayModeChange = useCallback((mode: MapDisplayMode) => {\n    handleMapStateChange({ displayMode: mode })\n  }, [handleMapStateChange])\n  \n  // Handle day change\n  const handleDayChange = useCallback((day: number) => {\n    if (day >= 1 && day <= totalDays) {\n      handleMapStateChange({ currentDay: day })\n    }\n  }, [totalDays, handleMapStateChange])\n  \n  // Clear map elements\n  const clearMapElements = () => {\n    if (!mapInstanceRef.current) return\n    \n    const { markers, routes, infoWindows } = mapInstanceRef.current\n    \n    markers.forEach(marker => {\n      marker.map = null\n    })\n    markers.clear()\n    \n    routes.forEach(route => {\n      route.setMap(null)\n    })\n    routes.clear()\n    \n    infoWindows.forEach(window => {\n      window.close()\n    })\n    infoWindows.clear()\n  }\n  \n  // Add marker to map\n  const addMarkerToMap = (config: MarkerConfig) => {\n    if (!mapInstanceRef.current) return\n    \n    const { map, markers } = mapInstanceRef.current\n    \n    // Remove existing marker if it exists\n    const existingMarker = markers.get(config.destinationId)\n    if (existingMarker) {\n      existingMarker.map = null\n    }\n    \n    // Create new marker\n    const marker = new google.maps.marker.AdvancedMarkerElement({\n      map,\n      position: config.position,\n      content: createMarkerContent(config),\n      title: `Destination ${config.orderNumber}`\n    })\n    \n    // Add click listener\n    marker.addListener('click', () => handleMarkerClick(config.destinationId))\n    \n    markers.set(config.destinationId, marker)\n  }\n  \n  // Add route to map\n  const addRouteToMap = (route: RouteSegmentConfig) => {\n    if (!mapInstanceRef.current) return\n    \n    const { map, routes } = mapInstanceRef.current\n    \n    const polyline = new google.maps.Polyline({\n      path: route.path,\n      ...route.style,\n      map\n    })\n    \n    if (onRouteClick) {\n      polyline.addListener('click', () => onRouteClick(route.id))\n    }\n    \n    routes.set(route.id, polyline)\n  }\n  \n  // Show destination info window\n  const showDestinationInfo = (destination: DestinationVisit) => {\n    if (!mapInstanceRef.current) return\n    \n    const { map, infoWindows } = mapInstanceRef.current\n    \n    // Close existing info windows\n    infoWindows.forEach(window => window.close())\n    infoWindows.clear()\n    \n    // Create info window content\n    const content = createInfoWindowContent(\n      createMarkerConfig(destination, destination.visitOrder),\n      `${destination.allocatedHours}h visit`\n    )\n    \n    const infoWindow = new google.maps.InfoWindow({\n      content,\n      position: {\n        lat: destination.location.latitude,\n        lng: destination.location.longitude\n      },\n      maxWidth: 300\n    })\n    \n    infoWindow.open(map)\n    infoWindows.set(destination.destinationId, infoWindow)\n  }\n  \n  // Error and loading states\n  if (loadError) {\n    return (\n      <div className={`map-error ${className}`} style={{ height }}>\n        <div className=\"flex items-center justify-center h-full bg-gray-100 dark:bg-gray-800 rounded-lg\">\n          <div className=\"text-center\">\n            <div className=\"text-gray-500 mb-2\">Failed to load map</div>\n            <button \n              onClick={() => window.location.reload()}\n              className=\"text-blue-500 hover:text-blue-600\"\n            >\n              Try again\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n  \n  if (isLoading || !isLoaded) {\n    return (\n      <div className={`map-loading ${className}`} style={{ height }}>\n        <div className=\"flex items-center justify-center h-full bg-gray-100 dark:bg-gray-800 rounded-lg\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500\"></div>\n        </div>\n      </div>\n    )\n  }\n  \n  if (error) {\n    return (\n      <div className={`map-error ${className}`} style={{ height }}>\n        <div className=\"flex items-center justify-center h-full bg-gray-100 dark:bg-gray-800 rounded-lg\">\n          <div className=\"text-center\">\n            <div className=\"text-red-500 mb-2\">{error}</div>\n            <button \n              onClick={() => setError(null)}\n              className=\"text-blue-500 hover:text-blue-600\"\n            >\n              Retry\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n  \n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (memoryManagerRef.current) {\n        memoryManagerRef.current.cleanupAll()\n      }\n      TouchOptimizer.clearHistory()\n    }\n  }, [])\n\n  return (\n    <div className={`relative ${className}`} style={{ height }}>\n      {/* Map container */}\n      <div \n        ref={mapRef} \n        className=\"w-full h-full rounded-lg overflow-hidden\"\n        role=\"application\"\n        aria-label={`Interactive trip map with ${itinerary?.destinationVisits?.length || 0} destinations`}\n        tabIndex={0}\n        onFocus={() => setAccessibilityActive(true)}\n        onBlur={() => setAccessibilityActive(false)}\n        id=\"map-content\"\n      />\n      \n      {/* Map controls */}\n      {mapInstanceRef.current && (\n        <MapControls\n          map={mapInstanceRef.current.map}\n          mapState={mapState}\n          onMapStateChange={handleMapStateChange}\n          onDisplayModeChange={handleDisplayModeChange}\n          totalDays={totalDays}\n          currentDay={mapState.currentDay}\n          onDayChange={handleDayChange}\n          isDarkMode={isDarkMode}\n        />\n      )}\n      \n      {/* Accessibility features */}\n      <AccessibilityFeatures\n        itinerary={itinerary}\n        onDestinationFocus={handleDestinationFocus}\n        onRouteAnnounce={(segment) => {\n          // Handle route announcement\n          announceToScreenReader(`Next: ${segment.transportMode} for ${segment.duration} to ${segment.toName}`)\n        }}\n        isActive={accessibilityActive}\n      />\n      \n      {/* Performance indicator (development only) */}\n      {process.env.NODE_ENV === 'development' && (\n        <PerformanceIndicator />\n      )}\n    </div>\n  )\n}\n\n// Helper functions\n\nfunction calculateMapBounds(itinerary: DetailedItinerary): google.maps.LatLngBounds | null {\n  if (!itinerary.destinationVisits.length) return null\n  \n  const bounds = new google.maps.LatLngBounds()\n  \n  itinerary.destinationVisits.forEach(dest => {\n    bounds.extend({\n      lat: dest.location.latitude,\n      lng: dest.location.longitude\n    })\n  })\n  \n  return bounds\n}\n\nfunction getDisplayData(\n  itinerary: DetailedItinerary,\n  multiDayItinerary: any,\n  mode: MapDisplayMode,\n  currentDay: number\n) {\n  if (mode === 'full-trip') {\n    return {\n      destinations: itinerary.destinationVisits,\n      routes: createRouteSegments(itinerary),\n      bounds: calculateMapBounds(itinerary)\n    }\n  }\n  \n  if (mode === 'daily' && multiDayItinerary) {\n    const daySchedule = multiDayItinerary.dailySchedules[currentDay - 1]\n    if (!daySchedule) return null\n    \n    const dayDestinations = daySchedule.activities\n      .filter((a: any) => a.type === 'destination')\n      .map((a: any) => a.visitDetails)\n      .filter(Boolean)\n    \n    return {\n      destinations: dayDestinations,\n      routes: createDayRouteSegments(daySchedule),\n      bounds: calculateDayBounds(dayDestinations)\n    }\n  }\n  \n  return null\n}\n\nfunction createMarkerConfig(destination: DestinationVisit, orderNumber: number): MarkerConfig {\n  const wishfulUsers: WishfulUserDisplay[] = destination.wishfulUsers.map(wu => ({\n    userId: wu.member.user_id || wu.member.session_id || '',\n    displayName: wu.member.display_name,\n    color: wu.assignedColor,\n    rating: wu.originalRating\n  }))\n  \n  return {\n    destinationId: destination.destinationId,\n    position: {\n      lat: destination.location.latitude,\n      lng: destination.location.longitude\n    },\n    color: determineColorTier(wishfulUsers).color,\n    size: 32,\n    orderNumber,\n    wishfulUsers\n  }\n}\n\nfunction createRouteSegments(itinerary: DetailedItinerary): RouteSegmentConfig[] {\n  return itinerary.transportSegments.map((segment, index) => ({\n    id: segment.segmentId,\n    path: [\n      { lat: segment.fromLocation.latitude, lng: segment.fromLocation.longitude },\n      { lat: segment.toLocation.latitude, lng: segment.toLocation.longitude }\n    ],\n    transportMode: segment.transportMode as any,\n    style: getRouteStyle(segment.transportMode as any),\n    distance: segment.distanceKm,\n    duration: segment.estimatedTimeHours,\n    fromName: segment.fromName,\n    toName: segment.toName\n  }))\n}\n\nfunction createDayRouteSegments(daySchedule: any): RouteSegmentConfig[] {\n  // Implementation for daily route segments\n  return []\n}\n\nfunction calculateDayBounds(destinations: DestinationVisit[]): google.maps.LatLngBounds | null {\n  if (!destinations.length) return null\n  \n  const bounds = new google.maps.LatLngBounds()\n  destinations.forEach(dest => {\n    bounds.extend({\n      lat: dest.location.latitude,\n      lng: dest.location.longitude\n    })\n  })\n  \n  return bounds\n}\n\nfunction getRouteStyle(mode: 'walking' | 'driving' | 'flying') {\n  const styles = {\n    walking: { strokeColor: '#059669', strokeWeight: 3, strokeOpacity: 0.8 },\n    driving: { strokeColor: '#92400E', strokeWeight: 4, strokeOpacity: 0.8 },\n    flying: { strokeColor: '#1E3A8A', strokeWeight: 5, strokeOpacity: 0.8 }\n  }\n  return styles[mode]\n}\n\nfunction createMarkerContent(config: MarkerConfig): HTMLElement {\n  const container = document.createElement('div')\n  container.className = 'custom-marker'\n  container.style.cssText = `\n    width: ${config.size}px;\n    height: ${config.size}px;\n    background-color: ${config.color};\n    border: 2px solid white;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-weight: 600;\n    color: white;\n    box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n    cursor: pointer;\n  `\n  \n  container.textContent = config.orderNumber.toString()\n  return container\n}\n\n/**\n * Performance indicator component for development\n */\nfunction PerformanceIndicator() {\n  const [perfData, setPerfData] = useState({\n    tier: 'unknown' as 'high' | 'medium' | 'low' | 'unknown',\n    fps: 0,\n    memory: null as any\n  })\n  \n  useEffect(() => {\n    const perfManager = MobilePerformanceManager.getInstance()\n    const memoryManager = MapMemoryManager.getInstance()\n    \n    const updatePerf = () => {\n      setPerfData({\n        tier: perfManager.getPerformanceTier(),\n        fps: 0, // Would be updated by frame rate monitor\n        memory: memoryManager.getMemoryUsage()\n      })\n    }\n    \n    updatePerf()\n    const interval = setInterval(updatePerf, 2000)\n    \n    return () => clearInterval(interval)\n  }, [])\n  \n  return (\n    <div className=\"absolute top-2 left-2 bg-black/80 text-white text-xs p-2 rounded font-mono\">\n      <div>Tier: {perfData.tier}</div>\n      {perfData.memory && (\n        <div>Memory: {Math.round(perfData.memory.percentage)}%</div>\n      )}\n    </div>\n  )\n}","/Users/kominetenma/Desktop/project/components/places/map-visualization/lazy-map-loader.tsx",[],[],"/Users/kominetenma/Desktop/project/components/places/map-visualization/map-controls.tsx",[],[],"/Users/kominetenma/Desktop/project/components/places/map-visualization/performance-utils.ts",[],[],"/Users/kominetenma/Desktop/project/components/places/map-visualization/route-visualization.tsx",[],[],"/Users/kominetenma/Desktop/project/components/places/mobile-timeline-controls.tsx",[],[],"/Users/kominetenma/Desktop/project/components/places/optimization-suggestions.tsx",[],[],"/Users/kominetenma/Desktop/project/components/places/timeline-settings.tsx",[],[],"/Users/kominetenma/Desktop/project/components/places/trip-calendar-integration.tsx",[],[],"/Users/kominetenma/Desktop/project/lib/__tests__/api-integration.test.ts",[],[],"/Users/kominetenma/Desktop/project/lib/actions/optimization-actions.ts",[],[],"/Users/kominetenma/Desktop/project/lib/actions/optimization-server-actions.ts",[],[],"/Users/kominetenma/Desktop/project/lib/optimization/accommodation-suggester.ts",[],[],"/Users/kominetenma/Desktop/project/lib/optimization/complete-optimizer-v2.ts",[],[],"/Users/kominetenma/Desktop/project/lib/optimization/daily-schedule-types.ts",[],[],"/Users/kominetenma/Desktop/project/lib/optimization/day-splitter.ts",[],[],"/Users/kominetenma/Desktop/project/lib/optimization/enhanced-time-allocator.ts",[],[],"/Users/kominetenma/Desktop/project/lib/optimization/meal-scheduler.ts",[],[],"/Users/kominetenma/Desktop/project/lib/optimization/usage-example.ts",[],[],"/Users/kominetenma/Desktop/project/lib/services/integrated-route-manager.ts",[],[],"/Users/kominetenma/Desktop/project/lib/services/real-time-sync.ts",[],[],"/Users/kominetenma/Desktop/project/lib/services/route-cache.ts",["958"],[],"// Caching and performance optimization for route data\n\nimport type {\n  StoredRouteData,\n  OptimizedRoute,\n  CacheEntry,\n  RouteOperationMetrics\n} from '@/lib/types/route-storage'\nimport {\n  CacheInvalidationError\n} from '@/lib/types/route-storage'\n\n/**\n * Multi-level caching system for route data\n */\nexport class RouteDataCache {\n  private memoryCache = new Map<string, CacheEntry<StoredRouteData>>()\n  private readonly CACHE_EXPIRY_MS = 5 * 60 * 1000 // 5 minutes\n  private readonly MAX_MEMORY_ENTRIES = 50\n  private readonly LOCAL_STORAGE_PREFIX = 'voypath_route_'\n  private readonly LOCAL_STORAGE_EXPIRY_MS = 24 * 60 * 60 * 1000 // 24 hours\n  \n  // Performance metrics\n  private metrics = {\n    hits: 0,\n    misses: 0,\n    invalidations: 0,\n    errors: 0\n  }\n\n  /**\n   * Get route from cache with fallback strategy\n   */\n  async getRoute(groupId: string, fetchFromDb: () => Promise<OptimizedRoute | null>): Promise<StoredRouteData | null> {\n    const startTime = performance.now()\n    let cacheHit = false\n    let result: StoredRouteData | null = null\n\n    try {\n      // Try memory cache first\n      const cached = this.getFromMemoryCache(groupId)\n      if (cached) {\n        cacheHit = true\n        result = cached\n        this.metrics.hits++\n        return cached\n      }\n\n      // Try local storage (for guest users and offline support)\n      const localCached = this.getFromLocalStorage(groupId)\n      if (localCached) {\n        // Update memory cache\n        this.setInMemoryCache(groupId, localCached)\n        cacheHit = true\n        result = localCached\n        this.metrics.hits++\n        return localCached\n      }\n\n      // Fetch from database\n      this.metrics.misses++\n      const dbResult = await fetchFromDb()\n      \n      if (dbResult?.route_data) {\n        result = dbResult.route_data\n        // Store in both caches\n        this.setInMemoryCache(groupId, dbResult.route_data, dbResult.version)\n        this.saveToLocalStorage(groupId, dbResult.route_data, dbResult.version)\n      }\n\n      return result\n    } catch (error) {\n      this.metrics.errors++\n      console.error('Cache error:', error)\n      // Fallback to database\n      const dbResult = await fetchFromDb()\n      return dbResult?.route_data || null\n    } finally {\n      // Record performance metrics\n      this.recordMetrics('get_route', performance.now() - startTime, cacheHit, groupId)\n    }\n  }\n\n  /**\n   * Set route in cache\n   */\n  setRoute(groupId: string, routeData: StoredRouteData, version: number) {\n    try {\n      this.setInMemoryCache(groupId, routeData, version)\n      this.saveToLocalStorage(groupId, routeData, version)\n    } catch (error) {\n      console.error('Failed to set cache:', error)\n    }\n  }\n\n  /**\n   * Invalidate cache for a group\n   */\n  invalidateCache(groupId: string) {\n    try {\n      this.memoryCache.delete(groupId)\n      this.removeFromLocalStorage(groupId)\n      this.metrics.invalidations++\n    } catch (error) {\n      this.metrics.errors++\n      throw new CacheInvalidationError(\n        `Failed to invalidate cache for group ${groupId}`,\n        groupId,\n        'all'\n      )\n    }\n  }\n\n  /**\n   * Memory cache operations\n   */\n  private getFromMemoryCache(groupId: string): StoredRouteData | null {\n    const entry = this.memoryCache.get(groupId)\n    \n    if (!entry) {\n      return null\n    }\n\n    // Check if expired\n    if (Date.now() > entry.expires_at) {\n      this.memoryCache.delete(groupId)\n      return null\n    }\n\n    return entry.data\n  }\n\n  private setInMemoryCache(groupId: string, data: StoredRouteData, version: number = 0) {\n    // Clean up old entries if cache is full\n    if (this.memoryCache.size >= this.MAX_MEMORY_ENTRIES) {\n      this.cleanupMemoryCache()\n    }\n\n    const entry: CacheEntry<StoredRouteData> = {\n      data,\n      timestamp: Date.now(),\n      expires_at: Date.now() + this.CACHE_EXPIRY_MS,\n      version,\n      group_id: groupId\n    }\n\n    this.memoryCache.set(groupId, entry)\n  }\n\n  private cleanupMemoryCache() {\n    // Remove expired entries first\n    const now = Date.now()\n    const entries = Array.from(this.memoryCache.entries())\n    for (const [key, entry] of entries) {\n      if (now > entry.expires_at) {\n        this.memoryCache.delete(key)\n      }\n    }\n\n    // If still too many, remove oldest entries\n    if (this.memoryCache.size >= this.MAX_MEMORY_ENTRIES) {\n      const entries = Array.from(this.memoryCache.entries())\n      entries.sort((a, b) => a[1].timestamp - b[1].timestamp)\n      \n      const toRemove = entries.slice(0, this.memoryCache.size - this.MAX_MEMORY_ENTRIES + 10)\n      toRemove.forEach(([key]) => this.memoryCache.delete(key))\n    }\n  }\n\n  /**\n   * Local storage operations\n   */\n  private getFromLocalStorage(groupId: string): StoredRouteData | null {\n    try {\n      if (typeof window === 'undefined') return null\n\n      const key = this.LOCAL_STORAGE_PREFIX + groupId\n      const stored = localStorage.getItem(key)\n      \n      if (!stored) return null\n\n      const parsed = JSON.parse(stored)\n      \n      // Check if expired\n      if (Date.now() > parsed.expires_at) {\n        localStorage.removeItem(key)\n        return null\n      }\n\n      return parsed.data\n    } catch (error) {\n      console.error('Error reading from local storage:', error)\n      return null\n    }\n  }\n\n  private saveToLocalStorage(groupId: string, data: StoredRouteData, version: number = 0) {\n    try {\n      if (typeof window === 'undefined') return\n\n      const key = this.LOCAL_STORAGE_PREFIX + groupId\n      const entry = {\n        data,\n        timestamp: Date.now(),\n        expires_at: Date.now() + this.LOCAL_STORAGE_EXPIRY_MS,\n        version,\n        group_id: groupId\n      }\n\n      localStorage.setItem(key, JSON.stringify(entry))\n    } catch (error) {\n      console.error('Error saving to local storage:', error)\n      // Ignore errors (storage quota, private browsing, etc.)\n    }\n  }\n\n  private removeFromLocalStorage(groupId: string) {\n    try {\n      if (typeof window === 'undefined') return\n\n      const key = this.LOCAL_STORAGE_PREFIX + groupId\n      localStorage.removeItem(key)\n    } catch (error) {\n      console.error('Error removing from local storage:', error)\n    }\n  }\n\n  /**\n   * Cache validation\n   */\n  isValidCache(groupId: string): boolean {\n    const entry = this.memoryCache.get(groupId)\n    return entry ? Date.now() <= entry.expires_at : false\n  }\n\n  /**\n   * Get cache statistics\n   */\n  getStats() {\n    return {\n      ...this.metrics,\n      memoryEntries: this.memoryCache.size,\n      hitRate: this.metrics.hits / (this.metrics.hits + this.metrics.misses) || 0\n    }\n  }\n\n  /**\n   * Clear all caches\n   */\n  clearAll() {\n    this.memoryCache.clear()\n    \n    if (typeof window !== 'undefined') {\n      // Clear local storage entries\n      const keys = Object.keys(localStorage)\n      keys.forEach(key => {\n        if (key.startsWith(this.LOCAL_STORAGE_PREFIX)) {\n          localStorage.removeItem(key)\n        }\n      })\n    }\n  }\n\n  /**\n   * Preload routes for better performance\n   */\n  async preloadRoutes(groupIds: string[], fetchFunction: (groupId: string) => Promise<OptimizedRoute | null>) {\n    const promises = groupIds.map(async (groupId) => {\n      try {\n        if (!this.isValidCache(groupId)) {\n          const route = await fetchFunction(groupId)\n          if (route?.route_data) {\n            this.setRoute(groupId, route.route_data, route.version)\n          }\n        }\n      } catch (error) {\n        console.error(`Failed to preload route for group ${groupId}:`, error)\n      }\n    })\n\n    await Promise.allSettled(promises)\n  }\n\n  /**\n   * Record performance metrics\n   */\n  private recordMetrics(\n    operation: string,\n    duration: number,\n    cacheHit: boolean,\n    groupId: string,\n    success: boolean = true\n  ) {\n    const metric: RouteOperationMetrics = {\n      operation,\n      duration_ms: duration,\n      rows_affected: 1,\n      cache_hit: cacheHit,\n      group_id: groupId,\n      timestamp: new Date().toISOString(),\n      success\n    }\n\n    // Log performance metrics (could be sent to analytics service)\n    if (duration > 1000) {\n      console.warn('Slow cache operation:', metric)\n    }\n  }\n}\n\n/**\n * Batch operations for better performance\n */\nexport class BatchOperationManager {\n  private pendingOperations = new Map<string, Array<() => Promise<any>>>()\n  private batchTimeouts = new Map<string, NodeJS.Timeout>()\n  private readonly BATCH_DELAY_MS = 100\n  private readonly MAX_BATCH_SIZE = 10\n\n  /**\n   * Add operation to batch\n   */\n  addToBatch<T>(\n    batchKey: string,\n    operation: () => Promise<T>\n  ): Promise<T> {\n    return new Promise((resolve, reject) => {\n      const wrappedOperation = async () => {\n        try {\n          const result = await operation()\n          resolve(result)\n          return result\n        } catch (error) {\n          reject(error)\n          throw error\n        }\n      }\n\n      // Add to pending operations\n      if (!this.pendingOperations.has(batchKey)) {\n        this.pendingOperations.set(batchKey, [])\n      }\n      \n      const operations = this.pendingOperations.get(batchKey)!\n      operations.push(wrappedOperation)\n\n      // Execute immediately if batch is full\n      if (operations.length >= this.MAX_BATCH_SIZE) {\n        this.executeBatch(batchKey)\n        return\n      }\n\n      // Schedule batch execution\n      if (!this.batchTimeouts.has(batchKey)) {\n        const timeout = setTimeout(() => {\n          this.executeBatch(batchKey)\n        }, this.BATCH_DELAY_MS)\n        \n        this.batchTimeouts.set(batchKey, timeout)\n      }\n    })\n  }\n\n  /**\n   * Execute batch operations\n   */\n  private async executeBatch(batchKey: string) {\n    const operations = this.pendingOperations.get(batchKey)\n    const timeout = this.batchTimeouts.get(batchKey)\n\n    if (timeout) {\n      clearTimeout(timeout)\n      this.batchTimeouts.delete(batchKey)\n    }\n\n    if (!operations || operations.length === 0) {\n      return\n    }\n\n    // Clear pending operations\n    this.pendingOperations.delete(batchKey)\n\n    // Execute all operations in parallel\n    try {\n      await Promise.all(operations.map(op => op()))\n    } catch (error) {\n      console.error(`Batch execution failed for ${batchKey}:`, error)\n    }\n  }\n\n  /**\n   * Force execute all pending batches\n   */\n  async flushAll() {\n    const batchKeys = Array.from(this.pendingOperations.keys())\n    await Promise.all(batchKeys.map(key => this.executeBatch(key)))\n  }\n}\n\n/**\n * Query optimization utilities\n */\nexport class QueryOptimizer {\n  private queryCache = new Map<string, { result: any; timestamp: number }>()\n  private readonly QUERY_CACHE_TTL = 60000 // 1 minute\n\n  /**\n   * Cache query results\n   */\n  async cachedQuery<T>(\n    queryKey: string,\n    queryFunction: () => Promise<T>,\n    ttl: number = this.QUERY_CACHE_TTL\n  ): Promise<T> {\n    const cached = this.queryCache.get(queryKey)\n    \n    if (cached && Date.now() - cached.timestamp < ttl) {\n      return cached.result\n    }\n\n    const result = await queryFunction()\n    this.queryCache.set(queryKey, {\n      result,\n      timestamp: Date.now()\n    })\n\n    return result\n  }\n\n  /**\n   * Build optimized JSONB queries\n   */\n  buildJsonbQuery(\n    baseQuery: any,\n    jsonbColumn: string,\n    filters: Record<string, any>\n  ) {\n    let query = baseQuery\n\n    Object.entries(filters).forEach(([path, value]) => {\n      if (value !== undefined && value !== null) {\n        query = query.eq(`${jsonbColumn}->>${path}`, value)\n      }\n    })\n\n    return query\n  }\n\n  /**\n   * Clear query cache\n   */\n  clearQueryCache() {\n    this.queryCache.clear()\n  }\n}\n\n// Export singleton instances\nexport const routeDataCache = new RouteDataCache()\nexport const batchOperationManager = new BatchOperationManager()\nexport const queryOptimizer = new QueryOptimizer()\n\nexport default {\n  routeDataCache,\n  batchOperationManager,\n  queryOptimizer\n}","/Users/kominetenma/Desktop/project/lib/services/route-storage.ts",[],[],"/Users/kominetenma/Desktop/project/lib/test-data/mock-itinerary.ts",[],[],"/Users/kominetenma/Desktop/project/lib/types/api-errors.ts",[],[],"/Users/kominetenma/Desktop/project/lib/types/calendar-visualization.ts",[],[],"/Users/kominetenma/Desktop/project/lib/types/interactive-list.ts",[],[],"/Users/kominetenma/Desktop/project/lib/types/map-visualization.ts",[],[],"/Users/kominetenma/Desktop/project/lib/types/route-storage.ts",[],[],"/Users/kominetenma/Desktop/project/lib/utils/calendar-utils.ts",[],[],"/Users/kominetenma/Desktop/project/lib/utils/edge-case-handling.ts",[],[],"/Users/kominetenma/Desktop/project/lib/utils/error-messages.ts",["959"],[],"import type { OptimizationError } from '../types/api-errors'\nimport { OptimizationErrorType } from '../types/api-errors'\n\nexport interface UserFriendlyError {\n  title: string\n  message: string\n  suggestions: string[]\n  icon: string\n  severity: 'error' | 'warning' | 'info'\n  technicalDetails?: any\n  retryable: boolean\n  timestamp: string\n  helpUrl?: string\n}\n\nexport interface ErrorMessageTemplate {\n  title: string\n  message: string\n  suggestions: string[]\n  icon: string\n  severity: 'error' | 'warning' | 'info'\n  helpUrl?: string\n}\n\n// Multilingual error messages\nconst errorMessages: Record<string, Record<OptimizationErrorType, ErrorMessageTemplate>> = {\n  en: {\n    [OptimizationErrorType.INSUFFICIENT_DATA]: {\n      title: \"Not Enough Information\",\n      message: \"We need more destination preferences to create an optimal route for your group.\",\n      suggestions: [\n        \"Ask group members to rate more destinations\",\n        \"Add more destinations to choose from\",\n        \"Provide time preferences for existing destinations\",\n        \"Share the trip link with all group members\"\n      ],\n      icon: \"⚠️\",\n      severity: \"warning\",\n      helpUrl: \"/help/adding-preferences\"\n    },\n  \n    [OptimizationErrorType.NO_FEASIBLE_SOLUTION]: {\n      title: \"Route Not Possible\",\n      message: \"We couldn't fit all desired destinations within your available time and constraints.\",\n      suggestions: [\n        \"Extend your trip duration by a few days\",\n        \"Reduce time spent at some destinations\",\n        \"Remove some lower-priority destinations\",\n        \"Consider splitting into multiple shorter trips\",\n        \"Adjust travel pace preferences\"\n      ],\n      icon: \"🚫\",\n      severity: \"error\",\n      helpUrl: \"/help/trip-constraints\"\n    },\n  \n    [OptimizationErrorType.OPTIMIZATION_TIMEOUT]: {\n      title: \"Taking Longer Than Expected\",\n      message: \"Optimization is complex for your group size and preferences. We've found a good solution so far.\",\n      suggestions: [\n        \"Use the current result and refine manually\",\n        \"Try again with fewer destinations\",\n        \"Simplify group preferences\",\n        \"Contact support if this keeps happening\"\n      ],\n      icon: \"⏱️\",\n      severity: \"warning\"\n    },\n  \n    [OptimizationErrorType.CLUSTERING_FAILED]: {\n      title: \"Grouping Error\",\n      message: \"We had trouble organizing destinations into logical groups for your trip.\",\n      suggestions: [\n        \"Check that destinations are in reasonable locations\",\n        \"Ensure destinations have valid coordinates\",\n        \"Try with fewer destinations\",\n        \"Manual arrangement may work better\"\n      ],\n      icon: \"🔗\",\n      severity: \"error\"\n    },\n  \n    [OptimizationErrorType.INVALID_COORDINATES]: {\n      title: \"Invalid Location Data\",\n      message: \"Some destination coordinates appear to be invalid or outside valid ranges.\",\n      suggestions: [\n        \"Check that all destinations have valid addresses\",\n        \"Verify locations on the map before optimizing\",\n        \"Remove any placeholder or test destinations\",\n        \"Try searching for locations again\"\n      ],\n      icon: \"📍\",\n      severity: \"error\"\n    },\n  \n    [OptimizationErrorType.MISSING_PREFERENCES]: {\n      title: \"Missing User Preferences\",\n      message: \"Group members haven't provided enough preferences for optimization.\",\n      suggestions: [\n        \"Invite all group members to join the trip\",\n        \"Ask members to rate destinations they're interested in\",\n        \"Set default preferences for missing members\",\n        \"Continue with available preferences\"\n      ],\n      icon: \"👥\",\n      severity: \"warning\"\n    },\n  \n    [OptimizationErrorType.DATABASE_ERROR]: {\n      title: \"Temporary Service Issue\",\n      message: \"We're experiencing a temporary issue saving your optimization. Your data is safe.\",\n      suggestions: [\n        \"Try again in a moment\",\n        \"Check your internet connection\",\n        \"Your trip data has been preserved\",\n        \"Contact support if this persists\"\n      ],\n      icon: \"💾\",\n      severity: \"error\"\n    },\n  \n    [OptimizationErrorType.AUTHENTICATION_ERROR]: {\n      title: \"Access Issue\",\n      message: \"We need to verify your access to this trip before optimizing.\",\n      suggestions: [\n        \"Sign in to your account\",\n        \"Check that you're a member of this trip\",\n        \"Ask the trip creator to invite you\",\n        \"Refresh the page and try again\"\n      ],\n      icon: \"🔐\",\n      severity: \"error\"\n    },\n  \n    [OptimizationErrorType.PERMISSION_DENIED]: {\n      title: \"Permission Required\",\n      message: \"You don't have permission to optimize this trip's route.\",\n      suggestions: [\n        \"Ask the trip organizer for editing permissions\",\n        \"Join the trip as an active member\",\n        \"Create your own copy of this trip\",\n        \"Contact the trip creator\"\n      ],\n      icon: \"🚷\",\n      severity: \"error\"\n    },\n  \n    [OptimizationErrorType.GEOCODING_FAILED]: {\n      title: \"Location Lookup Failed\",\n      message: \"We couldn't find geographic coordinates for some destinations.\",\n      suggestions: [\n        \"Check destination names and addresses\",\n        \"Use more specific location descriptions\",\n        \"Add city or country information\",\n        \"Try alternative location names\"\n      ],\n      icon: \"🗺️\",\n      severity: \"error\"\n    },\n  \n    [OptimizationErrorType.MAPS_API_ERROR]: {\n      title: \"Map Service Issue\",\n      message: \"Our mapping service is temporarily unavailable for route calculations.\",\n      suggestions: [\n        \"Try again in a few minutes\",\n        \"Check your internet connection\",\n        \"Use manual route planning temporarily\",\n        \"Contact support if this continues\"\n      ],\n      icon: \"🗺️\",\n      severity: \"error\"\n    },\n  \n    [OptimizationErrorType.RATE_LIMIT_EXCEEDED]: {\n      title: \"Too Many Requests\",\n      message: \"You've reached the limit for optimization requests. Please wait before trying again.\",\n      suggestions: [\n        \"Wait a few minutes before optimizing again\",\n        \"Consider upgrading for more requests\",\n        \"Refine your trip before re-optimizing\",\n        \"Contact support for assistance\"\n      ],\n      icon: \"⚡\",\n      severity: \"warning\",\n      helpUrl: \"/help/rate-limits\"\n    },\n\n    [OptimizationErrorType.VALIDATION_ERROR]: {\n      title: \"Invalid Trip Data\",\n      message: \"Some information about your trip doesn't meet our requirements.\",\n      suggestions: [\n        \"Check all required fields are filled\",\n        \"Verify dates are in the correct format\",\n        \"Ensure group size is reasonable\",\n        \"Review destination information\"\n      ],\n      icon: \"📋\",\n      severity: \"error\"\n    },\n\n    [OptimizationErrorType.NETWORK_ERROR]: {\n      title: \"Connection Problem\",\n      message: \"We couldn't connect to our optimization service. Check your internet connection.\",\n      suggestions: [\n        \"Check your internet connection\",\n        \"Try refreshing the page\",\n        \"Wait a moment and try again\",\n        \"Switch to a different network if possible\"\n      ],\n      icon: \"📡\",\n      severity: \"error\"\n    },\n\n    [OptimizationErrorType.INVALID_DESTINATIONS]: {\n      title: \"Invalid Destinations\",\n      message: \"Some destinations in your trip are invalid or inaccessible.\",\n      suggestions: [\n        \"Check destination names and addresses\",\n        \"Remove any duplicate destinations\",\n        \"Verify all locations exist and are accessible\",\n        \"Use specific addresses instead of general areas\"\n      ],\n      icon: \"📍\",\n      severity: \"error\"\n    },\n\n    [OptimizationErrorType.MISSING_GROUP_DATA]: {\n      title: \"Incomplete Group Information\",\n      message: \"We're missing essential information about your travel group.\",\n      suggestions: [\n        \"Ensure all group members have joined the trip\",\n        \"Complete your group profile information\",\n        \"Verify group size and preferences\",\n        \"Contact missing members to join the trip\"\n      ],\n      icon: \"👥\",\n      severity: \"warning\"\n    },\n\n    [OptimizationErrorType.ROUTE_CALCULATION_FAILED]: {\n      title: \"Route Calculation Error\",\n      message: \"We couldn't calculate routes between your destinations.\",\n      suggestions: [\n        \"Check that all destinations are reachable\",\n        \"Verify destination coordinates are correct\",\n        \"Try with fewer destinations\",\n        \"Contact support if this persists\"\n      ],\n      icon: \"🛣️\",\n      severity: \"error\"\n    },\n\n    [OptimizationErrorType.FAIRNESS_CALCULATION_FAILED]: {\n      title: \"Fairness Analysis Error\",\n      message: \"We couldn't analyze preference fairness for your group.\",\n      suggestions: [\n        \"Ensure all group members have provided preferences\",\n        \"Check that preferences are properly formatted\",\n        \"Try manual optimization as a fallback\",\n        \"Contact support for assistance\"\n      ],\n      icon: \"⚖️\",\n      severity: \"error\"\n    },\n\n    [OptimizationErrorType.SESSION_EXPIRED]: {\n      title: \"Session Expired\",\n      message: \"Your session has expired. Please sign in again to continue.\",\n      suggestions: [\n        \"Refresh the page and sign in again\",\n        \"Check your internet connection\",\n        \"Clear browser cookies if needed\",\n        \"Contact support if sign-in fails\"\n      ],\n      icon: \"⏰\",\n      severity: \"warning\"\n    },\n\n    [OptimizationErrorType.STORAGE_ERROR]: {\n      title: \"Storage Issue\",\n      message: \"We couldn't save your optimization results due to a storage error.\",\n      suggestions: [\n        \"Try saving again in a moment\",\n        \"Check available storage space\",\n        \"Clear browser cache and retry\",\n        \"Contact support if the problem persists\"\n      ],\n      icon: \"💾\",\n      severity: \"error\"\n    },\n\n    [OptimizationErrorType.SERVICE_UNAVAILABLE]: {\n      title: \"Service Temporarily Unavailable\",\n      message: \"Our optimization service is temporarily down for maintenance.\",\n      suggestions: [\n        \"Try again in a few minutes\",\n        \"Check our status page for updates\",\n        \"Use manual planning as a temporary solution\",\n        \"Sign up for service notifications\"\n      ],\n      icon: \"🚧\",\n      severity: \"error\"\n    },\n\n    [OptimizationErrorType.CONSTRAINT_VIOLATION]: {\n      title: \"Constraint Violation\",\n      message: \"Your trip requirements conflict with available options.\",\n      suggestions: [\n        \"Review your time and budget constraints\",\n        \"Consider more flexible travel dates\",\n        \"Adjust destination priorities\",\n        \"Reduce the number of must-visit places\"\n      ],\n      icon: \"⛔\",\n      severity: \"error\"\n    },\n\n    [OptimizationErrorType.TYPE_ERROR]: {\n      title: \"Data Type Error\",\n      message: \"Some of your trip data is in an unexpected format.\",\n      suggestions: [\n        \"Check date formats are correct\",\n        \"Verify numeric values for duration and budget\",\n        \"Refresh the page and try again\",\n        \"Contact support with details of what you entered\"\n      ],\n      icon: \"🔤\",\n      severity: \"error\"\n    },\n\n    [OptimizationErrorType.UNKNOWN_ERROR]: {\n      title: \"Unexpected Error\",\n      message: \"Something unexpected happened. Our team has been notified.\",\n      suggestions: [\n        \"Try refreshing the page\",\n        \"Clear your browser cache\",\n        \"Try again in a few minutes\",\n        \"Contact support with error details\"\n      ],\n      icon: \"❌\",\n      severity: \"error\"\n    }\n  }\n}\n\n/**\n * Gets the user's preferred language, falling back to English\n */\nfunction getUserLanguage(): string {\n  if (typeof window !== 'undefined') {\n    return window.navigator.language.split('-')[0] || 'en'\n  }\n  return 'en'\n}\n\n/**\n * Formats an optimization error into a user-friendly error message\n */\nexport function formatErrorForUser(\n  error: OptimizationError,\n  language?: string\n): UserFriendlyError {\n  const userLang = language || getUserLanguage()\n  const messages = errorMessages[userLang] || errorMessages.en\n  const template = messages[error.type] || messages[OptimizationErrorType.UNKNOWN_ERROR]\n\n  return {\n    title: template.title,\n    message: template.message,\n    suggestions: template.suggestions,\n    icon: template.icon,\n    severity: template.severity,\n    retryable: error.retryable,\n    timestamp: new Date().toISOString(),\n    technicalDetails: error.details,\n    helpUrl: template.helpUrl\n  }\n}\n\n/**\n * Creates a user-friendly error from a raw error object\n */\nexport function createUserFriendlyError(\n  rawError: unknown,\n  context?: string,\n  language?: string\n): UserFriendlyError {\n  let optimizationError: OptimizationError\n\n  if (rawError && typeof rawError === 'object' && 'type' in rawError) {\n    optimizationError = rawError as OptimizationError\n  } else {\n    optimizationError = {\n      type: OptimizationErrorType.UNKNOWN_ERROR,\n      message: rawError instanceof Error ? rawError.message : 'Unknown error occurred',\n      userMessage: 'An unexpected error occurred',\n      suggestedActions: ['Try again', 'Contact support if the problem persists'],\n      retryable: true,\n      severity: 'high',\n      timestamp: new Date().toISOString(),\n      details: { context, originalError: rawError }\n    }\n  }\n\n  return formatErrorForUser(optimizationError, language)\n}\n\n/**\n * Generates contextual help suggestions based on error type and trip data\n */\nexport function generateContextualSuggestions(\n  error: OptimizationError,\n  tripData?: any\n): string[] {\n  const baseSuggestions = formatErrorForUser(error).suggestions\n  const contextualSuggestions = [...baseSuggestions]\n\n  if (tripData) {\n    switch (error.type) {\n      case OptimizationErrorType.INSUFFICIENT_DATA:\n        if (tripData.groupMembers?.length > 5) {\n          contextualSuggestions.push(\"With a large group, consider setting up preference deadlines\")\n        }\n        if (tripData.destinations?.length < 3) {\n          contextualSuggestions.push(\"Add more destination options for better optimization\")\n        }\n        break\n\n      case OptimizationErrorType.NO_FEASIBLE_SOLUTION:\n        if (tripData.duration && tripData.destinations?.length > tripData.duration * 3) {\n          contextualSuggestions.push(\"You have many destinations for the trip duration - consider prioritizing\")\n        }\n        if (tripData.transportMode === 'walking') {\n          contextualSuggestions.push(\"Consider enabling other transport modes for longer distances\")\n        }\n        break\n\n      case OptimizationErrorType.OPTIMIZATION_TIMEOUT:\n        if (tripData.groupMembers?.length > 10) {\n          contextualSuggestions.push(\"Large groups require more processing time - this is normal\")\n        }\n        if (tripData.destinations?.length > 20) {\n          contextualSuggestions.push(\"Try optimizing with your top 15-20 destinations first\")\n        }\n        break\n    }\n  }\n\n  return contextualSuggestions\n}\n\n// Severity levels for different error types\nexport enum ErrorSeverity {\n  LOW = 'low',      // Warnings, non-blocking issues\n  MEDIUM = 'medium', // Errors that can be worked around\n  HIGH = 'high',     // Blocking errors that prevent optimization\n  CRITICAL = 'critical' // System-level errors\n}\n\nexport function getErrorSeverity(errorType: OptimizationErrorType): ErrorSeverity {\n  const severityMap: Record<OptimizationErrorType, ErrorSeverity> = {\n    [OptimizationErrorType.INSUFFICIENT_DATA]: ErrorSeverity.MEDIUM,\n    [OptimizationErrorType.INVALID_COORDINATES]: ErrorSeverity.MEDIUM,\n    [OptimizationErrorType.MISSING_PREFERENCES]: ErrorSeverity.LOW,\n    [OptimizationErrorType.INVALID_DESTINATIONS]: ErrorSeverity.HIGH,\n    [OptimizationErrorType.MISSING_GROUP_DATA]: ErrorSeverity.MEDIUM,\n    [OptimizationErrorType.NO_FEASIBLE_SOLUTION]: ErrorSeverity.HIGH,\n    [OptimizationErrorType.OPTIMIZATION_TIMEOUT]: ErrorSeverity.MEDIUM,\n    [OptimizationErrorType.CLUSTERING_FAILED]: ErrorSeverity.HIGH,\n    [OptimizationErrorType.ROUTE_CALCULATION_FAILED]: ErrorSeverity.HIGH,\n    [OptimizationErrorType.FAIRNESS_CALCULATION_FAILED]: ErrorSeverity.MEDIUM,\n    [OptimizationErrorType.DATABASE_ERROR]: ErrorSeverity.HIGH,\n    [OptimizationErrorType.AUTHENTICATION_ERROR]: ErrorSeverity.HIGH,\n    [OptimizationErrorType.PERMISSION_DENIED]: ErrorSeverity.HIGH,\n    [OptimizationErrorType.SESSION_EXPIRED]: ErrorSeverity.MEDIUM,\n    [OptimizationErrorType.STORAGE_ERROR]: ErrorSeverity.HIGH,\n    [OptimizationErrorType.GEOCODING_FAILED]: ErrorSeverity.MEDIUM,\n    [OptimizationErrorType.MAPS_API_ERROR]: ErrorSeverity.MEDIUM,\n    [OptimizationErrorType.RATE_LIMIT_EXCEEDED]: ErrorSeverity.MEDIUM,\n    [OptimizationErrorType.NETWORK_ERROR]: ErrorSeverity.MEDIUM,\n    [OptimizationErrorType.SERVICE_UNAVAILABLE]: ErrorSeverity.CRITICAL,\n    [OptimizationErrorType.VALIDATION_ERROR]: ErrorSeverity.HIGH,\n    [OptimizationErrorType.CONSTRAINT_VIOLATION]: ErrorSeverity.HIGH,\n    [OptimizationErrorType.TYPE_ERROR]: ErrorSeverity.HIGH,\n    [OptimizationErrorType.UNKNOWN_ERROR]: ErrorSeverity.HIGH\n  }\n  \n  return severityMap[errorType] || ErrorSeverity.HIGH\n}\n\n// Get appropriate color for error display\nexport function getErrorColor(severity: ErrorSeverity): string {\n  const colorMap = {\n    [ErrorSeverity.LOW]: 'text-blue-600 bg-blue-50 border-blue-200',\n    [ErrorSeverity.MEDIUM]: 'text-yellow-600 bg-yellow-50 border-yellow-200',\n    [ErrorSeverity.HIGH]: 'text-red-600 bg-red-50 border-red-200',\n    [ErrorSeverity.CRITICAL]: 'text-red-800 bg-red-100 border-red-300'\n  }\n  \n  return colorMap[severity]\n}\n\n// Progress stage descriptions for user feedback\nexport const stageDescriptions = {\n  preprocessing: {\n    title: \"Preparing Data\",\n    description: \"Loading your destinations and preferences...\",\n    tips: \"This usually takes 1-2 seconds\"\n  },\n  clustering: {\n    title: \"Analyzing Locations\",\n    description: \"Grouping nearby destinations for efficiency...\",\n    tips: \"We're looking at travel distances and time zones\"\n  },\n  optimizing: {\n    title: \"Finding Best Route\",\n    description: \"Calculating the optimal path through your destinations...\",\n    tips: \"This is the most complex step and may take a few seconds\"\n  },\n  generating: {\n    title: \"Creating Itinerary\",\n    description: \"Building your detailed day-by-day schedule...\",\n    tips: \"Adding transportation details and timing\"\n  },\n  scheduling: {\n    title: \"Finalizing Schedule\",\n    description: \"Optimizing timing and adding accommodations...\",\n    tips: \"Almost done!\"\n  },\n  saving: {\n    title: \"Saving Results\",\n    description: \"Storing your optimized route...\",\n    tips: \"Your route will be available to all group members\"\n  }\n}\n\n// Helper function to get user-friendly stage info\nexport function getStageInfo(stage: string) {\n  return stageDescriptions[stage as keyof typeof stageDescriptions] || {\n    title: \"Processing\",\n    description: \"Working on your request...\",\n    tips: \"Please wait while we complete this step\"\n  }\n}\n\n// Retry delay calculation based on error type\nexport function getRetryDelay(errorType: OptimizationErrorType, attemptNumber: number): number {\n  const baseDelays: Record<OptimizationErrorType, number> = {\n    [OptimizationErrorType.INSUFFICIENT_DATA]: 0, // No retry needed\n    [OptimizationErrorType.INVALID_COORDINATES]: 0, // No retry needed\n    [OptimizationErrorType.MISSING_PREFERENCES]: 0, // No retry needed\n    [OptimizationErrorType.INVALID_DESTINATIONS]: 0, // No retry needed\n    [OptimizationErrorType.MISSING_GROUP_DATA]: 0, // No retry needed\n    [OptimizationErrorType.NO_FEASIBLE_SOLUTION]: 0, // No retry needed\n    [OptimizationErrorType.OPTIMIZATION_TIMEOUT]: 1000, // 1 second base\n    [OptimizationErrorType.CLUSTERING_FAILED]: 2000, // 2 seconds base\n    [OptimizationErrorType.ROUTE_CALCULATION_FAILED]: 3000, // 3 seconds base\n    [OptimizationErrorType.FAIRNESS_CALCULATION_FAILED]: 2000, // 2 seconds base\n    [OptimizationErrorType.DATABASE_ERROR]: 3000, // 3 seconds base\n    [OptimizationErrorType.AUTHENTICATION_ERROR]: 5000, // 5 seconds base\n    [OptimizationErrorType.PERMISSION_DENIED]: 0, // No retry needed\n    [OptimizationErrorType.SESSION_EXPIRED]: 0, // No retry needed\n    [OptimizationErrorType.STORAGE_ERROR]: 3000, // 3 seconds base\n    [OptimizationErrorType.GEOCODING_FAILED]: 2000, // 2 seconds base\n    [OptimizationErrorType.MAPS_API_ERROR]: 5000, // 5 seconds base\n    [OptimizationErrorType.RATE_LIMIT_EXCEEDED]: 60000, // 1 minute base\n    [OptimizationErrorType.NETWORK_ERROR]: 3000, // 3 seconds base\n    [OptimizationErrorType.SERVICE_UNAVAILABLE]: 10000, // 10 seconds base\n    [OptimizationErrorType.VALIDATION_ERROR]: 0, // No retry needed\n    [OptimizationErrorType.CONSTRAINT_VIOLATION]: 0, // No retry needed\n    [OptimizationErrorType.TYPE_ERROR]: 0, // No retry needed\n    [OptimizationErrorType.UNKNOWN_ERROR]: 3000 // 3 seconds base\n  }\n  \n  const baseDelay = baseDelays[errorType] || 3000\n  \n  // Exponential backoff: base * (2 ^ attemptNumber)\n  return baseDelay * Math.pow(2, attemptNumber - 1)\n}\n\n\n/**\n * Determines if an error should trigger automatic retry\n */\nexport function shouldAutoRetry(error: OptimizationError, attemptCount: number): boolean {\n  const maxAttempts = 3\n  \n  if (attemptCount >= maxAttempts) {\n    return false\n  }\n\n  const retryableErrors = [\n    OptimizationErrorType.DATABASE_ERROR,\n    OptimizationErrorType.NETWORK_ERROR,\n    OptimizationErrorType.MAPS_API_ERROR,\n    OptimizationErrorType.OPTIMIZATION_TIMEOUT\n  ]\n\n  return error.retryable && retryableErrors.includes(error.type)\n}\n\n/**\n * Creates error analytics data for tracking\n */\nexport function createErrorAnalytics(error: OptimizationError, context?: any) {\n  return {\n    errorType: error.type,\n    errorMessage: error.message,\n    timestamp: new Date().toISOString(),\n    userAgent: typeof window !== 'undefined' ? window.navigator.userAgent : 'server',\n    context: {\n      tripId: context?.tripId,\n      userId: context?.userId,\n      groupSize: context?.groupSize,\n      destinationCount: context?.destinationCount,\n      ...context\n    },\n    retryable: error.retryable,\n    severity: formatErrorForUser(error).severity\n  }\n}\n\nexport { errorMessages }\n\nexport default {\n  formatErrorForUser,\n  createUserFriendlyError,\n  generateContextualSuggestions,\n  getErrorSeverity,\n  getErrorColor,\n  getStageInfo,\n  getRetryDelay,\n  shouldAutoRetry,\n  createErrorAnalytics,\n  stageDescriptions\n}\n","/Users/kominetenma/Desktop/project/lib/utils/error-recovery.ts",[],[],"/Users/kominetenma/Desktop/project/lib/utils/input-validation.ts",[],[],"/Users/kominetenma/Desktop/project/lib/utils/interactive-list-utils.ts",[],[],"/Users/kominetenma/Desktop/project/lib/utils/performance-tracker.ts",[],[],"/Users/kominetenma/Desktop/project/lib/utils/progress-tracking.ts",[],[],"/Users/kominetenma/Desktop/project/lib/utils/timeout-management.ts",[],[],{"ruleId":"960","severity":1,"message":"961","line":81,"column":6,"nodeType":"962","endLine":81,"endColumn":44,"suggestions":"963"},{"ruleId":"960","severity":1,"message":"964","line":271,"column":6,"nodeType":"962","endLine":271,"endColumn":18,"suggestions":"965"},{"ruleId":"966","severity":1,"message":"967","line":267,"column":21,"nodeType":"968","endLine":271,"endColumn":23},{"ruleId":"969","severity":2,"message":"970","line":427,"column":60,"nodeType":"971","messageId":"972","suggestions":"973"},{"ruleId":"969","severity":2,"message":"970","line":448,"column":65,"nodeType":"971","messageId":"972","suggestions":"974"},{"ruleId":"969","severity":2,"message":"970","line":237,"column":27,"nodeType":"971","messageId":"972","suggestions":"975"},{"ruleId":"960","severity":1,"message":"976","line":68,"column":6,"nodeType":"962","endLine":68,"endColumn":26,"suggestions":"977"},{"ruleId":"960","severity":1,"message":"978","line":142,"column":6,"nodeType":"962","endLine":142,"endColumn":23,"suggestions":"979"},{"ruleId":"969","severity":2,"message":"980","line":476,"column":38,"nodeType":"971","messageId":"972","suggestions":"981"},{"ruleId":"969","severity":2,"message":"980","line":476,"column":46,"nodeType":"971","messageId":"972","suggestions":"982"},{"ruleId":"960","severity":1,"message":"983","line":331,"column":6,"nodeType":"962","endLine":331,"endColumn":51,"suggestions":"984"},{"ruleId":"969","severity":2,"message":"970","line":237,"column":27,"nodeType":"971","messageId":"972","suggestions":"985"},{"ruleId":"969","severity":2,"message":"970","line":112,"column":23,"nodeType":"971","messageId":"972","suggestions":"986"},{"ruleId":"969","severity":2,"message":"980","line":202,"column":44,"nodeType":"971","messageId":"972","suggestions":"987"},{"ruleId":"969","severity":2,"message":"980","line":202,"column":51,"nodeType":"971","messageId":"972","suggestions":"988"},{"ruleId":"960","severity":1,"message":"989","line":82,"column":6,"nodeType":"962","endLine":82,"endColumn":17,"suggestions":"990"},{"ruleId":"969","severity":2,"message":"970","line":99,"column":64,"nodeType":"971","messageId":"972","suggestions":"991"},{"ruleId":"960","severity":1,"message":"992","line":111,"column":6,"nodeType":"962","endLine":111,"endColumn":56,"suggestions":"993"},{"ruleId":"960","severity":1,"message":"994","line":145,"column":6,"nodeType":"962","endLine":145,"endColumn":50,"suggestions":"995"},{"ruleId":"960","severity":1,"message":"996","line":57,"column":6,"nodeType":"962","endLine":57,"endColumn":51,"suggestions":"997"},{"ruleId":"969","severity":2,"message":"970","line":186,"column":35,"nodeType":"971","messageId":"972","suggestions":"998"},{"ruleId":"969","severity":2,"message":"970","line":200,"column":65,"nodeType":"971","messageId":"972","suggestions":"999"},{"ruleId":"969","severity":2,"message":"970","line":399,"column":42,"nodeType":"971","messageId":"972","suggestions":"1000"},{"ruleId":"969","severity":2,"message":"970","line":458,"column":28,"nodeType":"971","messageId":"972","suggestions":"1001"},{"ruleId":"969","severity":2,"message":"970","line":75,"column":24,"nodeType":"971","messageId":"972","suggestions":"1002"},{"ruleId":"969","severity":2,"message":"970","line":133,"column":32,"nodeType":"971","messageId":"972","suggestions":"1003"},{"ruleId":"969","severity":2,"message":"970","line":381,"column":36,"nodeType":"971","messageId":"972","suggestions":"1004"},{"ruleId":"969","severity":2,"message":"980","line":214,"column":25,"nodeType":"971","messageId":"972","suggestions":"1005"},{"ruleId":"969","severity":2,"message":"980","line":214,"column":58,"nodeType":"971","messageId":"972","suggestions":"1006"},{"ruleId":"969","severity":2,"message":"980","line":216,"column":42,"nodeType":"971","messageId":"972","suggestions":"1007"},{"ruleId":"969","severity":2,"message":"980","line":216,"column":46,"nodeType":"971","messageId":"972","suggestions":"1008"},{"ruleId":"969","severity":2,"message":"980","line":218,"column":25,"nodeType":"971","messageId":"972","suggestions":"1009"},{"ruleId":"969","severity":2,"message":"980","line":218,"column":49,"nodeType":"971","messageId":"972","suggestions":"1010"},{"ruleId":"969","severity":2,"message":"980","line":219,"column":70,"nodeType":"971","messageId":"972","suggestions":"1011"},{"ruleId":"969","severity":2,"message":"980","line":219,"column":77,"nodeType":"971","messageId":"972","suggestions":"1012"},{"ruleId":"969","severity":2,"message":"980","line":228,"column":73,"nodeType":"971","messageId":"972","suggestions":"1013"},{"ruleId":"969","severity":2,"message":"980","line":228,"column":77,"nodeType":"971","messageId":"972","suggestions":"1014"},{"ruleId":"969","severity":2,"message":"980","line":229,"column":76,"nodeType":"971","messageId":"972","suggestions":"1015"},{"ruleId":"969","severity":2,"message":"980","line":229,"column":88,"nodeType":"971","messageId":"972","suggestions":"1016"},{"ruleId":"969","severity":2,"message":"980","line":285,"column":19,"nodeType":"971","messageId":"972","suggestions":"1017"},{"ruleId":"969","severity":2,"message":"980","line":285,"column":38,"nodeType":"971","messageId":"972","suggestions":"1018"},{"ruleId":"960","severity":1,"message":"1019","line":155,"column":6,"nodeType":"962","endLine":155,"endColumn":56,"suggestions":"1020"},{"ruleId":"960","severity":1,"message":"1021","line":77,"column":6,"nodeType":"962","endLine":77,"endColumn":76,"suggestions":"1022"},{"ruleId":"960","severity":1,"message":"1023","line":180,"column":6,"nodeType":"962","endLine":180,"endColumn":47,"suggestions":"1024"},{"ruleId":"960","severity":1,"message":"1025","line":216,"column":6,"nodeType":"962","endLine":216,"endColumn":79,"suggestions":"1026"},{"ruleId":"1027","severity":2,"message":"1028","line":420,"column":3,"nodeType":"1029","endLine":420,"endColumn":12},{"ruleId":"1030","severity":1,"message":"1031","line":462,"column":1,"nodeType":"1032","endLine":466,"endColumn":2},{"ruleId":"1030","severity":1,"message":"1031","line":625,"column":1,"nodeType":"1032","endLine":636,"endColumn":2},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'activeTrip'. Either include it or remove the dependency array.","ArrayExpression",["1033"],"React Hook useEffect has a missing dependency: 'toast'. Either include it or remove the dependency array.",["1034"],"@next/next/no-img-element","Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","react/no-unescaped-entities","`'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.","JSXText","unescapedEntityAlts",["1035","1036","1037","1038"],["1039","1040","1041","1042"],["1043","1044","1045","1046"],"React Hook useEffect has a missing dependency: 'initPlacesService'. Either include it or remove the dependency array.",["1047"],"React Hook useEffect has a missing dependency: 'performSearch'. Either include it or remove the dependency array.",["1048"],"`\"` can be escaped with `&quot;`, `&ldquo;`, `&#34;`, `&rdquo;`.",["1049","1050","1051","1052"],["1053","1054","1055","1056"],"React Hook useEffect has a missing dependency: 'createMarkers'. Either include it or remove the dependency array.",["1057"],["1058","1059","1060","1061"],["1062","1063","1064","1065"],["1066","1067","1068","1069"],["1070","1071","1072","1073"],"React Hook useEffect has a missing dependency: 'fetchTrips'. Either include it or remove the dependency array.",["1074"],["1075","1076","1077","1078"],"React Hook useEffect has a missing dependency: 'restoreLastTrip'. Either include it or remove the dependency array.",["1079"],"React Hook useEffect has a missing dependency: 'saveActiveTripId'. Either include it or remove the dependency array.",["1080"],"React Hook useEffect has a missing dependency: 'loadPlaceDetails'. Either include it or remove the dependency array.",["1081"],["1082","1083","1084","1085"],["1086","1087","1088","1089"],["1090","1091","1092","1093"],["1094","1095","1096","1097"],["1098","1099","1100","1101"],["1102","1103","1104","1105"],["1106","1107","1108","1109"],["1110","1111","1112","1113"],["1114","1115","1116","1117"],["1118","1119","1120","1121"],["1122","1123","1124","1125"],["1126","1127","1128","1129"],["1130","1131","1132","1133"],["1134","1135","1136","1137"],["1138","1139","1140","1141"],["1142","1143","1144","1145"],["1146","1147","1148","1149"],["1150","1151","1152","1153"],["1154","1155","1156","1157"],["1158","1159","1160","1161"],["1162","1163","1164","1165"],"React Hook useEffect has missing dependencies: 'announceHelp', 'navigateToNext', 'navigateToPrevious', and 'toggleVoiceNavigation'. Either include them or remove the dependency array.",["1166"],"React Hook useEffect has missing dependencies: 'handleMouseDown', 'handleMouseUp', 'handleTouchEnd', and 'handleTouchStart'. Either include them or remove the dependency array.",["1167"],"React Hook useEffect has a missing dependency: 'mapState'. Either include it or remove the dependency array.",["1168"],"React Hook useEffect has missing dependencies: 'addMarkerToMap' and 'addRouteToMap'. Either include them or remove the dependency array.",["1169"],"react-hooks/rules-of-hooks","React Hook \"useEffect\" is called conditionally. React Hooks must be called in the exact same order in every component render. Did you accidentally call a React Hook after an early return?","Identifier","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",{"desc":"1170","fix":"1171"},{"desc":"1172","fix":"1173"},{"messageId":"1174","data":"1175","fix":"1176","desc":"1177"},{"messageId":"1174","data":"1178","fix":"1179","desc":"1180"},{"messageId":"1174","data":"1181","fix":"1182","desc":"1183"},{"messageId":"1174","data":"1184","fix":"1185","desc":"1186"},{"messageId":"1174","data":"1187","fix":"1188","desc":"1177"},{"messageId":"1174","data":"1189","fix":"1190","desc":"1180"},{"messageId":"1174","data":"1191","fix":"1192","desc":"1183"},{"messageId":"1174","data":"1193","fix":"1194","desc":"1186"},{"messageId":"1174","data":"1195","fix":"1196","desc":"1177"},{"messageId":"1174","data":"1197","fix":"1198","desc":"1180"},{"messageId":"1174","data":"1199","fix":"1200","desc":"1183"},{"messageId":"1174","data":"1201","fix":"1202","desc":"1186"},{"desc":"1203","fix":"1204"},{"desc":"1205","fix":"1206"},{"messageId":"1174","data":"1207","fix":"1208","desc":"1209"},{"messageId":"1174","data":"1210","fix":"1211","desc":"1212"},{"messageId":"1174","data":"1213","fix":"1214","desc":"1215"},{"messageId":"1174","data":"1216","fix":"1217","desc":"1218"},{"messageId":"1174","data":"1219","fix":"1220","desc":"1209"},{"messageId":"1174","data":"1221","fix":"1222","desc":"1212"},{"messageId":"1174","data":"1223","fix":"1224","desc":"1215"},{"messageId":"1174","data":"1225","fix":"1226","desc":"1218"},{"desc":"1227","fix":"1228"},{"messageId":"1174","data":"1229","fix":"1230","desc":"1177"},{"messageId":"1174","data":"1231","fix":"1232","desc":"1180"},{"messageId":"1174","data":"1233","fix":"1234","desc":"1183"},{"messageId":"1174","data":"1235","fix":"1236","desc":"1186"},{"messageId":"1174","data":"1237","fix":"1238","desc":"1177"},{"messageId":"1174","data":"1239","fix":"1240","desc":"1180"},{"messageId":"1174","data":"1241","fix":"1242","desc":"1183"},{"messageId":"1174","data":"1243","fix":"1244","desc":"1186"},{"messageId":"1174","data":"1245","fix":"1246","desc":"1209"},{"messageId":"1174","data":"1247","fix":"1248","desc":"1212"},{"messageId":"1174","data":"1249","fix":"1250","desc":"1215"},{"messageId":"1174","data":"1251","fix":"1252","desc":"1218"},{"messageId":"1174","data":"1253","fix":"1254","desc":"1209"},{"messageId":"1174","data":"1255","fix":"1256","desc":"1212"},{"messageId":"1174","data":"1257","fix":"1258","desc":"1215"},{"messageId":"1174","data":"1259","fix":"1260","desc":"1218"},{"desc":"1261","fix":"1262"},{"messageId":"1174","data":"1263","fix":"1264","desc":"1177"},{"messageId":"1174","data":"1265","fix":"1266","desc":"1180"},{"messageId":"1174","data":"1267","fix":"1268","desc":"1183"},{"messageId":"1174","data":"1269","fix":"1270","desc":"1186"},{"desc":"1271","fix":"1272"},{"desc":"1273","fix":"1274"},{"desc":"1275","fix":"1276"},{"messageId":"1174","data":"1277","fix":"1278","desc":"1177"},{"messageId":"1174","data":"1279","fix":"1280","desc":"1180"},{"messageId":"1174","data":"1281","fix":"1282","desc":"1183"},{"messageId":"1174","data":"1283","fix":"1284","desc":"1186"},{"messageId":"1174","data":"1285","fix":"1286","desc":"1177"},{"messageId":"1174","data":"1287","fix":"1288","desc":"1180"},{"messageId":"1174","data":"1289","fix":"1290","desc":"1183"},{"messageId":"1174","data":"1291","fix":"1292","desc":"1186"},{"messageId":"1174","data":"1293","fix":"1294","desc":"1177"},{"messageId":"1174","data":"1295","fix":"1296","desc":"1180"},{"messageId":"1174","data":"1297","fix":"1298","desc":"1183"},{"messageId":"1174","data":"1299","fix":"1300","desc":"1186"},{"messageId":"1174","data":"1301","fix":"1302","desc":"1177"},{"messageId":"1174","data":"1303","fix":"1304","desc":"1180"},{"messageId":"1174","data":"1305","fix":"1306","desc":"1183"},{"messageId":"1174","data":"1307","fix":"1308","desc":"1186"},{"messageId":"1174","data":"1309","fix":"1310","desc":"1177"},{"messageId":"1174","data":"1311","fix":"1312","desc":"1180"},{"messageId":"1174","data":"1313","fix":"1314","desc":"1183"},{"messageId":"1174","data":"1315","fix":"1316","desc":"1186"},{"messageId":"1174","data":"1317","fix":"1318","desc":"1177"},{"messageId":"1174","data":"1319","fix":"1320","desc":"1180"},{"messageId":"1174","data":"1321","fix":"1322","desc":"1183"},{"messageId":"1174","data":"1323","fix":"1324","desc":"1186"},{"messageId":"1174","data":"1325","fix":"1326","desc":"1177"},{"messageId":"1174","data":"1327","fix":"1328","desc":"1180"},{"messageId":"1174","data":"1329","fix":"1330","desc":"1183"},{"messageId":"1174","data":"1331","fix":"1332","desc":"1186"},{"messageId":"1174","data":"1333","fix":"1334","desc":"1209"},{"messageId":"1174","data":"1335","fix":"1336","desc":"1212"},{"messageId":"1174","data":"1337","fix":"1338","desc":"1215"},{"messageId":"1174","data":"1339","fix":"1340","desc":"1218"},{"messageId":"1174","data":"1341","fix":"1342","desc":"1209"},{"messageId":"1174","data":"1343","fix":"1344","desc":"1212"},{"messageId":"1174","data":"1345","fix":"1346","desc":"1215"},{"messageId":"1174","data":"1347","fix":"1348","desc":"1218"},{"messageId":"1174","data":"1349","fix":"1350","desc":"1209"},{"messageId":"1174","data":"1351","fix":"1352","desc":"1212"},{"messageId":"1174","data":"1353","fix":"1354","desc":"1215"},{"messageId":"1174","data":"1355","fix":"1356","desc":"1218"},{"messageId":"1174","data":"1357","fix":"1358","desc":"1209"},{"messageId":"1174","data":"1359","fix":"1360","desc":"1212"},{"messageId":"1174","data":"1361","fix":"1362","desc":"1215"},{"messageId":"1174","data":"1363","fix":"1364","desc":"1218"},{"messageId":"1174","data":"1365","fix":"1366","desc":"1209"},{"messageId":"1174","data":"1367","fix":"1368","desc":"1212"},{"messageId":"1174","data":"1369","fix":"1370","desc":"1215"},{"messageId":"1174","data":"1371","fix":"1372","desc":"1218"},{"messageId":"1174","data":"1373","fix":"1374","desc":"1209"},{"messageId":"1174","data":"1375","fix":"1376","desc":"1212"},{"messageId":"1174","data":"1377","fix":"1378","desc":"1215"},{"messageId":"1174","data":"1379","fix":"1380","desc":"1218"},{"messageId":"1174","data":"1381","fix":"1382","desc":"1209"},{"messageId":"1174","data":"1383","fix":"1384","desc":"1212"},{"messageId":"1174","data":"1385","fix":"1386","desc":"1215"},{"messageId":"1174","data":"1387","fix":"1388","desc":"1218"},{"messageId":"1174","data":"1389","fix":"1390","desc":"1209"},{"messageId":"1174","data":"1391","fix":"1392","desc":"1212"},{"messageId":"1174","data":"1393","fix":"1394","desc":"1215"},{"messageId":"1174","data":"1395","fix":"1396","desc":"1218"},{"messageId":"1174","data":"1397","fix":"1398","desc":"1209"},{"messageId":"1174","data":"1399","fix":"1400","desc":"1212"},{"messageId":"1174","data":"1401","fix":"1402","desc":"1215"},{"messageId":"1174","data":"1403","fix":"1404","desc":"1218"},{"messageId":"1174","data":"1405","fix":"1406","desc":"1209"},{"messageId":"1174","data":"1407","fix":"1408","desc":"1212"},{"messageId":"1174","data":"1409","fix":"1410","desc":"1215"},{"messageId":"1174","data":"1411","fix":"1412","desc":"1218"},{"messageId":"1174","data":"1413","fix":"1414","desc":"1209"},{"messageId":"1174","data":"1415","fix":"1416","desc":"1212"},{"messageId":"1174","data":"1417","fix":"1418","desc":"1215"},{"messageId":"1174","data":"1419","fix":"1420","desc":"1218"},{"messageId":"1174","data":"1421","fix":"1422","desc":"1209"},{"messageId":"1174","data":"1423","fix":"1424","desc":"1212"},{"messageId":"1174","data":"1425","fix":"1426","desc":"1215"},{"messageId":"1174","data":"1427","fix":"1428","desc":"1218"},{"messageId":"1174","data":"1429","fix":"1430","desc":"1209"},{"messageId":"1174","data":"1431","fix":"1432","desc":"1212"},{"messageId":"1174","data":"1433","fix":"1434","desc":"1215"},{"messageId":"1174","data":"1435","fix":"1436","desc":"1218"},{"messageId":"1174","data":"1437","fix":"1438","desc":"1209"},{"messageId":"1174","data":"1439","fix":"1440","desc":"1212"},{"messageId":"1174","data":"1441","fix":"1442","desc":"1215"},{"messageId":"1174","data":"1443","fix":"1444","desc":"1218"},{"desc":"1445","fix":"1446"},{"desc":"1447","fix":"1448"},{"desc":"1449","fix":"1450"},{"desc":"1451","fix":"1452"},"Update the dependencies array to be: [tripId, fetchTripData, setActiveTrip, activeTrip]",{"range":"1453","text":"1454"},"Update the dependencies array to be: [activeTrip, toast]",{"range":"1455","text":"1456"},"replaceWithAlt",{"alt":"1457"},{"range":"1458","text":"1459"},"Replace with `&apos;`.",{"alt":"1460"},{"range":"1461","text":"1462"},"Replace with `&lsquo;`.",{"alt":"1463"},{"range":"1464","text":"1465"},"Replace with `&#39;`.",{"alt":"1466"},{"range":"1467","text":"1468"},"Replace with `&rsquo;`.",{"alt":"1457"},{"range":"1469","text":"1470"},{"alt":"1460"},{"range":"1471","text":"1472"},{"alt":"1463"},{"range":"1473","text":"1474"},{"alt":"1466"},{"range":"1475","text":"1476"},{"alt":"1457"},{"range":"1477","text":"1478"},{"alt":"1460"},{"range":"1479","text":"1480"},{"alt":"1463"},{"range":"1481","text":"1482"},{"alt":"1466"},{"range":"1483","text":"1484"},"Update the dependencies array to be: [countryRestriction, initPlacesService]",{"range":"1485","text":"1486"},"Update the dependencies array to be: [query, language, performSearch]",{"range":"1487","text":"1488"},{"alt":"1489"},{"range":"1490","text":"1491"},"Replace with `&quot;`.",{"alt":"1492"},{"range":"1493","text":"1494"},"Replace with `&ldquo;`.",{"alt":"1495"},{"range":"1496","text":"1497"},"Replace with `&#34;`.",{"alt":"1498"},{"range":"1499","text":"1500"},"Replace with `&rdquo;`.",{"alt":"1489"},{"range":"1501","text":"1502"},{"alt":"1492"},{"range":"1503","text":"1504"},{"alt":"1495"},{"range":"1505","text":"1506"},{"alt":"1498"},{"range":"1507","text":"1508"},"Update the dependencies array to be: [map, places, optimizedResults, searchResult, createMarkers]",{"range":"1509","text":"1510"},{"alt":"1457"},{"range":"1511","text":"1478"},{"alt":"1460"},{"range":"1512","text":"1480"},{"alt":"1463"},{"range":"1513","text":"1482"},{"alt":"1466"},{"range":"1514","text":"1484"},{"alt":"1457"},{"range":"1515","text":"1516"},{"alt":"1460"},{"range":"1517","text":"1518"},{"alt":"1463"},{"range":"1519","text":"1520"},{"alt":"1466"},{"range":"1521","text":"1522"},{"alt":"1489"},{"range":"1523","text":"1524"},{"alt":"1492"},{"range":"1525","text":"1526"},{"alt":"1495"},{"range":"1527","text":"1528"},{"alt":"1498"},{"range":"1529","text":"1530"},{"alt":"1489"},{"range":"1531","text":"1532"},{"alt":"1492"},{"range":"1533","text":"1534"},{"alt":"1495"},{"range":"1535","text":"1536"},{"alt":"1498"},{"range":"1537","text":"1538"},"Update the dependencies array to be: [fetchTrips, sessionId]",{"range":"1539","text":"1540"},{"alt":"1457"},{"range":"1541","text":"1542"},{"alt":"1460"},{"range":"1543","text":"1544"},{"alt":"1463"},{"range":"1545","text":"1546"},{"alt":"1466"},{"range":"1547","text":"1548"},"Update the dependencies array to be: [sessionId, tripId, pathname, router, initialized, restoreLastTrip]",{"range":"1549","text":"1550"},"Update the dependencies array to be: [tripId, sessionId, activeTrip, initialized, saveActiveTripId]",{"range":"1551","text":"1552"},"Update the dependencies array to be: [placeId, name, address, latitude, longitude, loadPlaceDetails]",{"range":"1553","text":"1554"},{"alt":"1457"},{"range":"1555","text":"1556"},{"alt":"1460"},{"range":"1557","text":"1558"},{"alt":"1463"},{"range":"1559","text":"1560"},{"alt":"1466"},{"range":"1561","text":"1562"},{"alt":"1457"},{"range":"1563","text":"1564"},{"alt":"1460"},{"range":"1565","text":"1566"},{"alt":"1463"},{"range":"1567","text":"1568"},{"alt":"1466"},{"range":"1569","text":"1570"},{"alt":"1457"},{"range":"1571","text":"1572"},{"alt":"1460"},{"range":"1573","text":"1574"},{"alt":"1463"},{"range":"1575","text":"1576"},{"alt":"1466"},{"range":"1577","text":"1578"},{"alt":"1457"},{"range":"1579","text":"1580"},{"alt":"1460"},{"range":"1581","text":"1582"},{"alt":"1463"},{"range":"1583","text":"1584"},{"alt":"1466"},{"range":"1585","text":"1586"},{"alt":"1457"},{"range":"1587","text":"1588"},{"alt":"1460"},{"range":"1589","text":"1590"},{"alt":"1463"},{"range":"1591","text":"1592"},{"alt":"1466"},{"range":"1593","text":"1594"},{"alt":"1457"},{"range":"1595","text":"1596"},{"alt":"1460"},{"range":"1597","text":"1598"},{"alt":"1463"},{"range":"1599","text":"1600"},{"alt":"1466"},{"range":"1601","text":"1602"},{"alt":"1457"},{"range":"1603","text":"1604"},{"alt":"1460"},{"range":"1605","text":"1606"},{"alt":"1463"},{"range":"1607","text":"1608"},{"alt":"1466"},{"range":"1609","text":"1610"},{"alt":"1489"},{"range":"1611","text":"1612"},{"alt":"1492"},{"range":"1613","text":"1614"},{"alt":"1495"},{"range":"1615","text":"1616"},{"alt":"1498"},{"range":"1617","text":"1618"},{"alt":"1489"},{"range":"1619","text":"1620"},{"alt":"1492"},{"range":"1621","text":"1622"},{"alt":"1495"},{"range":"1623","text":"1624"},{"alt":"1498"},{"range":"1625","text":"1626"},{"alt":"1489"},{"range":"1627","text":"1628"},{"alt":"1492"},{"range":"1629","text":"1630"},{"alt":"1495"},{"range":"1631","text":"1632"},{"alt":"1498"},{"range":"1633","text":"1634"},{"alt":"1489"},{"range":"1635","text":"1636"},{"alt":"1492"},{"range":"1637","text":"1638"},{"alt":"1495"},{"range":"1639","text":"1640"},{"alt":"1498"},{"range":"1641","text":"1642"},{"alt":"1489"},{"range":"1643","text":"1644"},{"alt":"1492"},{"range":"1645","text":"1646"},{"alt":"1495"},{"range":"1647","text":"1648"},{"alt":"1498"},{"range":"1649","text":"1650"},{"alt":"1489"},{"range":"1651","text":"1652"},{"alt":"1492"},{"range":"1653","text":"1654"},{"alt":"1495"},{"range":"1655","text":"1656"},{"alt":"1498"},{"range":"1657","text":"1658"},{"alt":"1489"},{"range":"1659","text":"1660"},{"alt":"1492"},{"range":"1661","text":"1662"},{"alt":"1495"},{"range":"1663","text":"1664"},{"alt":"1498"},{"range":"1665","text":"1666"},{"alt":"1489"},{"range":"1667","text":"1668"},{"alt":"1492"},{"range":"1669","text":"1670"},{"alt":"1495"},{"range":"1671","text":"1672"},{"alt":"1498"},{"range":"1673","text":"1674"},{"alt":"1489"},{"range":"1675","text":"1676"},{"alt":"1492"},{"range":"1677","text":"1678"},{"alt":"1495"},{"range":"1679","text":"1680"},{"alt":"1498"},{"range":"1681","text":"1682"},{"alt":"1489"},{"range":"1683","text":"1684"},{"alt":"1492"},{"range":"1685","text":"1686"},{"alt":"1495"},{"range":"1687","text":"1688"},{"alt":"1498"},{"range":"1689","text":"1690"},{"alt":"1489"},{"range":"1691","text":"1692"},{"alt":"1492"},{"range":"1693","text":"1694"},{"alt":"1495"},{"range":"1695","text":"1696"},{"alt":"1498"},{"range":"1697","text":"1698"},{"alt":"1489"},{"range":"1699","text":"1700"},{"alt":"1492"},{"range":"1701","text":"1702"},{"alt":"1495"},{"range":"1703","text":"1704"},{"alt":"1498"},{"range":"1705","text":"1706"},{"alt":"1489"},{"range":"1707","text":"1708"},{"alt":"1492"},{"range":"1709","text":"1710"},{"alt":"1495"},{"range":"1711","text":"1712"},{"alt":"1498"},{"range":"1713","text":"1714"},{"alt":"1489"},{"range":"1715","text":"1716"},{"alt":"1492"},{"range":"1717","text":"1718"},{"alt":"1495"},{"range":"1719","text":"1720"},{"alt":"1498"},{"range":"1721","text":"1722"},"Update the dependencies array to be: [options.keyboardNavigation, isActive, voiceState, navigateToNext, navigateToPrevious, toggleVoiceNavigation, announceHelp]",{"range":"1723","text":"1724"},"Update the dependencies array to be: [map, config, onClick, onLongPress, animation, isSelected, isDarkMode, handleTouchStart, handleTouchEnd, handleMouseDown, handleMouseUp]",{"range":"1725","text":"1726"},"Update the dependencies array to be: [isLoaded, itinerary, config?.mapOptions, mapState]",{"range":"1727","text":"1728"},"Update the dependencies array to be: [mapState.displayMode, mapState.currentDay, itinerary, multiDayItinerary, addMarkerToMap, addRouteToMap]",{"range":"1729","text":"1730"},[2375,2413],"[tripId, fetchTripData, setActiveTrip, activeTrip]",[9289,9301],"[activeTrip, toast]","&apos;",[13766,13864],"\n            These notes will be visible only to you and won&apos;t be shared with the group\n          ","&lsquo;",[13766,13864],"\n            These notes will be visible only to you and won&lsquo;t be shared with the group\n          ","&#39;",[13766,13864],"\n            These notes will be visible only to you and won&#39;t be shared with the group\n          ","&rsquo;",[13766,13864],"\n            These notes will be visible only to you and won&rsquo;t be shared with the group\n          ",[14423,14608],"\n            Adding to your wishlist does not guarantee inclusion in the final group itinerary.\n            The optimization algorithm will consider all members&apos; preferences.\n          ",[14423,14608],"\n            Adding to your wishlist does not guarantee inclusion in the final group itinerary.\n            The optimization algorithm will consider all members&lsquo; preferences.\n          ",[14423,14608],"\n            Adding to your wishlist does not guarantee inclusion in the final group itinerary.\n            The optimization algorithm will consider all members&#39; preferences.\n          ",[14423,14608],"\n            Adding to your wishlist does not guarantee inclusion in the final group itinerary.\n            The optimization algorithm will consider all members&rsquo; preferences.\n          ",[6532,6602],"\n            Add places you&apos;d like to visit from the search\n          ",[6532,6602],"\n            Add places you&lsquo;d like to visit from the search\n          ",[6532,6602],"\n            Add places you&#39;d like to visit from the search\n          ",[6532,6602],"\n            Add places you&rsquo;d like to visit from the search\n          ",[2170,2190],"[countryRestriction, initPlacesService]",[4363,4380],"[query, language, performSearch]","&quot;",[16478,16480]," &quot;","&ldquo;",[16478,16480]," &ldquo;","&#34;",[16478,16480]," &#34;","&rdquo;",[16478,16480]," &rdquo;",[16487,16499],"&quot;\n          ",[16487,16499],"&ldquo;\n          ",[16487,16499],"&#34;\n          ",[16487,16499],"&rdquo;\n          ",[9945,9990],"[map, places, optimizedResults, searchResult, createMarkers]",[6532,6602],[6532,6602],[6532,6602],[6532,6602],[3439,3472],"You haven&apos;t created any trips yet",[3439,3472],"You haven&lsquo;t created any trips yet",[3439,3472],"You haven&#39;t created any trips yet",[3439,3472],"You haven&rsquo;t created any trips yet",[6046,6145],"\n                If left blank, a name like &quot;Trip 1\" will be automatically generated\n              ",[6046,6145],"\n                If left blank, a name like &ldquo;Trip 1\" will be automatically generated\n              ",[6046,6145],"\n                If left blank, a name like &#34;Trip 1\" will be automatically generated\n              ",[6046,6145],"\n                If left blank, a name like &rdquo;Trip 1\" will be automatically generated\n              ",[6046,6145],"\n                If left blank, a name like \"Trip 1&quot; will be automatically generated\n              ",[6046,6145],"\n                If left blank, a name like \"Trip 1&ldquo; will be automatically generated\n              ",[6046,6145],"\n                If left blank, a name like \"Trip 1&#34; will be automatically generated\n              ",[6046,6145],"\n                If left blank, a name like \"Trip 1&rdquo; will be automatically generated\n              ",[2326,2337],"[fetchTrips, sessionId]",[2968,2996],"You don&apos;t have any trips yet",[2968,2996],"You don&lsquo;t have any trips yet",[2968,2996],"You don&#39;t have any trips yet",[2968,2996],"You don&rsquo;t have any trips yet",[3189,3239],"[sessionId, tripId, pathname, router, initialized, restoreLastTrip]",[4144,4188],"[tripId, sessionId, activeTrip, initialized, saveActiveTripId]",[2131,2176],"[placeId, name, address, latitude, longitude, loadPlaceDetails]",[6741,6818],"\n            Search for a place you&apos;d like to add to your wishlist\n          ",[6741,6818],"\n            Search for a place you&lsquo;d like to add to your wishlist\n          ",[6741,6818],"\n            Search for a place you&#39;d like to add to your wishlist\n          ",[6741,6818],"\n            Search for a place you&rsquo;d like to add to your wishlist\n          ",[7188,7408],"\n            Note: Adding to your wishlist does not guarantee inclusion in the final group itinerary.\n            The optimization algorithm will consider all members&apos; preferences when creating the group plan.\n          ",[7188,7408],"\n            Note: Adding to your wishlist does not guarantee inclusion in the final group itinerary.\n            The optimization algorithm will consider all members&lsquo; preferences when creating the group plan.\n          ",[7188,7408],"\n            Note: Adding to your wishlist does not guarantee inclusion in the final group itinerary.\n            The optimization algorithm will consider all members&#39; preferences when creating the group plan.\n          ",[7188,7408],"\n            Note: Adding to your wishlist does not guarantee inclusion in the final group itinerary.\n            The optimization algorithm will consider all members&rsquo; preferences when creating the group plan.\n          ",[12437,12531],"\n                    Search for places you&apos;d like to visit during your trip\n                  ",[12437,12531],"\n                    Search for places you&lsquo;d like to visit during your trip\n                  ",[12437,12531],"\n                    Search for places you&#39;d like to visit during your trip\n                  ",[12437,12531],"\n                    Search for places you&rsquo;d like to visit during your trip\n                  ",[14786,14871],"\n                  You haven&apos;t added any places to your wishlist yet\n                ",[14786,14871],"\n                  You haven&lsquo;t added any places to your wishlist yet\n                ",[14786,14871],"\n                  You haven&#39;t added any places to your wishlist yet\n                ",[14786,14871],"\n                  You haven&rsquo;t added any places to your wishlist yet\n                ",[2817,2918],"\n                See who&apos;s editing what in real-time, track changes, resolve conflicts\n              ",[2817,2918],"\n                See who&lsquo;s editing what in real-time, track changes, resolve conflicts\n              ",[2817,2918],"\n                See who&#39;s editing what in real-time, track changes, resolve conflicts\n              ",[2817,2918],"\n                See who&rsquo;s editing what in real-time, track changes, resolve conflicts\n              ",[5557,5591],"• See who&apos;s currently editing what",[5557,5591],"• See who&lsquo;s currently editing what",[5557,5591],"• See who&#39;s currently editing what",[5557,5591],"• See who&rsquo;s currently editing what",[13558,13682],"\n                Monitor the browser&apos;s Network tab for API calls and Developer Tools for performance metrics.\n              ",[13558,13682],"\n                Monitor the browser&lsquo;s Network tab for API calls and Developer Tools for performance metrics.\n              ",[13558,13682],"\n                Monitor the browser&#39;s Network tab for API calls and Developer Tools for performance metrics.\n              ",[13558,13682],"\n                Monitor the browser&rsquo;s Network tab for API calls and Developer Tools for performance metrics.\n              ",[6725,6782],"Click &quot;Add Paris Places to Destinations\" to add test data",[6725,6782],"Click &ldquo;Add Paris Places to Destinations\" to add test data",[6725,6782],"Click &#34;Add Paris Places to Destinations\" to add test data",[6725,6782],"Click &rdquo;Add Paris Places to Destinations\" to add test data",[6725,6782],"Click \"Add Paris Places to Destinations&quot; to add test data",[6725,6782],"Click \"Add Paris Places to Destinations&ldquo; to add test data",[6725,6782],"Click \"Add Paris Places to Destinations&#34; to add test data",[6725,6782],"Click \"Add Paris Places to Destinations&rdquo; to add test data",[6861,6910],"Verify all places show &quot;未採用\" (Not Adopted) status",[6861,6910],"Verify all places show &ldquo;未採用\" (Not Adopted) status",[6861,6910],"Verify all places show &#34;未採用\" (Not Adopted) status",[6861,6910],"Verify all places show &rdquo;未採用\" (Not Adopted) status",[6861,6910],"Verify all places show \"未採用&quot; (Not Adopted) status",[6861,6910],"Verify all places show \"未採用&ldquo; (Not Adopted) status",[6861,6910],"Verify all places show \"未採用&#34; (Not Adopted) status",[6861,6910],"Verify all places show \"未採用&rdquo; (Not Adopted) status",[6992,7055],"Click &quot;Generate Optimized Plan\" button (when 2+ places present)",[6992,7055],"Click &ldquo;Generate Optimized Plan\" button (when 2+ places present)",[6992,7055],"Click &#34;Generate Optimized Plan\" button (when 2+ places present)",[6992,7055],"Click &rdquo;Generate Optimized Plan\" button (when 2+ places present)",[6992,7055],"Click \"Generate Optimized Plan&quot; button (when 2+ places present)",[6992,7055],"Click \"Generate Optimized Plan&ldquo; button (when 2+ places present)",[6992,7055],"Click \"Generate Optimized Plan&#34; button (when 2+ places present)",[6992,7055],"Click \"Generate Optimized Plan&rdquo; button (when 2+ places present)",[7079,7151],"Return to My Places and verify adopted places show &quot;✓ 採用済み\" with details",[7079,7151],"Return to My Places and verify adopted places show &ldquo;✓ 採用済み\" with details",[7079,7151],"Return to My Places and verify adopted places show &#34;✓ 採用済み\" with details",[7079,7151],"Return to My Places and verify adopted places show &rdquo;✓ 採用済み\" with details",[7079,7151],"Return to My Places and verify adopted places show \"✓ 採用済み&quot; with details",[7079,7151],"Return to My Places and verify adopted places show \"✓ 採用済み&ldquo; with details",[7079,7151],"Return to My Places and verify adopted places show \"✓ 採用済み&#34; with details",[7079,7151],"Return to My Places and verify adopted places show \"✓ 採用済み&rdquo; with details",[7566,7594]," All places show &quot;未採用\" badge",[7566,7594]," All places show &ldquo;未採用\" badge",[7566,7594]," All places show &#34;未採用\" badge",[7566,7594]," All places show &rdquo;未採用\" badge",[7566,7594]," All places show \"未採用&quot; badge",[7566,7594]," All places show \"未採用&ldquo; badge",[7566,7594]," All places show \"未採用&#34; badge",[7566,7594]," All places show \"未採用&rdquo; badge",[7654,7705]," Adopted places show &quot;✓ 採用済み (#N)\" with visit order",[7654,7705]," Adopted places show &ldquo;✓ 採用済み (#N)\" with visit order",[7654,7705]," Adopted places show &#34;✓ 採用済み (#N)\" with visit order",[7654,7705]," Adopted places show &rdquo;✓ 採用済み (#N)\" with visit order",[7654,7705]," Adopted places show \"✓ 採用済み (#N)&quot; with visit order",[7654,7705]," Adopted places show \"✓ 採用済み (#N)&ldquo; with visit order",[7654,7705]," Adopted places show \"✓ 採用済み (#N)&#34; with visit order",[7654,7705]," Adopted places show \"✓ 採用済み (#N)&rdquo; with visit order",[10188,10208],"\n                  &quot;",[10188,10208],"\n                  &ldquo;",[10188,10208],"\n                  &#34;",[10188,10208],"\n                  &rdquo;",[10226,10244],"&quot;\n                ",[10226,10244],"&ldquo;\n                ",[10226,10244],"&#34;\n                ",[10226,10244],"&rdquo;\n                ",[4279,4329],"[options.keyboardNavigation, isActive, voiceState, navigateToNext, navigateToPrevious, toggleVoiceNavigation, announceHelp]",[2409,2479],"[map, config, onClick, onLongPress, animation, isSelected, isDarkMode, handleTouchStart, handleTouchEnd, handleMouseDown, handleMouseUp]",[5765,5806],"[isLoaded, itinerary, config?.mapOptions, mapState]",[6738,6811],"[mapState.displayMode, mapState.currentDay, itinerary, multiDayItinerary, addMarkerToMap, addRouteToMap]"]